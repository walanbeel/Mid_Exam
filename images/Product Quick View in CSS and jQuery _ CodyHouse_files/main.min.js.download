/*! jQuery v3.0.0 | (c) jQuery Foundation | jquery.org/license */
!function(a,b){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){"use strict";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement("script");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q="3.0.0",r=function(a,b){return new r.fn.init(a,b)},s=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:f.call(this)},pushStack:function(a){var b=r.merge(this.constructor(),a);return b.prevObject=this,b},each:function(a){return r.each(this,a)},map:function(a){return this.pushStack(r.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(f.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:h,sort:c.sort,splice:c.splice},r.extend=r.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||r.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(r.isPlainObject(d)||(e=r.isArray(d)))?(e?(e=!1,f=c&&r.isArray(c)?c:[]):f=c&&r.isPlainObject(c)?c:{},g[b]=r.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},r.extend({expando:"jQuery"+(q+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===r.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=r.type(a);return("number"===b||"string"===b)&&!isNaN(a-parseFloat(a))},isPlainObject:function(a){var b,c;return a&&"[object Object]"===k.call(a)?(b=e(a))?(c=l.call(b,"constructor")&&b.constructor,"function"==typeof c&&m.call(c)===n):!0:!1},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?j[k.call(a)]||"object":typeof a},globalEval:function(a){p(a)},camelCase:function(a){return a.replace(t,"ms-").replace(u,v)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b){var c,d=0;if(w(a)){for(c=a.length;c>d;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(s,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(w(Object(a))?r.merge(c,"string"==typeof a?[a]:a):h.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:i.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,f=0,h=[];if(w(a))for(d=a.length;d>f;f++)e=b(a[f],f,c),null!=e&&h.push(e);else for(f in a)e=b(a[f],f,c),null!=e&&h.push(e);return g.apply([],h)},guid:1,proxy:function(a,b){var c,d,e;return"string"==typeof b&&(c=a[b],b=a,a=c),r.isFunction(a)?(d=f.call(arguments,2),e=function(){return a.apply(b||this,d.concat(f.call(arguments)))},e.guid=a.guid=a.guid||r.guid++,e):void 0},now:Date.now,support:o}),"function"==typeof Symbol&&(r.fn[Symbol.iterator]=c[Symbol.iterator]),r.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(a,b){j["[object "+b+"]"]=b.toLowerCase()});function w(a){var b=!!a&&"length"in a&&a.length,c=r.type(a);return"function"===c||r.isWindow(a)?!1:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var x=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ha(),z=ha(),A=ha(),B=function(a,b){return a===b&&(l=!0),0},C={}.hasOwnProperty,D=[],E=D.pop,F=D.push,G=D.push,H=D.slice,I=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},J="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",K="[\\x20\\t\\r\\n\\f]",L="(?:\\\\.|[\\w-]|[^\x00-\\xa0])+",M="\\["+K+"*("+L+")(?:"+K+"*([*^$|!~]?=)"+K+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+L+"))|)"+K+"*\\]",N=":("+L+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+M+")*)|.*)\\)|)",O=new RegExp(K+"+","g"),P=new RegExp("^"+K+"+|((?:^|[^\\\\])(?:\\\\.)*)"+K+"+$","g"),Q=new RegExp("^"+K+"*,"+K+"*"),R=new RegExp("^"+K+"*([>+~]|"+K+")"+K+"*"),S=new RegExp("="+K+"*([^\\]'\"]*?)"+K+"*\\]","g"),T=new RegExp(N),U=new RegExp("^"+L+"$"),V={ID:new RegExp("^#("+L+")"),CLASS:new RegExp("^\\.("+L+")"),TAG:new RegExp("^("+L+"|[*])"),ATTR:new RegExp("^"+M),PSEUDO:new RegExp("^"+N),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+K+"*(even|odd|(([+-]|)(\\d*)n|)"+K+"*(?:([+-]|)"+K+"*(\\d+)|))"+K+"*\\)|)","i"),bool:new RegExp("^(?:"+J+")$","i"),needsContext:new RegExp("^"+K+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+K+"*((?:-\\d)?\\d*)"+K+"*\\)|)(?=[^-]|$)","i")},W=/^(?:input|select|textarea|button)$/i,X=/^h\d$/i,Y=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,$=/[+~]/,_=new RegExp("\\\\([\\da-f]{1,6}"+K+"?|("+K+")|.)","ig"),aa=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},ba=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,ca=function(a,b){return b?"\x00"===a?"\ufffd":a.slice(0,-1)+"\\"+a.charCodeAt(a.length-1).toString(16)+" ":"\\"+a},da=function(){m()},ea=ta(function(a){return a.disabled===!0},{dir:"parentNode",next:"legend"});try{G.apply(D=H.call(v.childNodes),v.childNodes),D[v.childNodes.length].nodeType}catch(fa){G={apply:D.length?function(a,b){F.apply(a,H.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function ga(a,b,d,e){var f,h,j,k,l,o,r,s=b&&b.ownerDocument,w=b?b.nodeType:9;if(d=d||[],"string"!=typeof a||!a||1!==w&&9!==w&&11!==w)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==w&&(l=Z.exec(a)))if(f=l[1]){if(9===w){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(s&&(j=s.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(l[2])return G.apply(d,b.getElementsByTagName(a)),d;if((f=l[3])&&c.getElementsByClassName&&b.getElementsByClassName)return G.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+" "]&&(!q||!q.test(a))){if(1!==w)s=b,r=a;else if("object"!==b.nodeName.toLowerCase()){(k=b.getAttribute("id"))?k=k.replace(ba,ca):b.setAttribute("id",k=u),o=g(a),h=o.length;while(h--)o[h]="#"+k+" "+sa(o[h]);r=o.join(","),s=$.test(a)&&qa(b.parentNode)||b}if(r)try{return G.apply(d,s.querySelectorAll(r)),d}catch(x){}finally{k===u&&b.removeAttribute("id")}}}return i(a.replace(P,"$1"),b,d,e)}function ha(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ia(a){return a[u]=!0,a}function ja(a){var b=n.createElement("fieldset");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ka(a,b){var c=a.split("|"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function la(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&a.sourceIndex-b.sourceIndex;if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function na(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function oa(a){return function(b){return"label"in b&&b.disabled===a||"form"in b&&b.disabled===a||"form"in b&&b.disabled===!1&&(b.isDisabled===a||b.isDisabled!==!a&&("label"in b||!ea(b))!==a)}}function pa(a){return ia(function(b){return b=+b,ia(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function qa(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=ga.support={},f=ga.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=ga.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),v!==n&&(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener("unload",da,!1):e.attachEvent&&e.attachEvent("onunload",da)),c.attributes=ja(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ja(function(a){return a.appendChild(n.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=Y.test(n.getElementsByClassName),c.getById=ja(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}},d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(_,aa);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return"undefined"!=typeof b.getElementsByClassName&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=Y.test(n.querySelectorAll))&&(ja(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\r\\' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+K+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+K+"*(?:value|"+J+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ja(function(a){a.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var b=n.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+K+"*[*^$|!~]?="),2!==a.querySelectorAll(":enabled").length&&q.push(":enabled",":disabled"),o.appendChild(a).disabled=!0,2!==a.querySelectorAll(":disabled").length&&q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=Y.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ja(function(a){c.disconnectedMatch=s.call(a,"*"),s.call(a,"[s!='']:x"),r.push("!=",N)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=Y.test(o.compareDocumentPosition),t=b||Y.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?I(k,a)-I(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?I(k,a)-I(k,b):0;if(e===f)return la(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?la(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},ga.matches=function(a,b){return ga(a,null,null,b)},ga.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(S,"='$1']"),c.matchesSelector&&p&&!A[b+" "]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return ga(b,n,null,[a]).length>0},ga.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},ga.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&C.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},ga.escape=function(a){return(a+"").replace(ba,ca)},ga.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},ga.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=ga.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=ga.selectors={cacheLength:50,createPseudo:ia,match:V,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(_,aa),a[3]=(a[3]||a[4]||a[5]||"").replace(_,aa),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||ga.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&ga.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return V.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&T.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(_,aa).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+K+")"+a+"("+K+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=ga.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(O," ")+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||ga.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,"$1"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||"")||ga.error("unsupported lang: "+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return X.test(a.nodeName)},input:function(a){return W.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:pa(function(){return[0]}),last:pa(function(a,b){return[b-1]}),eq:pa(function(a,b,c){return[0>c?c+b:c]}),even:pa(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:pa(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:pa(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:pa(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=ma(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=na(b);function ra(){}ra.prototype=d.filters=d.pseudos,d.setFilters=new ra,g=ga.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=Q.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=R.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(P," ")}),h=h.slice(c.length));for(g in d.filter)!(e=V[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?ga.error(a):z(a,i).slice(0)};function sa(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function ta(a,b,c){var d=b.dir,e=b.next,f=e||d,g=c&&"parentNode"===f,h=x++;return b.first?function(b,c,e){while(b=b[d])if(1===b.nodeType||g)return a(b,c,e)}:function(b,c,i){var j,k,l,m=[w,h];if(i){while(b=b[d])if((1===b.nodeType||g)&&a(b,c,i))return!0}else while(b=b[d])if(1===b.nodeType||g)if(l=b[u]||(b[u]={}),k=l[b.uniqueID]||(l[b.uniqueID]={}),e&&e===b.nodeName.toLowerCase())b=b[d]||b;else{if((j=k[f])&&j[0]===w&&j[1]===h)return m[2]=j[2];if(k[f]=m,m[2]=a(b,c,i))return!0}}}function ua(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function va(a,b,c){for(var d=0,e=b.length;e>d;d++)ga(a,b[d],c);return c}function wa(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function xa(a,b,c,d,e,f){return d&&!d[u]&&(d=xa(d)),e&&!e[u]&&(e=xa(e,f)),ia(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||va(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:wa(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=wa(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?I(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=wa(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):G.apply(g,r)})}function ya(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=ta(function(a){return a===b},h,!0),l=ta(function(a){return I(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ta(ua(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return xa(i>1&&ua(m),i>1&&sa(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(P,"$1"),c,e>i&&ya(a.slice(i,e)),f>e&&ya(a=a.slice(e)),f>e&&sa(a))}m.push(c)}return ua(m)}function za(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s="0",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG("*",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=E.call(i));u=wa(u)}G.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&ga.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ia(f):f}return h=ga.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=ya(b[c]),f[u]?d.push(f):e.push(f);f=A(a,za(e,d)),f.selector=a}return f},i=ga.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(_,aa),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=V.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(_,aa),$.test(j[0].type)&&qa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&sa(j),!a)return G.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,!b||$.test(a)&&qa(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ja(function(a){return 1&a.compareDocumentPosition(n.createElement("fieldset"))}),ja(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||ka("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ja(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ka("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ja(function(a){return null==a.getAttribute("disabled")})||ka(J,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),ga}(a);r.find=x,r.expr=x.selectors,r.expr[":"]=r.expr.pseudos,r.uniqueSort=r.unique=x.uniqueSort,r.text=x.getText,r.isXMLDoc=x.isXML,r.contains=x.contains,r.escapeSelector=x.escape;var y=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&r(a).is(c))break;d.push(a)}return d},z=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},A=r.expr.match.needsContext,B=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,C=/^.[^:#\[\.,]*$/;function D(a,b,c){if(r.isFunction(b))return r.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return r.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(C.test(b))return r.filter(b,a,c);b=r.filter(b,a)}return r.grep(a,function(a){return i.call(b,a)>-1!==c&&1===a.nodeType})}r.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if("string"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;d>b;b++)if(r.contains(e[b],this))return!0}));for(c=this.pushStack([]),b=0;d>b;b++)r.find(a,e[b],c);return d>1?r.uniqueSort(c):c},filter:function(a){return this.pushStack(D(this,a||[],!1))},not:function(a){return this.pushStack(D(this,a||[],!0))},is:function(a){return!!D(this,"string"==typeof a&&A.test(a)?r(a):a||[],!1).length}});var E,F=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,G=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||E,"string"==typeof a){if(e="<"===a[0]&&">"===a[a.length-1]&&a.length>=3?[null,a,null]:F.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),B.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};G.prototype=r.fn,E=r(d);var H=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(r.contains(this,b[a]))return!0})},closest:function(a,b){var c,d=0,e=this.length,f=[],g="string"!=typeof a&&r(a);if(!A.test(a))for(;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&r.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?r.uniqueSort(f):f)},index:function(a){return a?"string"==typeof a?i.call(r(a),this[0]):i.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function J(a,b){while((a=a[b])&&1!==a.nodeType);return a}r.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return y(a,"parentNode")},parentsUntil:function(a,b,c){return y(a,"parentNode",c)},next:function(a){return J(a,"nextSibling")},prev:function(a){return J(a,"previousSibling")},nextAll:function(a){return y(a,"nextSibling")},prevAll:function(a){return y(a,"previousSibling")},nextUntil:function(a,b,c){return y(a,"nextSibling",c)},prevUntil:function(a,b,c){return y(a,"previousSibling",c)},siblings:function(a){return z((a.parentNode||{}).firstChild,a)},children:function(a){return z(a.firstChild)},contents:function(a){return a.contentDocument||r.merge([],a.childNodes)}},function(a,b){r.fn[a]=function(c,d){var e=r.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=r.filter(d,e)),this.length>1&&(I[a]||r.uniqueSort(e),H.test(a)&&e.reverse()),this.pushStack(e)}});var K=/\S+/g;function L(a){var b={};return r.each(a.match(K)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a="string"==typeof a?L(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:"")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){r.each(b,function(b,c){r.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&"string"!==r.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return r.each(arguments,function(a,b){var c;while((c=r.inArray(b,f,c))>-1)f.splice(c,1),h>=c&&h--}),this},has:function(a){return a?r.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c="",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=""),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function M(a){return a}function N(a){throw a}function O(a,b,c){var d;try{a&&r.isFunction(d=a.promise)?d.call(a).done(b).fail(c):a&&r.isFunction(d=a.then)?d.call(a,b,c):b.call(void 0,a)}catch(a){c.call(void 0,a)}}r.extend({Deferred:function(b){var c=[["notify","progress",r.Callbacks("memory"),r.Callbacks("memory"),2],["resolve","done",r.Callbacks("once memory"),r.Callbacks("once memory"),0,"resolved"],["reject","fail",r.Callbacks("once memory"),r.Callbacks("once memory"),1,"rejected"]],d="pending",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},"catch":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+"With"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(f>b)){if(a=d.apply(h,i),a===c.promise())throw new TypeError("Thenable self-resolution");j=a&&("object"==typeof a||"function"==typeof a)&&a.then,r.isFunction(j)?e?j.call(a,g(f,c,M,e),g(f,c,N,e)):(f++,j.call(a,g(f,c,M,e),g(f,c,N,e),g(f,c,M,c.notifyWith))):(d!==M&&(h=void 0,i=[a]),(e||c.resolveWith)(h,i))}},k=e?j:function(){try{j()}catch(a){r.Deferred.exceptionHook&&r.Deferred.exceptionHook(a,k.stackTrace),b+1>=f&&(d!==N&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:M,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:M)),c[2][3].add(g(0,a,r.isFunction(d)?d:N))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+"With"](this===f?void 0:this,arguments),this},f[b[0]+"With"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(1>=b&&(O(a,g.done(h(c)).resolve,g.reject),"pending"===g.state()||r.isFunction(e[c]&&e[c].then)))return g.then();while(c--)O(e[c],h(c),g.reject);return g.promise()}});var P=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook=function(b,c){a.console&&a.console.warn&&b&&P.test(b.name)&&a.console.warn("jQuery.Deferred exception: "+b.message,b.stack,c)};var Q=r.Deferred();r.fn.ready=function(a){return Q.then(a),this},r.extend({isReady:!1,readyWait:1,holdReady:function(a){a?r.readyWait++:r.ready(!0)},ready:function(a){(a===!0?--r.readyWait:r.isReady)||(r.isReady=!0,a!==!0&&--r.readyWait>0||Q.resolveWith(d,[r]))}}),r.ready.then=Q.then;function R(){d.removeEventListener("DOMContentLoaded",R),a.removeEventListener("load",R),r.ready()}"complete"===d.readyState||"loading"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener("DOMContentLoaded",R),a.addEventListener("load",R));var S=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===r.type(c)){e=!0;for(h in c)S(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){
return j.call(r(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},T=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function U(){this.expando=r.expando+U.uid++}U.uid=1,U.prototype={cache:function(a){var b=a[this.expando];return b||(b={},T(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if("string"==typeof b)e[r.camelCase(b)]=c;else for(d in b)e[r.camelCase(d)]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][r.camelCase(b)]},access:function(a,b,c){return void 0===b||b&&"string"==typeof b&&void 0===c?this.get(a,b):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d=a[this.expando];if(void 0!==d){if(void 0!==b){r.isArray(b)?b=b.map(r.camelCase):(b=r.camelCase(b),b=b in d?[b]:b.match(K)||[]),c=b.length;while(c--)delete d[b[c]]}(void 0===b||r.isEmptyObject(d))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!r.isEmptyObject(b)}};var V=new U,W=new U,X=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Y=/[A-Z]/g;function Z(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d="data-"+b.replace(Y,"-$&").toLowerCase(),c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:X.test(c)?JSON.parse(c):c}catch(e){}W.set(a,b,c)}else c=void 0;return c}r.extend({hasData:function(a){return W.hasData(a)||V.hasData(a)},data:function(a,b,c){return W.access(a,b,c)},removeData:function(a,b){W.remove(a,b)},_data:function(a,b,c){return V.access(a,b,c)},_removeData:function(a,b){V.remove(a,b)}}),r.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=W.get(f),1===f.nodeType&&!V.get(f,"hasDataAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=r.camelCase(d.slice(5)),Z(f,d,e[d])));V.set(f,"hasDataAttrs",!0)}return e}return"object"==typeof a?this.each(function(){W.set(this,a)}):S(this,function(b){var c;if(f&&void 0===b){if(c=W.get(f,a),void 0!==c)return c;if(c=Z(f,a),void 0!==c)return c}else this.each(function(){W.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){W.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=V.get(a,b),c&&(!d||r.isArray(c)?d=V.access(a,b,r.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return V.get(a,c)||V.access(a,c,{empty:r.Callbacks("once memory").add(function(){V.remove(a,[b+"queue",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?r.queue(this[0],a):void 0===b?this:this.each(function(){var c=r.queue(this,a,b);r._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&r.dequeue(this,a)})},dequeue:function(a){return this.each(function(){r.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=r.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=V.get(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var $=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,_=new RegExp("^(?:([+-])=|)("+$+")([a-z%]*)$","i"),aa=["Top","Right","Bottom","Left"],ba=function(a,b){return a=b||a,"none"===a.style.display||""===a.style.display&&r.contains(a.ownerDocument,a)&&"none"===r.css(a,"display")},ca=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};function da(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return r.css(a,b,"")},i=h(),j=c&&c[3]||(r.cssNumber[b]?"":"px"),k=(r.cssNumber[b]||"px"!==j&&+i)&&_.exec(r.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||".5",k/=f,r.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var ea={};function fa(a){var b,c=a.ownerDocument,d=a.nodeName,e=ea[d];return e?e:(b=c.body.appendChild(c.createElement(d)),e=r.css(b,"display"),b.parentNode.removeChild(b),"none"===e&&(e="block"),ea[d]=e,e)}function ga(a,b){for(var c,d,e=[],f=0,g=a.length;g>f;f++)d=a[f],d.style&&(c=d.style.display,b?("none"===c&&(e[f]=V.get(d,"display")||null,e[f]||(d.style.display="")),""===d.style.display&&ba(d)&&(e[f]=fa(d))):"none"!==c&&(e[f]="none",V.set(d,"display",c)));for(f=0;g>f;f++)null!=e[f]&&(a[f].style.display=e[f]);return a}r.fn.extend({show:function(){return ga(this,!0)},hide:function(){return ga(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){ba(this)?r(this).show():r(this).hide()})}});var ha=/^(?:checkbox|radio)$/i,ia=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,ja=/^$|\/(?:java|ecma)script/i,ka={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ka.optgroup=ka.option,ka.tbody=ka.tfoot=ka.colgroup=ka.caption=ka.thead,ka.th=ka.td;function la(a,b){var c="undefined"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||"*"):"undefined"!=typeof a.querySelectorAll?a.querySelectorAll(b||"*"):[];return void 0===b||b&&r.nodeName(a,b)?r.merge([a],c):c}function ma(a,b){for(var c=0,d=a.length;d>c;c++)V.set(a[c],"globalEval",!b||V.get(b[c],"globalEval"))}var na=/<|&#?\w+;/;function oa(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],n=0,o=a.length;o>n;n++)if(f=a[n],f||0===f)if("object"===r.type(f))r.merge(m,f.nodeType?[f]:f);else if(na.test(f)){g=g||l.appendChild(b.createElement("div")),h=(ia.exec(f)||["",""])[1].toLowerCase(),i=ka[h]||ka._default,g.innerHTML=i[1]+r.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;r.merge(m,g.childNodes),g=l.firstChild,g.textContent=""}else m.push(b.createTextNode(f));l.textContent="",n=0;while(f=m[n++])if(d&&r.inArray(f,d)>-1)e&&e.push(f);else if(j=r.contains(f.ownerDocument,f),g=la(l.appendChild(f),"script"),j&&ma(g),c){k=0;while(f=g[k++])ja.test(f.type||"")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement("div")),c=d.createElement("input");c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),b.appendChild(c),o.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML="<textarea>x</textarea>",o.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var pa=d.documentElement,qa=/^key/,ra=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,sa=/^([^.]*)(?:\.(.+)|)/;function ta(){return!0}function ua(){return!1}function va(){try{return d.activeElement}catch(a){}}function wa(a,b,c,d,e,f){var g,h;if("object"==typeof b){"string"!=typeof c&&(d=d||c,c=void 0);for(h in b)wa(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&("string"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=ua;else if(!e)return a;return 1===f&&(g=e,e=function(a){return r().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=r.guid++)),a.each(function(){r.event.add(this,b,e,d,c)})}r.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.get(a);if(q){c.handler&&(f=c,c=f.handler,e=f.selector),e&&r.find.matchesSelector(pa,e),c.guid||(c.guid=r.guid++),(i=q.events)||(i=q.events={}),(g=q.handle)||(g=q.handle=function(b){return"undefined"!=typeof r&&r.event.triggered!==b.type?r.event.dispatch.apply(a,arguments):void 0}),b=(b||"").match(K)||[""],j=b.length;while(j--)h=sa.exec(b[j])||[],n=p=h[1],o=(h[2]||"").split(".").sort(),n&&(l=r.event.special[n]||{},n=(e?l.delegateType:l.bindType)||n,l=r.event.special[n]||{},k=r.extend({type:n,origType:p,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&r.expr.match.needsContext.test(e),namespace:o.join(".")},f),(m=i[n])||(m=i[n]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,o,g)!==!1||a.addEventListener&&a.addEventListener(n,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),r.event.global[n]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q=V.hasData(a)&&V.get(a);if(q&&(i=q.events)){b=(b||"").match(K)||[""],j=b.length;while(j--)if(h=sa.exec(b[j])||[],n=p=h[1],o=(h[2]||"").split(".").sort(),n){l=r.event.special[n]||{},n=(d?l.delegateType:l.bindType)||n,m=i[n]||[],h=h[2]&&new RegExp("(^|\\.)"+o.join("\\.(?:.*\\.|)")+"(\\.|$)"),g=f=m.length;while(f--)k=m[f],!e&&p!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&("**"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,o,q.handle)!==!1||r.removeEvent(a,n,q.handle),delete i[n])}else for(n in i)r.event.remove(a,n+b[j],c,d,!0);r.isEmptyObject(i)&&V.remove(a,"handle events")}},dispatch:function(a){var b=r.event.fix(a),c,d,e,f,g,h,i=new Array(arguments.length),j=(V.get(this,"events")||{})[b.type]||[],k=r.event.special[b.type]||{};for(i[0]=b,c=1;c<arguments.length;c++)i[c]=arguments[c];if(b.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,b)!==!1){h=r.event.handlers.call(this,b,j),c=0;while((f=h[c++])&&!b.isPropagationStopped()){b.currentTarget=f.elem,d=0;while((g=f.handlers[d++])&&!b.isImmediatePropagationStopped())b.rnamespace&&!b.rnamespace.test(g.namespace)||(b.handleObj=g,b.data=g.data,e=((r.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==e&&(b.result=e)===!1&&(b.preventDefault(),b.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,b),b.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&("click"!==a.type||isNaN(a.button)||a.button<1))for(;i!==this;i=i.parentNode||this)if(1===i.nodeType&&(i.disabled!==!0||"click"!==a.type)){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?r(e,this).index(i)>-1:r.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},addProp:function(a,b){Object.defineProperty(r.Event.prototype,a,{enumerable:!0,configurable:!0,get:r.isFunction(b)?function(){return this.originalEvent?b(this.originalEvent):void 0}:function(){return this.originalEvent?this.originalEvent[a]:void 0},set:function(b){Object.defineProperty(this,a,{enumerable:!0,configurable:!0,writable:!0,value:b})}})},fix:function(a){return a[r.expando]?a:new r.Event(a)},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==va()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===va()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&r.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(a){return r.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},r.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},r.Event=function(a,b){return this instanceof r.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?ta:ua,this.target=a.target&&3===a.target.nodeType?a.target.parentNode:a.target,this.currentTarget=a.currentTarget,this.relatedTarget=a.relatedTarget):this.type=a,b&&r.extend(this,b),this.timeStamp=a&&a.timeStamp||r.now(),void(this[r.expando]=!0)):new r.Event(a,b)},r.Event.prototype={constructor:r.Event,isDefaultPrevented:ua,isPropagationStopped:ua,isImmediatePropagationStopped:ua,isSimulated:!1,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=ta,a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=ta,a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=ta,a&&!this.isSimulated&&a.stopImmediatePropagation(),this.stopPropagation()}},r.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(a){var b=a.button;return null==a.which&&qa.test(a.type)?null!=a.charCode?a.charCode:a.keyCode:!a.which&&void 0!==b&&ra.test(a.type)?1&b?1:2&b?3:4&b?2:0:a.which}},r.event.addProp),r.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){r.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||r.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),r.fn.extend({on:function(a,b,c,d){return wa(this,a,b,c,d)},one:function(a,b,c,d){return wa(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,r(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&"function"!=typeof b||(c=b,b=void 0),c===!1&&(c=ua),this.each(function(){r.event.remove(this,a,c,b)})}});var xa=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,ya=/<script|<style|<link/i,za=/checked\s*(?:[^=]|=\s*.checked.)/i,Aa=/^true\/(.*)/,Ba=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Ca(a,b){return r.nodeName(a,"table")&&r.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a:a}function Da(a){return a.type=(null!==a.getAttribute("type"))+"/"+a.type,a}function Ea(a){var b=Aa.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function Fa(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(V.hasData(a)&&(f=V.access(a),g=V.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)r.event.add(b,e,j[e][c])}W.hasData(a)&&(h=W.access(a),i=r.extend({},h),W.set(b,i))}}function Ga(a,b){var c=b.nodeName.toLowerCase();"input"===c&&ha.test(a.type)?b.checked=a.checked:"input"!==c&&"textarea"!==c||(b.defaultValue=a.defaultValue)}function Ha(a,b,c,d){b=g.apply([],b);var e,f,h,i,j,k,l=0,m=a.length,n=m-1,q=b[0],s=r.isFunction(q);if(s||m>1&&"string"==typeof q&&!o.checkClone&&za.test(q))return a.each(function(e){var f=a.eq(e);s&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(m&&(e=oa(b,a[0].ownerDocument,!1,a,d),f=e.firstChild,1===e.childNodes.length&&(e=f),f||d)){for(h=r.map(la(e,"script"),Da),i=h.length;m>l;l++)j=e,l!==n&&(j=r.clone(j,!0,!0),i&&r.merge(h,la(j,"script"))),c.call(a[l],j,l);if(i)for(k=h[h.length-1].ownerDocument,r.map(h,Ea),l=0;i>l;l++)j=h[l],ja.test(j.type||"")&&!V.access(j,"globalEval")&&r.contains(k,j)&&(j.src?r._evalUrl&&r._evalUrl(j.src):p(j.textContent.replace(Ba,""),k))}return a}function Ia(a,b,c){for(var d,e=b?r.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||r.cleanData(la(d)),d.parentNode&&(c&&r.contains(d.ownerDocument,d)&&ma(la(d,"script")),d.parentNode.removeChild(d));return a}r.extend({htmlPrefilter:function(a){return a.replace(xa,"<$1></$2>")},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=r.contains(a.ownerDocument,a);if(!(o.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||r.isXMLDoc(a)))for(g=la(h),f=la(a),d=0,e=f.length;e>d;d++)Ga(f[d],g[d]);if(b)if(c)for(f=f||la(a),g=g||la(h),d=0,e=f.length;e>d;d++)Fa(f[d],g[d]);else Fa(a,h);return g=la(h,"script"),g.length>0&&ma(g,!i&&la(a,"script")),h},cleanData:function(a){for(var b,c,d,e=r.event.special,f=0;void 0!==(c=a[f]);f++)if(T(c)){if(b=c[V.expando]){if(b.events)for(d in b.events)e[d]?r.event.remove(c,d):r.removeEvent(c,d,b.handle);c[V.expando]=void 0}c[W.expando]&&(c[W.expando]=void 0)}}}),r.fn.extend({detach:function(a){return Ia(this,a,!0)},remove:function(a){return Ia(this,a)},text:function(a){return S(this,function(a){return void 0===a?r.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return Ha(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ca(this,a);b.appendChild(a)}})},prepend:function(){return Ha(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ca(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return Ha(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return Ha(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(r.cleanData(la(a,!1)),a.textContent="");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return r.clone(this,a,b)})},html:function(a){return S(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if("string"==typeof a&&!ya.test(a)&&!ka[(ia.exec(a)||["",""])[1].toLowerCase()]){a=r.htmlPrefilter(a);try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(r.cleanData(la(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return Ha(this,arguments,function(b){var c=this.parentNode;r.inArray(this,a)<0&&(r.cleanData(la(this)),c&&c.replaceChild(b,this))},a)}}),r.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){r.fn[a]=function(a){for(var c,d=[],e=r(a),f=e.length-1,g=0;f>=g;g++)c=g===f?this:this.clone(!0),r(e[g])[b](c),h.apply(d,c.get());return this.pushStack(d)}});var Ja=/^margin/,Ka=new RegExp("^("+$+")(?!px)[a-z%]+$","i"),La=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)};!function(){function b(){if(i){i.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",i.innerHTML="",pa.appendChild(h);var b=a.getComputedStyle(i);c="1%"!==b.top,g="2px"===b.marginLeft,e="4px"===b.width,i.style.marginRight="50%",f="4px"===b.marginRight,pa.removeChild(h),i=null}}var c,e,f,g,h=d.createElement("div"),i=d.createElement("div");i.style&&(i.style.backgroundClip="content-box",i.cloneNode(!0).style.backgroundClip="",o.clearCloneStyle="content-box"===i.style.backgroundClip,h.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",h.appendChild(i),r.extend(o,{pixelPosition:function(){return b(),c},boxSizingReliable:function(){return b(),e},pixelMarginRight:function(){return b(),f},reliableMarginLeft:function(){return b(),g}}))}();function Ma(a,b,c){var d,e,f,g,h=a.style;return c=c||La(a),c&&(g=c.getPropertyValue(b)||c[b],""!==g||r.contains(a.ownerDocument,a)||(g=r.style(a,b)),!o.pixelMarginRight()&&Ka.test(g)&&Ja.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0!==g?g+"":g}function Na(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Oa=/^(none|table(?!-c[ea]).+)/,Pa={position:"absolute",visibility:"hidden",display:"block"},Qa={letterSpacing:"0",fontWeight:"400"},Ra=["Webkit","Moz","ms"],Sa=d.createElement("div").style;function Ta(a){if(a in Sa)return a;var b=a[0].toUpperCase()+a.slice(1),c=Ra.length;while(c--)if(a=Ra[c]+b,a in Sa)return a}function Ua(a,b,c){var d=_.exec(b);return d?Math.max(0,d[2]-(c||0))+(d[3]||"px"):b}function Va(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=r.css(a,c+aa[f],!0,e)),d?("content"===c&&(g-=r.css(a,"padding"+aa[f],!0,e)),"margin"!==c&&(g-=r.css(a,"border"+aa[f]+"Width",!0,e))):(g+=r.css(a,"padding"+aa[f],!0,e),"padding"!==c&&(g+=r.css(a,"border"+aa[f]+"Width",!0,e)));return g}function Wa(a,b,c){var d,e=!0,f=La(a),g="border-box"===r.css(a,"boxSizing",!1,f);if(a.getClientRects().length&&(d=a.getBoundingClientRect()[b]),0>=d||null==d){if(d=Ma(a,b,f),(0>d||null==d)&&(d=a.style[b]),Ka.test(d))return d;e=g&&(o.boxSizingReliable()||d===a.style[b]),d=parseFloat(d)||0}return d+Va(a,b,c||(g?"border":"content"),e,f)+"px"}r.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Ma(a,"opacity");return""===c?"1":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=r.camelCase(b),i=a.style;return b=r.cssProps[h]||(r.cssProps[h]=Ta(h)||h),g=r.cssHooks[b]||r.cssHooks[h],void 0===c?g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,"string"===f&&(e=_.exec(c))&&e[1]&&(c=da(a,b,e),f="number"),null!=c&&c===c&&("number"===f&&(c+=e&&e[3]||(r.cssNumber[h]?"":"px")),o.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),g&&"set"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=r.camelCase(b);return b=r.cssProps[h]||(r.cssProps[h]=Ta(h)||h),g=r.cssHooks[b]||r.cssHooks[h],g&&"get"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=Ma(a,b,d)),"normal"===e&&b in Qa&&(e=Qa[b]),""===c||c?(f=parseFloat(e),c===!0||isFinite(f)?f||0:e):e}}),r.each(["height","width"],function(a,b){r.cssHooks[b]={get:function(a,c,d){return c?!Oa.test(r.css(a,"display"))||a.getClientRects().length&&a.getBoundingClientRect().width?Wa(a,b,d):ca(a,Pa,function(){return Wa(a,b,d)}):void 0},set:function(a,c,d){var e,f=d&&La(a),g=d&&Va(a,b,d,"border-box"===r.css(a,"boxSizing",!1,f),f);return g&&(e=_.exec(c))&&"px"!==(e[3]||"px")&&(a.style[b]=c,c=r.css(a,b)),Ua(a,c,g)}}}),r.cssHooks.marginLeft=Na(o.reliableMarginLeft,function(a,b){return b?(parseFloat(Ma(a,"marginLeft"))||a.getBoundingClientRect().left-ca(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+"px":void 0}),r.each({margin:"",padding:"",border:"Width"},function(a,b){r.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+aa[d]+b]=f[d]||f[d-2]||f[0];return e}},Ja.test(a)||(r.cssHooks[a+b].set=Ua)}),r.fn.extend({css:function(a,b){return S(this,function(a,b,c){var d,e,f={},g=0;if(r.isArray(b)){for(d=La(a),e=b.length;e>g;g++)f[b[g]]=r.css(a,b[g],!1,d);return f}return void 0!==c?r.style(a,b,c):r.css(a,b)},a,b,arguments.length>1)}});function Xa(a,b,c,d,e){return new Xa.prototype.init(a,b,c,d,e)}r.Tween=Xa,Xa.prototype={constructor:Xa,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||r.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(r.cssNumber[c]?"":"px")},cur:function(){var a=Xa.propHooks[this.prop];return a&&a.get?a.get(this):Xa.propHooks._default.get(this)},run:function(a){var b,c=Xa.propHooks[this.prop];return this.options.duration?this.pos=b=r.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Xa.propHooks._default.set(this),this}},Xa.prototype.init.prototype=Xa.prototype,Xa.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=r.css(a.elem,a.prop,""),b&&"auto"!==b?b:0)},set:function(a){r.fx.step[a.prop]?r.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[r.cssProps[a.prop]]&&!r.cssHooks[a.prop]?a.elem[a.prop]=a.now:r.style(a.elem,a.prop,a.now+a.unit)}}},Xa.propHooks.scrollTop=Xa.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},r.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:"swing"},r.fx=Xa.prototype.init,r.fx.step={};var Ya,Za,$a=/^(?:toggle|show|hide)$/,_a=/queueHooks$/;function ab(){Za&&(a.requestAnimationFrame(ab),r.fx.tick())}function bb(){return a.setTimeout(function(){Ya=void 0}),Ya=r.now()}function cb(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=aa[d],e["margin"+c]=e["padding"+c]=a;return b&&(e.opacity=e.width=a),e}function db(a,b,c){for(var d,e=(gb.tweeners[b]||[]).concat(gb.tweeners["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function eb(a,b,c){var d,e,f,g,h,i,j,k,l="width"in b||"height"in b,m=this,n={},o=a.style,p=a.nodeType&&ba(a),q=V.get(a,"fxshow");c.queue||(g=r._queueHooks(a,"fx"),null==g.unqueued&&(g.unqueued=0,h=g.empty.fire,g.empty.fire=function(){g.unqueued||h()}),g.unqueued++,m.always(function(){m.always(function(){g.unqueued--,r.queue(a,"fx").length||g.empty.fire()})}));for(d in b)if(e=b[d],$a.test(e)){if(delete b[d],f=f||"toggle"===e,e===(p?"hide":"show")){if("show"!==e||!q||void 0===q[d])continue;p=!0}n[d]=q&&q[d]||r.style(a,d)}if(i=!r.isEmptyObject(b),i||!r.isEmptyObject(n)){l&&1===a.nodeType&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=q&&q.display,null==j&&(j=V.get(a,"display")),k=r.css(a,"display"),"none"===k&&(j?k=j:(ga([a],!0),j=a.style.display||j,k=r.css(a,"display"),ga([a]))),("inline"===k||"inline-block"===k&&null!=j)&&"none"===r.css(a,"float")&&(i||(m.done(function(){o.display=j}),null==j&&(k=o.display,j="none"===k?"":k)),o.display="inline-block")),c.overflow&&(o.overflow="hidden",m.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]})),i=!1;for(d in n)i||(q?"hidden"in q&&(p=q.hidden):q=V.access(a,"fxshow",{display:j}),f&&(q.hidden=!p),p&&ga([a],!0),m.done(function(){p||ga([a]),V.remove(a,"fxshow");for(d in n)r.style(a,d,n[d])})),i=db(p?q[d]:0,d,m),d in q||(q[d]=i.start,p&&(i.end=i.start,i.start=0))}}function fb(a,b){var c,d,e,f,g;for(c in a)if(d=r.camelCase(c),e=b[d],f=a[c],r.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=r.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function gb(a,b,c){var d,e,f=0,g=gb.prefilters.length,h=r.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Ya||bb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:r.extend({},b),opts:r.extend(!0,{specialEasing:{},easing:r.easing._default},c),originalProperties:b,originalOptions:c,startTime:Ya||bb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=r.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(fb(k,j.opts.specialEasing);g>f;f++)if(d=gb.prefilters[f].call(j,a,k,j.opts))return r.isFunction(d.stop)&&(r._queueHooks(j.elem,j.opts.queue).stop=r.proxy(d.stop,d)),d;return r.map(k,db,j),r.isFunction(j.opts.start)&&j.opts.start.call(a,j),r.fx.timer(r.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}r.Animation=r.extend(gb,{tweeners:{"*":[function(a,b){var c=this.createTween(a,b);return da(c.elem,a,_.exec(b),c),c}]},tweener:function(a,b){r.isFunction(a)?(b=a,a=["*"]):a=a.match(K);for(var c,d=0,e=a.length;e>d;d++)c=a[d],gb.tweeners[c]=gb.tweeners[c]||[],gb.tweeners[c].unshift(b)},prefilters:[eb],prefilter:function(a,b){b?gb.prefilters.unshift(a):gb.prefilters.push(a)}}),r.speed=function(a,b,c){var e=a&&"object"==typeof a?r.extend({},a):{complete:c||!c&&b||r.isFunction(a)&&a,duration:a,easing:c&&b||b&&!r.isFunction(b)&&b};return r.fx.off||d.hidden?e.duration=0:e.duration="number"==typeof e.duration?e.duration:e.duration in r.fx.speeds?r.fx.speeds[e.duration]:r.fx.speeds._default,null!=e.queue&&e.queue!==!0||(e.queue="fx"),e.old=e.complete,e.complete=function(){r.isFunction(e.old)&&e.old.call(this),e.queue&&r.dequeue(this,e.queue)},e},r.fn.extend({fadeTo:function(a,b,c,d){return this.filter(ba).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=r.isEmptyObject(a),f=r.speed(b,c,d),g=function(){var b=gb(this,r.extend({},a),f);(e||V.get(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=r.timers,g=V.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&_a.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||r.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=V.get(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=r.timers,g=d?d.length:0;for(c.finish=!0,r.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),r.each(["toggle","show","hide"],function(a,b){var c=r.fn[b];r.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(cb(b,!0),a,d,e)}}),r.each({slideDown:cb("show"),slideUp:cb("hide"),slideToggle:cb("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){r.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),r.timers=[],r.fx.tick=function(){var a,b=0,c=r.timers;for(Ya=r.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||r.fx.stop(),Ya=void 0},r.fx.timer=function(a){r.timers.push(a),a()?r.fx.start():r.timers.pop()},r.fx.interval=13,r.fx.start=function(){Za||(Za=a.requestAnimationFrame?a.requestAnimationFrame(ab):a.setInterval(r.fx.tick,r.fx.interval))},r.fx.stop=function(){a.cancelAnimationFrame?a.cancelAnimationFrame(Za):a.clearInterval(Za),Za=null},r.fx.speeds={slow:600,fast:200,_default:400},r.fn.delay=function(b,c){return b=r.fx?r.fx.speeds[b]||b:b,c=c||"fx",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement("input"),b=d.createElement("select"),c=b.appendChild(d.createElement("option"));a.type="checkbox",o.checkOn=""!==a.value,o.optSelected=c.selected,a=d.createElement("input"),a.value="t",a.type="radio",o.radioValue="t"===a.value}();var hb,ib=r.expr.attrHandle;r.fn.extend({attr:function(a,b){return S(this,r.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){r.removeAttr(this,a)})}}),r.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return"undefined"==typeof a.getAttribute?r.prop(a,b,c):(1===f&&r.isXMLDoc(a)||(e=r.attrHooks[b.toLowerCase()]||(r.expr.match.bool.test(b)?hb:void 0)),void 0!==c?null===c?void r.removeAttr(a,b):e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+""),c):e&&"get"in e&&null!==(d=e.get(a,b))?d:(d=r.find.attr(a,b),null==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!o.radioValue&&"radio"===b&&r.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d=0,e=b&&b.match(K);if(e&&1===a.nodeType)while(c=e[d++])a.removeAttribute(c);
}}),hb={set:function(a,b,c){return b===!1?r.removeAttr(a,c):a.setAttribute(c,c),c}},r.each(r.expr.match.bool.source.match(/\w+/g),function(a,b){var c=ib[b]||r.find.attr;ib[b]=function(a,b,d){var e,f,g=b.toLowerCase();return d||(f=ib[g],ib[g]=e,e=null!=c(a,b,d)?g:null,ib[g]=f),e}});var jb=/^(?:input|select|textarea|button)$/i,kb=/^(?:a|area)$/i;r.fn.extend({prop:function(a,b){return S(this,r.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[r.propFix[a]||a]})}}),r.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&r.isXMLDoc(a)||(b=r.propFix[b]||b,e=r.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=r.find.attr(a,"tabindex");return b?parseInt(b,10):jb.test(a.nodeName)||kb.test(a.nodeName)&&a.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),o.optSelected||(r.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),r.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){r.propFix[this.toLowerCase()]=this});var lb=/[\t\r\n\f]/g;function mb(a){return a.getAttribute&&a.getAttribute("class")||""}r.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).addClass(a.call(this,b,mb(this)))});if("string"==typeof a&&a){b=a.match(K)||[];while(c=this[i++])if(e=mb(c),d=1===c.nodeType&&(" "+e+" ").replace(lb," ")){g=0;while(f=b[g++])d.indexOf(" "+f+" ")<0&&(d+=f+" ");h=r.trim(d),e!==h&&c.setAttribute("class",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(r.isFunction(a))return this.each(function(b){r(this).removeClass(a.call(this,b,mb(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof a&&a){b=a.match(K)||[];while(c=this[i++])if(e=mb(c),d=1===c.nodeType&&(" "+e+" ").replace(lb," ")){g=0;while(f=b[g++])while(d.indexOf(" "+f+" ")>-1)d=d.replace(" "+f+" "," ");h=r.trim(d),e!==h&&c.setAttribute("class",h)}}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):r.isFunction(a)?this.each(function(c){r(this).toggleClass(a.call(this,c,mb(this),b),b)}):this.each(function(){var b,d,e,f;if("string"===c){d=0,e=r(this),f=a.match(K)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&"boolean"!==c||(b=mb(this),b&&V.set(this,"__className__",b),this.setAttribute&&this.setAttribute("class",b||a===!1?"":V.get(this,"__className__")||""))})},hasClass:function(a){var b,c,d=0;b=" "+a+" ";while(c=this[d++])if(1===c.nodeType&&(" "+mb(c)+" ").replace(lb," ").indexOf(b)>-1)return!0;return!1}});var nb=/\r/g,ob=/[\x20\t\r\n\f]+/g;r.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=r.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,r(this).val()):a,null==e?e="":"number"==typeof e?e+="":r.isArray(e)&&(e=r.map(e,function(a){return null==a?"":a+""})),b=r.valHooks[this.type]||r.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=r.valHooks[e.type]||r.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(nb,""):null==c?"":c)}}}),r.extend({valHooks:{option:{get:function(a){var b=r.find.attr(a,"value");return null!=b?b:r.trim(r.text(a)).replace(ob," ")}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],(c.selected||i===e)&&!c.disabled&&(!c.parentNode.disabled||!r.nodeName(c.parentNode,"optgroup"))){if(b=r(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=r.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=r.inArray(r.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),r.each(["radio","checkbox"],function(){r.valHooks[this]={set:function(a,b){return r.isArray(b)?a.checked=r.inArray(r(a).val(),b)>-1:void 0}},o.checkOn||(r.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var pb=/^(?:focusinfocus|focusoutblur)$/;r.extend(r.event,{trigger:function(b,c,e,f){var g,h,i,j,k,m,n,o=[e||d],p=l.call(b,"type")?b.type:b,q=l.call(b,"namespace")?b.namespace.split("."):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!pb.test(p+r.event.triggered)&&(p.indexOf(".")>-1&&(q=p.split("."),p=q.shift(),q.sort()),k=p.indexOf(":")<0&&"on"+p,b=b[r.expando]?b:new r.Event(p,"object"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=q.join("."),b.rnamespace=b.namespace?new RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:r.makeArray(c,[b]),n=r.event.special[p]||{},f||!n.trigger||n.trigger.apply(e,c)!==!1)){if(!f&&!n.noBubble&&!r.isWindow(e)){for(j=n.delegateType||p,pb.test(j+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),i=h;i===(e.ownerDocument||d)&&o.push(i.defaultView||i.parentWindow||a)}g=0;while((h=o[g++])&&!b.isPropagationStopped())b.type=g>1?j:n.bindType||p,m=(V.get(h,"events")||{})[b.type]&&V.get(h,"handle"),m&&m.apply(h,c),m=k&&h[k],m&&m.apply&&T(h)&&(b.result=m.apply(h,c),b.result===!1&&b.preventDefault());return b.type=p,f||b.isDefaultPrevented()||n._default&&n._default.apply(o.pop(),c)!==!1||!T(e)||k&&r.isFunction(e[p])&&!r.isWindow(e)&&(i=e[k],i&&(e[k]=null),r.event.triggered=p,e[p](),r.event.triggered=void 0,i&&(e[k]=i)),b.result}},simulate:function(a,b,c){var d=r.extend(new r.Event,c,{type:a,isSimulated:!0});r.event.trigger(d,null,b)}}),r.fn.extend({trigger:function(a,b){return this.each(function(){r.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?r.event.trigger(a,b,c,!0):void 0}}),r.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(a,b){r.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),r.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),o.focusin="onfocusin"in a,o.focusin||r.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){r.event.simulate(b,a.target,r.event.fix(a))};r.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=V.access(d,b);e||d.addEventListener(a,c,!0),V.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=V.access(d,b)-1;e?V.access(d,b,e):(d.removeEventListener(a,c,!0),V.remove(d,b))}}});var qb=a.location,rb=r.now(),sb=/\?/;r.parseXML=function(b){var c;if(!b||"string"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,"text/xml")}catch(d){c=void 0}return c&&!c.getElementsByTagName("parsererror").length||r.error("Invalid XML: "+b),c};var tb=/\[\]$/,ub=/\r?\n/g,vb=/^(?:submit|button|image|reset|file)$/i,wb=/^(?:input|select|textarea|keygen)/i;function xb(a,b,c,d){var e;if(r.isArray(b))r.each(b,function(b,e){c||tb.test(a)?d(a,e):xb(a+"["+("object"==typeof e&&null!=e?b:"")+"]",e,c,d)});else if(c||"object"!==r.type(b))d(a,b);else for(e in b)xb(a+"["+e+"]",b[e],c,d)}r.param=function(a,b){var c,d=[],e=function(a,b){var c=r.isFunction(b)?b():b;d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(null==c?"":c)};if(r.isArray(a)||a.jquery&&!r.isPlainObject(a))r.each(a,function(){e(this.name,this.value)});else for(c in a)xb(c,a[c],b,e);return d.join("&")},r.fn.extend({serialize:function(){return r.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=r.prop(this,"elements");return a?r.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!r(this).is(":disabled")&&wb.test(this.nodeName)&&!vb.test(a)&&(this.checked||!ha.test(a))}).map(function(a,b){var c=r(this).val();return null==c?null:r.isArray(c)?r.map(c,function(a){return{name:b.name,value:a.replace(ub,"\r\n")}}):{name:b.name,value:c.replace(ub,"\r\n")}}).get()}});var yb=/%20/g,zb=/#.*$/,Ab=/([?&])_=[^&]*/,Bb=/^(.*?):[ \t]*([^\r\n]*)$/gm,Cb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Db=/^(?:GET|HEAD)$/,Eb=/^\/\//,Fb={},Gb={},Hb="*/".concat("*"),Ib=d.createElement("a");Ib.href=qb.href;function Jb(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(K)||[];if(r.isFunction(c))while(d=f[e++])"+"===d[0]?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Kb(a,b,c,d){var e={},f=a===Gb;function g(h){var i;return e[h]=!0,r.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function Lb(a,b){var c,d,e=r.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&r.extend(!0,a,d),a}function Mb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader("Content-Type"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+" "+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function Nb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}r.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:qb.href,type:"GET",isLocal:Cb.test(qb.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Hb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":r.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Lb(Lb(a,r.ajaxSettings),b):Lb(r.ajaxSettings,a)},ajaxPrefilter:Jb(Fb),ajaxTransport:Jb(Gb),ajax:function(b,c){"object"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m,n,o=r.ajaxSetup({},c),p=o.context||o,q=o.context&&(p.nodeType||p.jquery)?r(p):r.event,s=r.Deferred(),t=r.Callbacks("once memory"),u=o.statusCode||{},v={},w={},x="canceled",y={readyState:0,getResponseHeader:function(a){var b;if(k){if(!h){h={};while(b=Bb.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return k?g:null},setRequestHeader:function(a,b){return null==k&&(a=w[a.toLowerCase()]=w[a.toLowerCase()]||a,v[a]=b),this},overrideMimeType:function(a){return null==k&&(o.mimeType=a),this},statusCode:function(a){var b;if(a)if(k)y.always(a[y.status]);else for(b in a)u[b]=[u[b],a[b]];return this},abort:function(a){var b=a||x;return e&&e.abort(b),A(0,b),this}};if(s.promise(y),o.url=((b||o.url||qb.href)+"").replace(Eb,qb.protocol+"//"),o.type=c.method||c.type||o.method||o.type,o.dataTypes=(o.dataType||"*").toLowerCase().match(K)||[""],null==o.crossDomain){j=d.createElement("a");try{j.href=o.url,j.href=j.href,o.crossDomain=Ib.protocol+"//"+Ib.host!=j.protocol+"//"+j.host}catch(z){o.crossDomain=!0}}if(o.data&&o.processData&&"string"!=typeof o.data&&(o.data=r.param(o.data,o.traditional)),Kb(Fb,o,c,y),k)return y;l=r.event&&o.global,l&&0===r.active++&&r.event.trigger("ajaxStart"),o.type=o.type.toUpperCase(),o.hasContent=!Db.test(o.type),f=o.url.replace(zb,""),o.hasContent?o.data&&o.processData&&0===(o.contentType||"").indexOf("application/x-www-form-urlencoded")&&(o.data=o.data.replace(yb,"+")):(n=o.url.slice(f.length),o.data&&(f+=(sb.test(f)?"&":"?")+o.data,delete o.data),o.cache===!1&&(f=f.replace(Ab,""),n=(sb.test(f)?"&":"?")+"_="+rb++ +n),o.url=f+n),o.ifModified&&(r.lastModified[f]&&y.setRequestHeader("If-Modified-Since",r.lastModified[f]),r.etag[f]&&y.setRequestHeader("If-None-Match",r.etag[f])),(o.data&&o.hasContent&&o.contentType!==!1||c.contentType)&&y.setRequestHeader("Content-Type",o.contentType),y.setRequestHeader("Accept",o.dataTypes[0]&&o.accepts[o.dataTypes[0]]?o.accepts[o.dataTypes[0]]+("*"!==o.dataTypes[0]?", "+Hb+"; q=0.01":""):o.accepts["*"]);for(m in o.headers)y.setRequestHeader(m,o.headers[m]);if(o.beforeSend&&(o.beforeSend.call(p,y,o)===!1||k))return y.abort();if(x="abort",t.add(o.complete),y.done(o.success),y.fail(o.error),e=Kb(Gb,o,c,y)){if(y.readyState=1,l&&q.trigger("ajaxSend",[y,o]),k)return y;o.async&&o.timeout>0&&(i=a.setTimeout(function(){y.abort("timeout")},o.timeout));try{k=!1,e.send(v,A)}catch(z){if(k)throw z;A(-1,z)}}else A(-1,"No Transport");function A(b,c,d,h){var j,m,n,v,w,x=c;k||(k=!0,i&&a.clearTimeout(i),e=void 0,g=h||"",y.readyState=b>0?4:0,j=b>=200&&300>b||304===b,d&&(v=Mb(o,y,d)),v=Nb(o,v,y,j),j?(o.ifModified&&(w=y.getResponseHeader("Last-Modified"),w&&(r.lastModified[f]=w),w=y.getResponseHeader("etag"),w&&(r.etag[f]=w)),204===b||"HEAD"===o.type?x="nocontent":304===b?x="notmodified":(x=v.state,m=v.data,n=v.error,j=!n)):(n=x,!b&&x||(x="error",0>b&&(b=0))),y.status=b,y.statusText=(c||x)+"",j?s.resolveWith(p,[m,x,y]):s.rejectWith(p,[y,x,n]),y.statusCode(u),u=void 0,l&&q.trigger(j?"ajaxSuccess":"ajaxError",[y,o,j?m:n]),t.fireWith(p,[y,x]),l&&(q.trigger("ajaxComplete",[y,o]),--r.active||r.event.trigger("ajaxStop")))}return y},getJSON:function(a,b,c){return r.get(a,b,c,"json")},getScript:function(a,b){return r.get(a,void 0,b,"script")}}),r.each(["get","post"],function(a,b){r[b]=function(a,c,d,e){return r.isFunction(c)&&(e=e||d,d=c,c=void 0),r.ajax(r.extend({url:a,type:b,dataType:e,data:c,success:d},r.isPlainObject(a)&&a))}}),r._evalUrl=function(a){return r.ajax({url:a,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},r.fn.extend({wrapAll:function(a){var b;return this[0]&&(r.isFunction(a)&&(a=a.call(this[0])),b=r(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this},wrapInner:function(a){return r.isFunction(a)?this.each(function(b){r(this).wrapInner(a.call(this,b))}):this.each(function(){var b=r(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=r.isFunction(a);return this.each(function(c){r(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(a){return this.parent(a).not("body").each(function(){r(this).replaceWith(this.childNodes)}),this}}),r.expr.pseudos.hidden=function(a){return!r.expr.pseudos.visible(a)},r.expr.pseudos.visible=function(a){return!!(a.offsetWidth||a.offsetHeight||a.getClientRects().length)},r.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var Ob={0:200,1223:204},Pb=r.ajaxSettings.xhr();o.cors=!!Pb&&"withCredentials"in Pb,o.ajax=Pb=!!Pb,r.ajaxTransport(function(b){var c,d;return o.cors||Pb&&!b.crossDomain?{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,"abort"===a?h.abort():"error"===a?"number"!=typeof h.status?f(0,"error"):f(h.status,h.statusText):f(Ob[h.status]||h.status,h.statusText,"text"!==(h.responseType||"text")||"string"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c("error"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c("abort");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}:void 0}),r.ajaxPrefilter(function(a){a.crossDomain&&(a.contents.script=!1)}),r.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(a){return r.globalEval(a),a}}}),r.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET")}),r.ajaxTransport("script",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=r("<script>").prop({charset:a.scriptCharset,src:a.url}).on("load error",c=function(a){b.remove(),c=null,a&&f("error"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Qb=[],Rb=/(=)\?(?=&|$)|\?\?/;r.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=Qb.pop()||r.expando+"_"+rb++;return this[a]=!0,a}}),r.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Rb.test(b.url)?"url":"string"==typeof b.data&&0===(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&Rb.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=r.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Rb,"$1"+e):b.jsonp!==!1&&(b.url+=(sb.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||r.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?r(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Qb.push(e)),g&&r.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),o.createHTMLDocument=function(){var a=d.implementation.createHTMLDocument("").body;return a.innerHTML="<form></form><form></form>",2===a.childNodes.length}(),r.parseHTML=function(a,b,c){if("string"!=typeof a)return[];"boolean"==typeof b&&(c=b,b=!1);var e,f,g;return b||(o.createHTMLDocument?(b=d.implementation.createHTMLDocument(""),e=b.createElement("base"),e.href=d.location.href,b.head.appendChild(e)):b=d),f=B.exec(a),g=!c&&[],f?[b.createElement(f[1])]:(f=oa([a],b,g),g&&g.length&&r(g).remove(),r.merge([],f.childNodes))},r.fn.load=function(a,b,c){var d,e,f,g=this,h=a.indexOf(" ");return h>-1&&(d=r.trim(a.slice(h)),a=a.slice(0,h)),r.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&r.ajax({url:a,type:e||"GET",dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?r("<div>").append(r.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},r.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){r.fn[b]=function(a){return this.on(b,a)}}),r.expr.pseudos.animated=function(a){return r.grep(r.timers,function(b){return a===b.elem}).length};function Sb(a){return r.isWindow(a)?a:9===a.nodeType&&a.defaultView}r.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=r.css(a,"position"),l=r(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=r.css(a,"top"),i=r.css(a,"left"),j=("absolute"===k||"fixed"===k)&&(f+i).indexOf("auto")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),r.isFunction(b)&&(b=b.call(a,c,r.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},r.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){r.offset.setOffset(this,a,b)});var b,c,d,e,f=this[0];if(f)return f.getClientRects().length?(d=f.getBoundingClientRect(),d.width||d.height?(e=f.ownerDocument,c=Sb(e),b=e.documentElement,{top:d.top+c.pageYOffset-b.clientTop,left:d.left+c.pageXOffset-b.clientLeft}):d):{top:0,left:0}},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return"fixed"===r.css(c,"position")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),r.nodeName(a[0],"html")||(d=a.offset()),d={top:d.top+r.css(a[0],"borderTopWidth",!0),left:d.left+r.css(a[0],"borderLeftWidth",!0)}),{top:b.top-d.top-r.css(c,"marginTop",!0),left:b.left-d.left-r.css(c,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&"static"===r.css(a,"position"))a=a.offsetParent;return a||pa})}}),r.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c="pageYOffset"===b;r.fn[a]=function(d){return S(this,function(a,d,e){var f=Sb(a);return void 0===e?f?f[b]:a[d]:void(f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e)},a,d,arguments.length)}}),r.each(["top","left"],function(a,b){r.cssHooks[b]=Na(o.pixelPosition,function(a,c){return c?(c=Ma(a,b),Ka.test(c)?r(a).position()[b]+"px":c):void 0})}),r.each({Height:"height",Width:"width"},function(a,b){r.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){r.fn[d]=function(e,f){var g=arguments.length&&(c||"boolean"!=typeof e),h=c||(e===!0||f===!0?"margin":"border");return S(this,function(b,c,e){var f;return r.isWindow(b)?0===d.indexOf("outer")?b["inner"+a]:b.document.documentElement["client"+a]:9===b.nodeType?(f=b.documentElement,Math.max(b.body["scroll"+a],f["scroll"+a],b.body["offset"+a],f["offset"+a],f["client"+a])):void 0===e?r.css(b,c,h):r.style(b,c,e,h)},b,g?e:void 0,g)}})}),r.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}}),r.parseJSON=JSON.parse,"function"==typeof define&&define.amd&&define("jquery",[],function(){return r});var Tb=a.jQuery,Ub=a.$;return r.noConflict=function(b){return a.$===r&&(a.$=Ub),b&&a.jQuery===r&&(a.jQuery=Tb),r},b||(a.jQuery=a.$=r),r});

/*!
 * clipboard.js v2.0.0
 * https://zenorocha.github.io/clipboard.js
 * 
 * Licensed MIT © Zeno Rocha
 */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.ClipboardJS=e():t.ClipboardJS=e()}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=3)}([function(t,e,n){var o,r,i;!function(a,c){r=[t,n(7)],o=c,void 0!==(i="function"==typeof o?o.apply(e,r):o)&&(t.exports=i)}(0,function(t,e){"use strict";function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var o=function(t){return t&&t.__esModule?t:{default:t}}(e),r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i=function(){function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}}(),a=function(){function t(e){n(this,t),this.resolveOptions(e),this.initSelection()}return i(t,[{key:"resolveOptions",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.action=t.action,this.container=t.container,this.emitter=t.emitter,this.target=t.target,this.text=t.text,this.trigger=t.trigger,this.selectedText=""}},{key:"initSelection",value:function(){this.text?this.selectFake():this.target&&this.selectTarget()}},{key:"selectFake",value:function(){var t=this,e="rtl"==document.documentElement.getAttribute("dir");this.removeFake(),this.fakeHandlerCallback=function(){return t.removeFake()},this.fakeHandler=this.container.addEventListener("click",this.fakeHandlerCallback)||!0,this.fakeElem=document.createElement("textarea"),this.fakeElem.style.fontSize="12pt",this.fakeElem.style.border="0",this.fakeElem.style.padding="0",this.fakeElem.style.margin="0",this.fakeElem.style.position="absolute",this.fakeElem.style[e?"right":"left"]="-9999px";var n=window.pageYOffset||document.documentElement.scrollTop;this.fakeElem.style.top=n+"px",this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,this.container.appendChild(this.fakeElem),this.selectedText=(0,o.default)(this.fakeElem),this.copyText()}},{key:"removeFake",value:function(){this.fakeHandler&&(this.container.removeEventListener("click",this.fakeHandlerCallback),this.fakeHandler=null,this.fakeHandlerCallback=null),this.fakeElem&&(this.container.removeChild(this.fakeElem),this.fakeElem=null)}},{key:"selectTarget",value:function(){this.selectedText=(0,o.default)(this.target),this.copyText()}},{key:"copyText",value:function(){var t=void 0;try{t=document.execCommand(this.action)}catch(e){t=!1}this.handleResult(t)}},{key:"handleResult",value:function(t){this.emitter.emit(t?"success":"error",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})}},{key:"clearSelection",value:function(){this.trigger&&this.trigger.focus(),window.getSelection().removeAllRanges()}},{key:"destroy",value:function(){this.removeFake()}},{key:"action",set:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"copy";if(this._action=t,"copy"!==this._action&&"cut"!==this._action)throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function(){return this._action}},{key:"target",set:function(t){if(void 0!==t){if(!t||"object"!==(void 0===t?"undefined":r(t))||1!==t.nodeType)throw new Error('Invalid "target" value, use a valid Element');if("copy"===this.action&&t.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');if("cut"===this.action&&(t.hasAttribute("readonly")||t.hasAttribute("disabled")))throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');this._target=t}},get:function(){return this._target}}]),t}();t.exports=a})},function(t,e,n){function o(t,e,n){if(!t&&!e&&!n)throw new Error("Missing required arguments");if(!c.string(e))throw new TypeError("Second argument must be a String");if(!c.fn(n))throw new TypeError("Third argument must be a Function");if(c.node(t))return r(t,e,n);if(c.nodeList(t))return i(t,e,n);if(c.string(t))return a(t,e,n);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}function r(t,e,n){return t.addEventListener(e,n),{destroy:function(){t.removeEventListener(e,n)}}}function i(t,e,n){return Array.prototype.forEach.call(t,function(t){t.addEventListener(e,n)}),{destroy:function(){Array.prototype.forEach.call(t,function(t){t.removeEventListener(e,n)})}}}function a(t,e,n){return u(document.body,t,e,n)}var c=n(6),u=n(5);t.exports=o},function(t,e){function n(){}n.prototype={on:function(t,e,n){var o=this.e||(this.e={});return(o[t]||(o[t]=[])).push({fn:e,ctx:n}),this},once:function(t,e,n){function o(){r.off(t,o),e.apply(n,arguments)}var r=this;return o._=e,this.on(t,o,n)},emit:function(t){var e=[].slice.call(arguments,1),n=((this.e||(this.e={}))[t]||[]).slice(),o=0,r=n.length;for(o;o<r;o++)n[o].fn.apply(n[o].ctx,e);return this},off:function(t,e){var n=this.e||(this.e={}),o=n[t],r=[];if(o&&e)for(var i=0,a=o.length;i<a;i++)o[i].fn!==e&&o[i].fn._!==e&&r.push(o[i]);return r.length?n[t]=r:delete n[t],this}},t.exports=n},function(t,e,n){var o,r,i;!function(a,c){r=[t,n(0),n(2),n(1)],o=c,void 0!==(i="function"==typeof o?o.apply(e,r):o)&&(t.exports=i)}(0,function(t,e,n,o){"use strict";function r(t){return t&&t.__esModule?t:{default:t}}function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function a(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function c(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function u(t,e){var n="data-clipboard-"+t;if(e.hasAttribute(n))return e.getAttribute(n)}var l=r(e),s=r(n),f=r(o),d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h=function(){function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}}(),p=function(t){function e(t,n){i(this,e);var o=a(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return o.resolveOptions(n),o.listenClick(t),o}return c(e,t),h(e,[{key:"resolveOptions",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.action="function"==typeof t.action?t.action:this.defaultAction,this.target="function"==typeof t.target?t.target:this.defaultTarget,this.text="function"==typeof t.text?t.text:this.defaultText,this.container="object"===d(t.container)?t.container:document.body}},{key:"listenClick",value:function(t){var e=this;this.listener=(0,f.default)(t,"click",function(t){return e.onClick(t)})}},{key:"onClick",value:function(t){var e=t.delegateTarget||t.currentTarget;this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new l.default({action:this.action(e),target:this.target(e),text:this.text(e),container:this.container,trigger:e,emitter:this})}},{key:"defaultAction",value:function(t){return u("action",t)}},{key:"defaultTarget",value:function(t){var e=u("target",t);if(e)return document.querySelector(e)}},{key:"defaultText",value:function(t){return u("text",t)}},{key:"destroy",value:function(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)}}],[{key:"isSupported",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["copy","cut"],e="string"==typeof t?[t]:t,n=!!document.queryCommandSupported;return e.forEach(function(t){n=n&&!!document.queryCommandSupported(t)}),n}}]),e}(s.default);t.exports=p})},function(t,e){function n(t,e){for(;t&&t.nodeType!==o;){if("function"==typeof t.matches&&t.matches(e))return t;t=t.parentNode}}var o=9;if("undefined"!=typeof Element&&!Element.prototype.matches){var r=Element.prototype;r.matches=r.matchesSelector||r.mozMatchesSelector||r.msMatchesSelector||r.oMatchesSelector||r.webkitMatchesSelector}t.exports=n},function(t,e,n){function o(t,e,n,o,r){var a=i.apply(this,arguments);return t.addEventListener(n,a,r),{destroy:function(){t.removeEventListener(n,a,r)}}}function r(t,e,n,r,i){return"function"==typeof t.addEventListener?o.apply(null,arguments):"function"==typeof n?o.bind(null,document).apply(null,arguments):("string"==typeof t&&(t=document.querySelectorAll(t)),Array.prototype.map.call(t,function(t){return o(t,e,n,r,i)}))}function i(t,e,n,o){return function(n){n.delegateTarget=a(n.target,e),n.delegateTarget&&o.call(t,n)}}var a=n(4);t.exports=r},function(t,e){e.node=function(t){return void 0!==t&&t instanceof HTMLElement&&1===t.nodeType},e.nodeList=function(t){var n=Object.prototype.toString.call(t);return void 0!==t&&("[object NodeList]"===n||"[object HTMLCollection]"===n)&&"length"in t&&(0===t.length||e.node(t[0]))},e.string=function(t){return"string"==typeof t||t instanceof String},e.fn=function(t){return"[object Function]"===Object.prototype.toString.call(t)}},function(t,e){function n(t){var e;if("SELECT"===t.nodeName)t.focus(),e=t.value;else if("INPUT"===t.nodeName||"TEXTAREA"===t.nodeName){var n=t.hasAttribute("readonly");n||t.setAttribute("readonly",""),t.select(),t.setSelectionRange(0,t.value.length),n||t.removeAttribute("readonly"),e=t.value}else{t.hasAttribute("contenteditable")&&t.focus();var o=window.getSelection(),r=document.createRange();r.selectNodeContents(t),o.removeAllRanges(),o.addRange(r),e=o.toString()}return e}t.exports=n}])});
/*! highlight.js v9.16.2 | BSD3 License | git.io/hljslicense */
!function(e){var n="object"==typeof window&&window||"object"==typeof self&&self;"undefined"==typeof exports||exports.nodeType?n&&(n.hljs=e({}),"function"==typeof define&&define.amd&&define([],function(){return n.hljs})):e(exports)}(function(a){var f=[],i=Object.keys,b={},u={},n=/^(no-?highlight|plain|text)$/i,l=/\blang(?:uage)?-([\w-]+)\b/i,t=/((^(<[^>]+>|\t|)+|(?:\n)))/gm,r={case_insensitive:"cI",lexemes:"l",contains:"c",keywords:"k",subLanguage:"sL",className:"cN",begin:"b",beginKeywords:"bK",end:"e",endsWithParent:"eW",illegal:"i",excludeBegin:"eB",excludeEnd:"eE",returnBegin:"rB",returnEnd:"rE",variants:"v",IDENT_RE:"IR",UNDERSCORE_IDENT_RE:"UIR",NUMBER_RE:"NR",C_NUMBER_RE:"CNR",BINARY_NUMBER_RE:"BNR",RE_STARTERS_RE:"RSR",BACKSLASH_ESCAPE:"BE",APOS_STRING_MODE:"ASM",QUOTE_STRING_MODE:"QSM",PHRASAL_WORDS_MODE:"PWM",C_LINE_COMMENT_MODE:"CLCM",C_BLOCK_COMMENT_MODE:"CBCM",HASH_COMMENT_MODE:"HCM",NUMBER_MODE:"NM",C_NUMBER_MODE:"CNM",BINARY_NUMBER_MODE:"BNM",CSS_NUMBER_MODE:"CSSNM",REGEXP_MODE:"RM",TITLE_MODE:"TM",UNDERSCORE_TITLE_MODE:"UTM",COMMENT:"C",beginRe:"bR",endRe:"eR",illegalRe:"iR",lexemesRe:"lR",terminators:"t",terminator_end:"tE"},_="</span>",m={classPrefix:"hljs-",tabReplace:null,useBR:!1,languages:void 0},c="of and for in not or if then".split(" ");function C(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function E(e){return e.nodeName.toLowerCase()}function o(e){return n.test(e)}function s(e){var n,t={},r=Array.prototype.slice.call(arguments,1);for(n in e)t[n]=e[n];return r.forEach(function(e){for(n in e)t[n]=e[n]}),t}function g(e){var a=[];return function e(n,t){for(var r=n.firstChild;r;r=r.nextSibling)3===r.nodeType?t+=r.nodeValue.length:1===r.nodeType&&(a.push({event:"start",offset:t,node:r}),t=e(r,t),E(r).match(/br|hr|img|input/)||a.push({event:"stop",offset:t,node:r}));return t}(e,0),a}function d(e,n,t){var r=0,a="",i=[];function c(){return e.length&&n.length?e[0].offset!==n[0].offset?e[0].offset<n[0].offset?e:n:"start"===n[0].event?e:n:e.length?e:n}function u(e){a+="<"+E(e)+f.map.call(e.attributes,function(e){return" "+e.nodeName+'="'+C(e.value).replace('"',"&quot;")+'"'}).join("")+">"}function l(e){a+="</"+E(e)+">"}function o(e){("start"===e.event?u:l)(e.node)}for(;e.length||n.length;){var s=c();if(a+=C(t.substring(r,s[0].offset)),r=s[0].offset,s===e){for(i.reverse().forEach(l);o(s.splice(0,1)[0]),(s=c())===e&&s.length&&s[0].offset===r;);i.reverse().forEach(u)}else"start"===s[0].event?i.push(s[0].node):i.pop(),o(s.splice(0,1)[0])}return a+C(t.substr(r))}function R(n){return n.v&&!n.cached_variants&&(n.cached_variants=n.v.map(function(e){return s(n,{v:null},e)})),n.cached_variants?n.cached_variants:function e(n){return!!n&&(n.eW||e(n.starts))}(n)?[s(n,{starts:n.starts?s(n.starts):null})]:[n]}function v(e){if(r&&!e.langApiRestored){for(var n in e.langApiRestored=!0,r)e[n]&&(e[r[n]]=e[n]);(e.c||[]).concat(e.v||[]).forEach(v)}}function p(n,r){var a={};return"string"==typeof n?t("keyword",n):i(n).forEach(function(e){t(e,n[e])}),a;function t(t,e){r&&(e=e.toLowerCase()),e.split(" ").forEach(function(e){var n=e.split("|");a[n[0]]=[t,function(e,n){return n?Number(n):function(e){return-1!=c.indexOf(e.toLowerCase())}(e)?0:1}(n[0],n[1])]})}}function O(r){function s(e){return e&&e.source||e}function f(e,n){return new RegExp(s(e),"m"+(r.cI?"i":"")+(n?"g":""))}function a(a){var i,e,c={},u=[],l={},t=1;function n(e,n){c[t]=e,u.push([e,n]),t+=function(e){return new RegExp(e.toString()+"|").exec("").length-1}(n)+1}for(var r=0;r<a.c.length;r++){n(e=a.c[r],e.bK?"\\.?(?:"+e.b+")\\.?":e.b)}a.tE&&n("end",a.tE),a.i&&n("illegal",a.i);var o=u.map(function(e){return e[1]});return i=f(function(e,n){for(var t=/\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./,r=0,a="",i=0;i<e.length;i++){var c=r+=1,u=s(e[i]);for(0<i&&(a+=n),a+="(";0<u.length;){var l=t.exec(u);if(null==l){a+=u;break}a+=u.substring(0,l.index),u=u.substring(l.index+l[0].length),"\\"==l[0][0]&&l[1]?a+="\\"+String(Number(l[1])+c):(a+=l[0],"("==l[0]&&r++)}a+=")"}return a}(o,"|"),!0),l.lastIndex=0,l.exec=function(e){var n;if(0===u.length)return null;i.lastIndex=l.lastIndex;var t=i.exec(e);if(!t)return null;for(var r=0;r<t.length;r++)if(null!=t[r]&&null!=c[""+r]){n=c[""+r];break}return"string"==typeof n?(t.type=n,t.extra=[a.i,a.tE]):(t.type="begin",t.rule=n),t},l}!function n(t,e){t.compiled||(t.compiled=!0,t.k=t.k||t.bK,t.k&&(t.k=p(t.k,r.cI)),t.lR=f(t.l||/\w+/,!0),e&&(t.bK&&(t.b="\\b("+t.bK.split(" ").join("|")+")\\b"),t.b||(t.b=/\B|\b/),t.bR=f(t.b),t.endSameAsBegin&&(t.e=t.b),t.e||t.eW||(t.e=/\B|\b/),t.e&&(t.eR=f(t.e)),t.tE=s(t.e)||"",t.eW&&e.tE&&(t.tE+=(t.e?"|":"")+e.tE)),t.i&&(t.iR=f(t.i)),null==t.relevance&&(t.relevance=1),t.c||(t.c=[]),t.c=Array.prototype.concat.apply([],t.c.map(function(e){return R("self"===e?t:e)})),t.c.forEach(function(e){n(e,t)}),t.starts&&n(t.starts,e),t.t=a(t))}(r)}function x(e,a,i,n){function c(e,n){if(function(e,n){var t=e&&e.exec(n);return t&&0===t.index}(e.eR,n)){for(;e.endsParent&&e.parent;)e=e.parent;return e}if(e.eW)return c(e.parent,n)}function u(e,n,t,r){if(!t&&""===n)return"";if(!e)return n;var a='<span class="'+(r?"":m.classPrefix);return(a+=e+'">')+n+(t?"":_)}function l(){R+=null!=g.sL?function(){var e="string"==typeof g.sL;if(e&&!b[g.sL])return C(v);var n=e?x(g.sL,v,!0,d[g.sL]):B(v,g.sL.length?g.sL:void 0);return 0<g.relevance&&(p+=n.relevance),e&&(d[g.sL]=n.top),u(n.language,n.value,!1,!0)}():function(){var e,n,t,r,a,i,c;if(!g.k)return C(v);for(r="",n=0,g.lR.lastIndex=0,t=g.lR.exec(v);t;)r+=C(v.substring(n,t.index)),a=g,i=t,void 0,c=E.cI?i[0].toLowerCase():i[0],(e=a.k.hasOwnProperty(c)&&a.k[c])?(p+=e[1],r+=u(e[0],C(t[0]))):r+=C(t[0]),n=g.lR.lastIndex,t=g.lR.exec(v);return r+C(v.substr(n))}(),v=""}function o(e){R+=e.cN?u(e.cN,"",!0):"",g=Object.create(e,{parent:{value:g}})}function s(e){var n=e[0],t=e.rule;return t&&t.endSameAsBegin&&(t.eR=function(e){return new RegExp(e.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&"),"m")}(n)),t.skip?v+=n:(t.eB&&(v+=n),l(),t.rB||t.eB||(v=n)),o(t),t.rB?0:n.length}var f={};function t(e,n){var t=n&&n[0];if(v+=e,null==t)return l(),0;if("begin"==f.type&&"end"==n.type&&f.index==n.index&&""===t)return v+=a.slice(n.index,n.index+1),1;if("begin"===(f=n).type)return s(n);if("illegal"===n.type&&!i)throw new Error('Illegal lexeme "'+t+'" for mode "'+(g.cN||"<unnamed>")+'"');if("end"===n.type){var r=function(e){var n=e[0],t=c(g,n);if(t){var r=g;for(r.skip?v+=n:(r.rE||r.eE||(v+=n),l(),r.eE&&(v=n));g.cN&&(R+=_),g.skip||g.sL||(p+=g.relevance),(g=g.parent)!==t.parent;);return t.starts&&(t.endSameAsBegin&&(t.starts.eR=t.eR),o(t.starts)),r.rE?0:n.length}}(n);if(null!=r)return r}return v+=t,t.length}var E=S(e);if(!E)throw new Error('Unknown language: "'+e+'"');O(E);var r,g=n||E,d={},R="";for(r=g;r!==E;r=r.parent)r.cN&&(R=u(r.cN,"",!0)+R);var v="",p=0;try{for(var M,N,h=0;g.t.lastIndex=h,M=g.t.exec(a);)N=t(a.substring(h,M.index),M),h=M.index+N;for(t(a.substr(h)),r=g;r.parent;r=r.parent)r.cN&&(R+=_);return{relevance:p,value:R,i:!1,language:e,top:g}}catch(e){if(e.message&&-1!==e.message.indexOf("Illegal"))return{i:!0,relevance:0,value:C(a)};throw e}}function B(t,e){e=e||m.languages||i(b);var r={relevance:0,value:C(t)},a=r;return e.filter(S).filter(T).forEach(function(e){var n=x(e,t,!1);n.language=e,n.relevance>a.relevance&&(a=n),n.relevance>r.relevance&&(a=r,r=n)}),a.language&&(r.second_best=a),r}function M(e){return m.tabReplace||m.useBR?e.replace(t,function(e,n){return m.useBR&&"\n"===e?"<br>":m.tabReplace?n.replace(/\t/g,m.tabReplace):""}):e}function N(e){var n,t,r,a,i,c=function(e){var n,t,r,a,i=e.className+" ";if(i+=e.parentNode?e.parentNode.className:"",t=l.exec(i))return S(t[1])?t[1]:"no-highlight";for(n=0,r=(i=i.split(/\s+/)).length;n<r;n++)if(o(a=i[n])||S(a))return a}(e);o(c)||(m.useBR?(n=document.createElementNS("http://www.w3.org/1999/xhtml","div")).innerHTML=e.innerHTML.replace(/\n/g,"").replace(/<br[ \/]*>/g,"\n"):n=e,i=n.textContent,r=c?x(c,i,!0):B(i),(t=g(n)).length&&((a=document.createElementNS("http://www.w3.org/1999/xhtml","div")).innerHTML=r.value,r.value=d(t,g(a),i)),r.value=M(r.value),e.innerHTML=r.value,e.className=function(e,n,t){var r=n?u[n]:t,a=[e.trim()];return e.match(/\bhljs\b/)||a.push("hljs"),-1===e.indexOf(r)&&a.push(r),a.join(" ").trim()}(e.className,c,r.language),e.result={language:r.language,re:r.relevance},r.second_best&&(e.second_best={language:r.second_best.language,re:r.second_best.relevance}))}function h(){if(!h.called){h.called=!0;var e=document.querySelectorAll("pre code");f.forEach.call(e,N)}}function S(e){return e=(e||"").toLowerCase(),b[e]||b[u[e]]}function T(e){var n=S(e);return n&&!n.disableAutodetect}return a.highlight=x,a.highlightAuto=B,a.fixMarkup=M,a.highlightBlock=N,a.configure=function(e){m=s(m,e)},a.initHighlighting=h,a.initHighlightingOnLoad=function(){addEventListener("DOMContentLoaded",h,!1),addEventListener("load",h,!1)},a.registerLanguage=function(n,e){var t=b[n]=e(a);v(t),t.rawDefinition=e.bind(null,a),t.aliases&&t.aliases.forEach(function(e){u[e]=n})},a.listLanguages=function(){return i(b)},a.getLanguage=S,a.autoDetection=T,a.inherit=s,a.IR=a.IDENT_RE="[a-zA-Z]\\w*",a.UIR=a.UNDERSCORE_IDENT_RE="[a-zA-Z_]\\w*",a.NR=a.NUMBER_RE="\\b\\d+(\\.\\d+)?",a.CNR=a.C_NUMBER_RE="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",a.BNR=a.BINARY_NUMBER_RE="\\b(0b[01]+)",a.RSR=a.RE_STARTERS_RE="!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",a.BE=a.BACKSLASH_ESCAPE={b:"\\\\[\\s\\S]",relevance:0},a.ASM=a.APOS_STRING_MODE={cN:"string",b:"'",e:"'",i:"\\n",c:[a.BE]},a.QSM=a.QUOTE_STRING_MODE={cN:"string",b:'"',e:'"',i:"\\n",c:[a.BE]},a.PWM=a.PHRASAL_WORDS_MODE={b:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},a.C=a.COMMENT=function(e,n,t){var r=a.inherit({cN:"comment",b:e,e:n,c:[]},t||{});return r.c.push(a.PWM),r.c.push({cN:"doctag",b:"(?:TODO|FIXME|NOTE|BUG|XXX):",relevance:0}),r},a.CLCM=a.C_LINE_COMMENT_MODE=a.C("//","$"),a.CBCM=a.C_BLOCK_COMMENT_MODE=a.C("/\\*","\\*/"),a.HCM=a.HASH_COMMENT_MODE=a.C("#","$"),a.NM=a.NUMBER_MODE={cN:"number",b:a.NR,relevance:0},a.CNM=a.C_NUMBER_MODE={cN:"number",b:a.CNR,relevance:0},a.BNM=a.BINARY_NUMBER_MODE={cN:"number",b:a.BNR,relevance:0},a.CSSNM=a.CSS_NUMBER_MODE={cN:"number",b:a.NR+"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",relevance:0},a.RM=a.REGEXP_MODE={cN:"regexp",b:/\//,e:/\/[gimuy]*/,i:/\n/,c:[a.BE,{b:/\[/,e:/\]/,relevance:0,c:[a.BE]}]},a.TM=a.TITLE_MODE={cN:"title",b:a.IR,relevance:0},a.UTM=a.UNDERSCORE_TITLE_MODE={cN:"title",b:a.UIR,relevance:0},a.METHOD_GUARD={b:"\\.\\s*"+a.UIR,relevance:0},a});hljs.registerLanguage("javascript",function(e){var r="[A-Za-z$_][0-9A-Za-z$_]*",a={keyword:"in of if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await static import from as",literal:"true false null undefined NaN Infinity",built_in:"eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Promise"},t={cN:"number",v:[{b:"\\b(0[bB][01]+)n?"},{b:"\\b(0[oO][0-7]+)n?"},{b:e.CNR+"n?"}],relevance:0},n={cN:"subst",b:"\\$\\{",e:"\\}",k:a,c:[]},c={b:"html`",e:"",starts:{e:"`",rE:!1,c:[e.BE,n],sL:"xml"}},s={b:"css`",e:"",starts:{e:"`",rE:!1,c:[e.BE,n],sL:"css"}},o={cN:"string",b:"`",e:"`",c:[e.BE,n]};n.c=[e.ASM,e.QSM,c,s,o,t,e.RM];var i=n.c.concat([e.CBCM,e.CLCM]);return{aliases:["js","jsx"],k:a,c:[{cN:"meta",relevance:10,b:/^\s*['"]use (strict|asm)['"]/},{cN:"meta",b:/^#!/,e:/$/},e.ASM,e.QSM,c,s,o,e.CLCM,e.CBCM,t,{b:/[{,\n]\s*/,relevance:0,c:[{b:r+"\\s*:",rB:!0,relevance:0,c:[{cN:"attr",b:r,relevance:0}]}]},{b:"("+e.RSR+"|\\b(case|return|throw)\\b)\\s*",k:"return throw case",c:[e.CLCM,e.CBCM,e.RM,{cN:"function",b:"(\\(.*?\\)|"+r+")\\s*=>",rB:!0,e:"\\s*=>",c:[{cN:"params",v:[{b:r},{b:/\(\s*\)/},{b:/\(/,e:/\)/,eB:!0,eE:!0,k:a,c:i}]}]},{cN:"",b:/\s/,e:/\s*/,skip:!0},{b:/</,e:/(\/[A-Za-z0-9\\._:-]+|[A-Za-z0-9\\._:-]+\/)>/,sL:"xml",c:[{b:/<[A-Za-z0-9\\._:-]+\s*\/>/,skip:!0},{b:/<[A-Za-z0-9\\._:-]+/,e:/(\/[A-Za-z0-9\\._:-]+|[A-Za-z0-9\\._:-]+\/)>/,skip:!0,c:[{b:/<[A-Za-z0-9\\._:-]+\s*\/>/,skip:!0},"self"]}]}],relevance:0},{cN:"function",bK:"function",e:/\{/,eE:!0,c:[e.inherit(e.TM,{b:r}),{cN:"params",b:/\(/,e:/\)/,eB:!0,eE:!0,c:i}],i:/\[|%/},{b:/\$[(.]/},e.METHOD_GUARD,{cN:"class",bK:"class",e:/[{;=]/,eE:!0,i:/[:"\[\]]/,c:[{bK:"extends"},e.UTM]},{bK:"constructor get set",e:/\{/,eE:!0}],i:/#(?!!)/}});hljs.registerLanguage("css",function(e){var c={b:/(?:[A-Z\_\.\-]+|--[a-zA-Z0-9_-]+)\s*:/,rB:!0,e:";",eW:!0,c:[{cN:"attribute",b:/\S/,e:":",eE:!0,starts:{eW:!0,eE:!0,c:[{b:/[\w-]+\(/,rB:!0,c:[{cN:"built_in",b:/[\w-]+/},{b:/\(/,e:/\)/,c:[e.ASM,e.QSM]}]},e.CSSNM,e.QSM,e.ASM,e.CBCM,{cN:"number",b:"#[0-9A-Fa-f]+"},{cN:"meta",b:"!important"}]}}]};return{cI:!0,i:/[=\/|'\$]/,c:[e.CBCM,{cN:"selector-id",b:/#[A-Za-z0-9_-]+/},{cN:"selector-class",b:/\.[A-Za-z0-9_-]+/},{cN:"selector-attr",b:/\[/,e:/\]/,i:"$"},{cN:"selector-pseudo",b:/:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/},{b:"@(font-face|page)",l:"[a-z-]+",k:"font-face page"},{b:"@",e:"[{;]",i:/:/,c:[{cN:"keyword",b:/\w+/},{b:/\s/,eW:!0,eE:!0,relevance:0,c:[e.ASM,e.QSM,e.CSSNM]}]},{cN:"selector-tag",b:"[a-zA-Z-][a-zA-Z0-9_-]*",relevance:0},{b:"{",e:"}",i:/\S/,c:[e.CBCM,c]}]}});hljs.registerLanguage("scss",function(e){var t={cN:"variable",b:"(\\$[a-zA-Z-][a-zA-Z0-9_-]*)\\b"},i={cN:"number",b:"#[0-9A-Fa-f]+"};e.CSSNM,e.QSM,e.ASM,e.CBCM;return{cI:!0,i:"[=/|']",c:[e.CLCM,e.CBCM,{cN:"selector-id",b:"\\#[A-Za-z0-9_-]+",relevance:0},{cN:"selector-class",b:"\\.[A-Za-z0-9_-]+",relevance:0},{cN:"selector-attr",b:"\\[",e:"\\]",i:"$"},{cN:"selector-tag",b:"\\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|samp|script|section|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\\b",relevance:0},{b:":(visited|valid|root|right|required|read-write|read-only|out-range|optional|only-of-type|only-child|nth-of-type|nth-last-of-type|nth-last-child|nth-child|not|link|left|last-of-type|last-child|lang|invalid|indeterminate|in-range|hover|focus|first-of-type|first-line|first-letter|first-child|first|enabled|empty|disabled|default|checked|before|after|active)"},{b:"::(after|before|choices|first-letter|first-line|repeat-index|repeat-item|selection|value)"},t,{cN:"attribute",b:"\\b(z-index|word-wrap|word-spacing|word-break|width|widows|white-space|visibility|vertical-align|unicode-bidi|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform-style|transform-origin|transform|top|text-underline-position|text-transform|text-shadow|text-rendering|text-overflow|text-indent|text-decoration-style|text-decoration-line|text-decoration-color|text-decoration|text-align-last|text-align|tab-size|table-layout|right|resize|quotes|position|pointer-events|perspective-origin|perspective|page-break-inside|page-break-before|page-break-after|padding-top|padding-right|padding-left|padding-bottom|padding|overflow-y|overflow-x|overflow-wrap|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|order|opacity|object-position|object-fit|normal|none|nav-up|nav-right|nav-left|nav-index|nav-down|min-width|min-height|max-width|max-height|mask|marks|margin-top|margin-right|margin-left|margin-bottom|margin|list-style-type|list-style-position|list-style-image|list-style|line-height|letter-spacing|left|justify-content|initial|inherit|ime-mode|image-orientation|image-resolution|image-rendering|icon|hyphens|height|font-weight|font-variant-ligatures|font-variant|font-style|font-stretch|font-size-adjust|font-size|font-language-override|font-kerning|font-feature-settings|font-family|font|float|flex-wrap|flex-shrink|flex-grow|flex-flow|flex-direction|flex-basis|flex|filter|empty-cells|display|direction|cursor|counter-reset|counter-increment|content|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|columns|color|clip-path|clip|clear|caption-side|break-inside|break-before|break-after|box-sizing|box-shadow|box-decoration-break|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-left-width|border-left-style|border-left-color|border-left|border-image-width|border-image-source|border-image-slice|border-image-repeat|border-image-outset|border-image|border-color|border-collapse|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-attachment|background-blend-mode|background|backface-visibility|auto|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-fill-mode|animation-duration|animation-direction|animation-delay|animation|align-self|align-items|align-content)\\b",i:"[^\\s]"},{b:"\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\b"},{b:":",e:";",c:[t,i,e.CSSNM,e.QSM,e.ASM,{cN:"meta",b:"!important"}]},{b:"@",e:"[{;]",k:"mixin include extend for if else each while charset import debug media page content font-face namespace warn",c:[t,e.QSM,e.ASM,i,e.CSSNM,{b:"\\s[A-Za-z0-9_.-]+",relevance:0}]}]}});hljs.registerLanguage("bash",function(e){var t={cN:"variable",v:[{b:/\$[\w\d#@][\w\d_]*/},{b:/\$\{(.*?)}/}]},a={cN:"string",b:/"/,e:/"/,c:[e.BE,t,{cN:"variable",b:/\$\(/,e:/\)/,c:[e.BE]}]};return{aliases:["sh","zsh"],l:/\b-?[a-z\._]+\b/,k:{keyword:"if then else elif fi for while in do done case esac function",literal:"true false",built_in:"break cd continue eval exec exit export getopts hash pwd readonly return shift test times trap umask unset alias bind builtin caller command declare echo enable help let local logout mapfile printf read readarray source type typeset ulimit unalias set shopt autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate fc fg float functions getcap getln history integer jobs kill limit log noglob popd print pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof zpty zregexparse zsocket zstyle ztcp",_:"-ne -eq -lt -gt -f -d -e -s -l -a"},c:[{cN:"meta",b:/^#![^\n]+sh\s*$/,relevance:10},{cN:"function",b:/\w[\w\d_]*\s*\(\s*\)\s*\{/,rB:!0,c:[e.inherit(e.TM,{b:/\w[\w\d_]*/})],relevance:0},e.HCM,a,{cN:"",b:/\\"/},{cN:"string",b:/'/,e:/'/},t]}});hljs.registerLanguage("shell",function(s){return{aliases:["console"],c:[{cN:"meta",b:"^\\s{0,3}[/\\w\\d\\[\\]()@-]*[>%$#]",starts:{e:"$",sL:"bash"}}]}});hljs.registerLanguage("xml",function(e){var s={eW:!0,i:/</,relevance:0,c:[{cN:"attr",b:"[A-Za-z0-9\\._:-]+",relevance:0},{b:/=\s*/,relevance:0,c:[{cN:"string",endsParent:!0,v:[{b:/"/,e:/"/},{b:/'/,e:/'/},{b:/[^\s"'=<>`]+/}]}]}]};return{aliases:["html","xhtml","rss","atom","xjb","xsd","xsl","plist","wsf","svg"],cI:!0,c:[{cN:"meta",b:"<!DOCTYPE",e:">",relevance:10,c:[{b:"\\[",e:"\\]"}]},e.C("\x3c!--","--\x3e",{relevance:10}),{b:"<\\!\\[CDATA\\[",e:"\\]\\]>",relevance:10},{cN:"meta",b:/<\?xml/,e:/\?>/,relevance:10},{b:/<\?(php)?/,e:/\?>/,sL:"php",c:[{b:"/\\*",e:"\\*/",skip:!0},{b:'b"',e:'"',skip:!0},{b:"b'",e:"'",skip:!0},e.inherit(e.ASM,{i:null,cN:null,c:null,skip:!0}),e.inherit(e.QSM,{i:null,cN:null,c:null,skip:!0})]},{cN:"tag",b:"<style(?=\\s|>)",e:">",k:{name:"style"},c:[s],starts:{e:"</style>",rE:!0,sL:["css","xml"]}},{cN:"tag",b:"<script(?=\\s|>)",e:">",k:{name:"script"},c:[s],starts:{e:"<\/script>",rE:!0,sL:["actionscript","javascript","handlebars","xml"]}},{cN:"tag",b:"</?",e:"/?>",c:[{cN:"name",b:/[^\/><\s]+/,relevance:0},s]}]}});
// Utility function
function Util () {};

/* 
	class manipulation functions
*/
Util.hasClass = function(el, className) {
	if (el.classList) return el.classList.contains(className);
	else return !!el.className.match(new RegExp('(\\s|^)' + className + '(\\s|$)'));
};

Util.addClass = function(el, className) {
	var classList = className.split(' ');
 	if (el.classList) el.classList.add(classList[0]);
 	else if (!Util.hasClass(el, classList[0])) el.className += " " + classList[0];
 	if (classList.length > 1) Util.addClass(el, classList.slice(1).join(' '));
};

Util.removeClass = function(el, className) {
	var classList = className.split(' ');
	if (el.classList) el.classList.remove(classList[0]);	
	else if(Util.hasClass(el, classList[0])) {
		var reg = new RegExp('(\\s|^)' + classList[0] + '(\\s|$)');
		el.className=el.className.replace(reg, ' ');
	}
	if (classList.length > 1) Util.removeClass(el, classList.slice(1).join(' '));
};

Util.toggleClass = function(el, className, bool) {
	if(bool) Util.addClass(el, className);
	else Util.removeClass(el, className);
};

Util.setAttributes = function(el, attrs) {
  for(var key in attrs) {
    el.setAttribute(key, attrs[key]);
  }
};

/* 
  DOM manipulation
*/
Util.getChildrenByClassName = function(el, className) {
  var children = el.children,
    childrenByClass = [];
  for (var i = 0; i < el.children.length; i++) {
    if (Util.hasClass(el.children[i], className)) childrenByClass.push(el.children[i]);
  }
  return childrenByClass;
};

Util.is = function(elem, selector) {
  if(selector.nodeType){
    return elem === selector;
  }

  var qa = (typeof(selector) === 'string' ? document.querySelectorAll(selector) : selector),
    length = qa.length,
    returnArr = [];

  while(length--){
    if(qa[length] === elem){
      return true;
    }
  }

  return false;
};

/* 
	Animate height of an element
*/
Util.setHeight = function(start, to, element, duration, cb) {
	var change = to - start,
	    currentTime = null;

  var animateHeight = function(timestamp){  
    if (!currentTime) currentTime = timestamp;         
    var progress = timestamp - currentTime;
    var val = parseInt((progress/duration)*change + start);
    element.style.height = val+"px";
    if(progress < duration) {
        window.requestAnimationFrame(animateHeight);
    } else {
    	cb();
    }
  };
  
  //set the height of the element before starting animation -> fix bug on Safari
  element.style.height = start+"px";
  window.requestAnimationFrame(animateHeight);
};

/* 
	Smooth Scroll
*/

Util.scrollTo = function(final, duration, cb, scrollEl) {
  var element = scrollEl || window;
  var start = element.scrollTop || document.documentElement.scrollTop,
    currentTime = null;

  if(!scrollEl) start = window.scrollY || document.documentElement.scrollTop;
      
  var animateScroll = function(timestamp){
  	if (!currentTime) currentTime = timestamp;        
    var progress = timestamp - currentTime;
    if(progress > duration) progress = duration;
    var val = Math.easeInOutQuad(progress, start, final-start, duration);
    element.scrollTo(0, val);
    if(progress < duration) {
        window.requestAnimationFrame(animateScroll);
    } else {
      cb && cb();
    }
  };

  window.requestAnimationFrame(animateScroll);
};

/* 
  Focus utility classes
*/

//Move focus to an element
Util.moveFocus = function (element) {
  if( !element ) element = document.getElementsByTagName("body")[0];
  element.focus();
  if (document.activeElement !== element) {
    element.setAttribute('tabindex','-1');
    element.focus();
  }
};

/* 
  Misc
*/

Util.getIndexInArray = function(array, el) {
  return Array.prototype.indexOf.call(array, el);
};

Util.cssSupports = function(property, value) {
  if('CSS' in window) {
    return CSS.supports(property, value);
  } else {
    var jsProperty = property.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase();});
    return jsProperty in document.body.style;
  }
};

// merge a set of user options into plugin defaults
// https://gomakethings.com/vanilla-javascript-version-of-jquery-extend/
Util.extend = function() {
  // Variables
  var extended = {};
  var deep = false;
  var i = 0;
  var length = arguments.length;

  // Check if a deep merge
  if ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {
    deep = arguments[0];
    i++;
  }

  // Merge the object into the extended object
  var merge = function (obj) {
    for ( var prop in obj ) {
      if ( Object.prototype.hasOwnProperty.call( obj, prop ) ) {
        // If deep merge and property is an object, merge properties
        if ( deep && Object.prototype.toString.call(obj[prop]) === '[object Object]' ) {
          extended[prop] = extend( true, extended[prop], obj[prop] );
        } else {
          extended[prop] = obj[prop];
        }
      }
    }
  };

  // Loop through each object and conduct a merge
  for ( ; i < length; i++ ) {
    var obj = arguments[i];
    merge(obj);
  }

  return extended;
};

// Check if Reduced Motion is enabled
Util.osHasReducedMotion = function() {
  if(!window.matchMedia) return false;
  var matchMediaObj = window.matchMedia('(prefers-reduced-motion: reduce)');
  if(matchMediaObj) return matchMediaObj.matches;
  return false; // return false if not supported
}; 

/* 
	Polyfills
*/
//Closest() method
if (!Element.prototype.matches) {
	Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;
}

if (!Element.prototype.closest) {
	Element.prototype.closest = function(s) {
		var el = this;
		if (!document.documentElement.contains(el)) return null;
		do {
			if (el.matches(s)) return el;
			el = el.parentElement || el.parentNode;
		} while (el !== null && el.nodeType === 1); 
		return null;
	};
}

//Custom Event() constructor
if ( typeof window.CustomEvent !== "function" ) {

  function CustomEvent ( event, params ) {
    params = params || { bubbles: false, cancelable: false, detail: undefined };
    var evt = document.createEvent( 'CustomEvent' );
    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );
    return evt;
   }

  CustomEvent.prototype = window.Event.prototype;

  window.CustomEvent = CustomEvent;
}

/* 
	Animation curves
*/
Math.easeInOutQuad = function (t, b, c, d) {
	t /= d/2;
	if (t < 1) return c/2*t*t + b;
	t--;
	return -c/2 * (t*(t-2) - 1) + b;
};

Math.easeInQuart = function (t, b, c, d) {
	t /= d;
	return c*t*t*t*t + b;
};

Math.easeOutQuart = function (t, b, c, d) { 
  t /= d;
	t--;
	return -c * (t*t*t*t - 1) + b;
};

Math.easeInOutQuart = function (t, b, c, d) {
	t /= d/2;
	if (t < 1) return c/2*t*t*t*t + b;
	t -= 2;
	return -c/2 * (t*t*t*t - 2) + b;
};

Math.easeOutElastic = function (t, b, c, d) {
  var s=1.70158;var p=d*0.7;var a=c;
  if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
  if (a < Math.abs(c)) { a=c; var s=p/4; }
  else var s = p/(2*Math.PI) * Math.asin (c/a);
  return a*Math.pow(2,-10*t) * Math.sin( (t*d-s)*(2*Math.PI)/p ) + c + b;
};


/* JS Utility Classes */

// make focus ring visible only for keyboard navigation (i.e., tab key) 
(function() {
  var focusTab = document.getElementsByClassName('js-tab-focus'),
    shouldInit = false,
    outlineStyle = false,
    eventDetected = false;

  function detectClick() {
    if(focusTab.length > 0) {
      resetFocusStyle(false);
      window.addEventListener('keydown', detectTab);
    }
    window.removeEventListener('mousedown', detectClick);
    outlineStyle = false;
    eventDetected = true;
  };

  function detectTab(event) {
    if(event.keyCode !== 9) return;
    resetFocusStyle(true);
    window.removeEventListener('keydown', detectTab);
    window.addEventListener('mousedown', detectClick);
    outlineStyle = true;
  };

  function resetFocusStyle(bool) {
    var outlineStyle = bool ? '' : 'none';
    for(var i = 0; i < focusTab.length; i++) {
      focusTab[i].style.setProperty('outline', outlineStyle);
    }
  };

  function initFocusTabs() {
    if(shouldInit) {
      if(eventDetected) resetFocusStyle(outlineStyle);
      return;
    }
    shouldInit = focusTab.length > 0;
    window.addEventListener('mousedown', detectClick);
  };

  initFocusTabs();
  window.addEventListener('initFocusTabs', initFocusTabs);
}());

function resetFocusTabsStyle() {
  window.dispatchEvent(new CustomEvent('initFocusTabs'));
};
function cdSetCookie(name, value) {
  document.cookie = name + "=" + (value || "")  + "; path=/";
};

function cdGetCookie(name) {
  var nameEQ = name + "=";
  var ca = document.cookie.split(';');
  for(var i=0;i < ca.length;i++) {
      var c = ca[i];
      while (c.charAt(0)==' ') c = c.substring(1,c.length);
      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
  }
  return null;
};

function cdDeleteCookie(name) {
  document.cookie = name + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/";
};

function proRequiredModalStart(target) {
  $('[data-modal-trigger="modalProRequired"]').trigger('openModal', [target]);
};

// Pro -> price of team
function getTeamPrice(qt) {
  var price = 89;
  //change according to seats - implement correct evaluation
  if(qt > 10) {
    price = price + (9*71.2) + (qt - 10)*66.75;
  } else {
    price = price + (qt - 1)*71.2;
  }
  return Math.round(price*100)/100;
};

// open search modal from withing the iframe
function openSiteSearch() {
  $('.js-modal--ds-search').trigger('openModal');
};
jQuery(document).ready(function($){

	/* -------------------------------- 

	 experiments page - pagination 

	--------------------------------- */
	var gemGallery = $('.js-item-gallery');
	if( gemGallery.length > 0 ) {
		var gemNavigation = $('.js-item-pagination'),
			gemDatabase = [],
			gemPagination = 0, //not necessarely 0 - could be a page number
			maxPagination = 0,
			gemPerPage = 12,
			gemLoading = false,
			searchValue = false,
      filtered = false;

		var pageGet = findGetParameter('page'),
			searchGet = findGetParameter('s'),
			saveGet = findGetParameter('saved');
		if(pageGet) gemPagination = pageGet - 1;
		if(searchGet) searchValue = searchGet;

		// update gallery on pagination
		gemNavigation.on('click', '.js-btn', function(event){
			var self = this;
			if( gemLoading )
				return;
			gemLoading = true;
			$(self).addClass('btn--state-b');
			getGemDatabase(gemDatabase, function(result){
				gemDatabase = result;
				maxPagination = Math.ceil(gemDatabase.length/gemPerPage);
				gemPagination = gemPagination + 1;
				if( gemGallery.hasClass('js-gem-gallery') ) {
					showGemGallery(gemPagination);
				} else if( gemGallery.hasClass('js-blog-gallery') ) {
					showPostsGallery(gemPagination);
				} else if(gemGallery.hasClass('js-item-gallery--prj')) {
					showProjectsGallery(gemPagination);
				} else if(gemGallery.hasClass('js-item-gallery__tutorials')) {
					showTutorialsGallery(gemPagination);
				} else if(gemGallery.hasClass('js-nugget-gallery')) {
					showNuggetsGallery(gemPagination);
				} else {
					showComponentsGallery(gemPagination);
				}
				if(gemGallery.hasClass('js-item-gallery--prj')) {
					updateProjectsNavigation(gemNavigation, gemDatabase, gemPerPage);
				} else {
					updateNavigation(gemNavigation, gemPagination, maxPagination);
				}
				updateBrowserHistory(gemPagination+1, searchGet, saveGet);
				gemLoading = false;
				$(self).removeClass('btn--state-b');
			});
		});
	}

	//store favs if existent
	var projectFavs = (PROJECT && PROJECT.favs) ? JSON.parse(PROJECT.favs) : [];
	//update count
	var favs = $('.js-ds-sub-nav__fav-list-counter');
	if(favs.length > 0 ) favs.text(projectFavs.length).removeAttr('data-display');
	favs.on('updateCount', function(event, count){
		favs.text(count);
	});

	function getGemDatabase(database, callback) {
		if(database.length > 0 && !gemGallery.hasClass('js-item-gallery--prj')) {
			callback(database);
			return;
		}

		if(GEM_DB) {
			callback(GEM_DB);
			return;
		}
		if(gemGallery.hasClass('js-item-gallery--prj')) {
			var searchString = '';
			if(searchValue) {
				searchString = searchValue;
			}
			$.ajax({
				url      : AJAX_URL+'getProjects',
				data     : 'start='+((gemPagination+1)*gemPerPage - 1)+'&tot='+(gemPerPage+1)+'&search='+searchString,
				type     : 'POST',
				dataType : 'json',
				cache    : 'false',
				success: function(data){
					if(data.status == 0) {
						callback(data.response);
					}
				}
			});
		} else {
			$.ajax({
				type       : "GET",
				dataType   : "json",
				url        : 'json/gem/database-gem.json',
				beforeSend : function(){
			//show loader or similar
				},
				success    : function(data){
					callback(data);
				},
				error     : function(jqXHR, textStatus, errorThrown) {
						callback([]);
				}
			});
		}
	}

	function filterResults(data, search, additional) {
		var newDb = [];
		var more = additional ? ' '+additional : '';
		for(var i = 0; i< data.length; i++) {
			if( searchIsFound((data[i].tags+' '+data[i].title+' '+data[i].categories+ more).toLowerCase(), search.toLowerCase()) ) newDb.push(data[i]);
		}
		return newDb;
	}

	function searchIsFound(string, search) {
		var searchArray = search.split(" "),
			found = true;
		for(var i = 0; i < searchArray.length; i ++) {
			if ( string.indexOf(searchArray[i]) < 0 ) found = false;
		}
		return found;
	}

	function showGemGallery(pagination) {
		var start = gemPerPage*pagination,
			end = start + gemPerPage,
			content = '';
		for(var i = start; i < end; i++) {
			if( i < gemDatabase.length ) {
				theme = (gemDatabase[i].prevStyle == 'dark') ? 'data-theme="dark"' : '';
				content = content + '<li><a href="'+gemDatabase[i].url+'"><figure class="gem-img"><img src="assets/img/gems/previews/'+gemDatabase[i].previewImg+'" alt="'+gemDatabase[i].title+'"></figure><p '+theme+' class="gem-title" style="background-color: '+gemDatabase[i].backgroundPrev+'">'+gemDatabase[i].title+'</p></a></li>';
			}
		}
		gemGallery.append(content);
	}

	function showPostsGallery(pagination) {
		var start = gemPerPage*pagination,
			end = start + gemPerPage,
			content = '',
			clone = gemGallery.children('section').eq(0).clone();
		clone.removeClass('blog-article--featured');
		for(var i = start; i < end; i++) {
			if( i < gemDatabase.length ) {
				clone.find('.js-blog-item__link').attr('href', 'blog/post/'+gemDatabase[i].url).text(gemDatabase[i].title);
				clone.find('.js-blog-item__desc').text(gemDatabase[i].description);
				clone.find('.js-blog-item__date').text(gemDatabase[i]['publish-date']);
				content = content + clone[0].outerHTML;
			}
		}
		gemGallery.append(content);
	}

	function showComponentsGallery(pagination) { 
		var start = gemPerPage*pagination,
			end = start + gemPerPage,
			content = '';
		const disabled = (IS_LOGGED == '0' || IS_FREE == '1'); 
		var gemGalleryItem = gemGallery.children('li').eq(0).clone();
		gemGalleryItem.find('.js-preview-image svg').remove();
		// gemGalleryItem.removeClass('ds-comp-preview--pro js-ds-comp-preview--pro');
		for(var i = start; i < end; i++) {
			if( i < gemDatabase.length ) {
				gemGalleryItem.toggleClass('ds-comp-preview--marked', projectFavs.includes(gemDatabase[i].id.toString()));
				// gemGalleryItem.toggleClass('ds-comp-preview--pro js-ds-comp-preview--pro', (gemDatabase[i].pro == 'on'));
				gemGalleryItem.attr('data-code', gemDatabase[i].demo).find('.js-code-action-wrapper').attr('data-html', '').attr('data-scss', '').attr('data-js', '').attr('data-demo', gemDatabase[i].demo).find('a').attr('src', gemDatabase[i].url).attr('href', 'ds/components/info/'+gemDatabase[i].url);
				gemGalleryItem.find('.js-preview-image').attr('data-src', 'assets/img/ds/components/preview/'+gemDatabase[i].preview+'.svg').attr('href', 'ds/components/app/'+gemDatabase[i].url);
				gemGalleryItem.find('.js-preview-title').attr('title', gemDatabase[i].title).text(gemDatabase[i].title).attr('href', 'ds/components/app/'+gemDatabase[i].url);
				gemGalleryItem.find('.js-bookmark__btn').attr('data-comp', gemDatabase[i].id);
				// update pro/new banner
				gemGalleryItem.find('.js-ds-comp-preview__badge--pro').toggleClass('is-hidden', (gemDatabase[i].pro != 'on'));
				gemGalleryItem.find('.js-ds-comp-preview__badge--new').addClass('is-hidden');
				// reset for dependencies
				var hasDep = (gemDatabase[i]['dependencies-title'] && gemDatabase[i]['dependencies-title'] != '') || (gemDatabase[i]['extr-dependencies'] && gemDatabase[i]['extr-dependencies'] != ''),
					viewCode = gemGalleryItem.find('.js-menu-popup__view');

				// viewCode link -> reset js-view-code class and data modal based on user can/can't access code
				(gemDatabase[i]['pro'] == 'on' && disabled) 
					? viewCode.removeClass('js-view-code').addClass('js-pro-code').attr('data-modal', 'modalProRequired')
					: viewCode.addClass('js-view-code').removeClass('js-pro-code').attr('data-modal', 'modal-code');

				// there may not be a js-view-code -> component pro and user not active
				if(hasDep && viewCode.hasClass('js-view-code')) {
					viewCode.addClass('js-view-code--dependencies').attr('data-dep-url', gemDatabase[i]['dependencies-url']).attr('data-dep-titles', gemDatabase[i]['dependencies-title']);
					viewCode.attr('data-ext-dep', gemDatabase[i]['extr-dependencies'])
				} else {
					viewCode.removeClass('js-view-code--dependencies').removeAttr('data-dep-url').removeAttr('data-dep-titles').removeAttr('data-ext-dep');
				}

				content = content + gemGalleryItem[0].outerHTML;
			}
		}
		var newContent = $(content).appendTo(gemGallery);
		//add new triggers
		$('.js-modal[data-modal-trigger="modal-code"]').trigger('addTriggers', [newContent]);
		$('.js-modal[data-modal-trigger="modalProRequired"]').trigger('addTriggers', [newContent]);
		// load svg images
		loadComponentsSVGImages(newContent);
	}

	function showTutorialsGallery(pagination) {
		var start = gemPerPage*pagination,
			end = start + gemPerPage,
			content = '',
			clone = gemGallery.children('.js-tutorial-card').eq(0).clone();
		for(var i = start; i < end; i++) {
			if( i < gemDatabase.length ) {
				clone.attr('href', 'tutorials/'+gemDatabase[i].url);
				clone.find('img').attr('src', 'assets/img/tutorials/previews/'+gemDatabase[i].preview).attr('alt', gemDatabase[i].title);
				clone.find('time').text(gemDatabase[i].date);
				clone.find('.js-title').text(gemDatabase[i].title);
				content = content + clone[0].outerHTML;
			}
		}
		gemGallery.append(content);
	}

	function showNuggetsGallery(pagination) {
		var start = gemPerPage*pagination,
			end = start + gemPerPage,
			content = '',
			clone = gemGallery.children('.js-nugget-card').eq(0).clone();
		for(var i = start; i < end; i++) {
			if( i < gemDatabase.length ) {
				clone.find('.js-nugget-link').attr('href', 'nuggets/'+gemDatabase[i].url);
				clone.find('img').attr('src', 'web/assets/img/nuggets/preview/'+gemDatabase[i].preview).attr('alt', gemDatabase[i].title);
				clone.find('.js-nugget-date').text(gemDatabase[i].release);
				clone.find('.js-nugget-title').text(gemDatabase[i].title);
				content = content + clone[0].outerHTML;
			}
		}
		gemGallery.append(content);
	}

	function showProjectsGallery(pagination) {
		var gemGalleryItem = gemGallery.children('li').eq(1).clone(),
			firstId = gemDatabase[0] ? gemDatabase[0]['id'] : false; 
			content = '';
		for(var i = 0; i < gemPerPage; i++) {
			if( !gemDatabase[i]) break;
			var colors = getPrjArrayOfColors(gemDatabase[i]['colors']);
			gemGalleryItem.attr('data-id', gemDatabase[i]['id']);
			gemGalleryItem.find('.js-select-project').attr('data-project-id', gemDatabase[i]['id']).eq(0).attr('style', 'background-color: '+colors[4]+';').attr('data-label', 'Explore '+gemDatabase[i]['label']);
			gemGalleryItem.find('.project-gallery__overlay').attr('style', 'background-color: '+colors[2]+';');
			gemGalleryItem.find('.project-gallery__overlay-msg').attr('style', 'background-color: '+colors[2]+'; color: '+colors[4]+';');
			gemGalleryItem.find('.project-gallery__item-dot').eq(0).attr('style', 'background-color: '+colors[0]+';').end().eq(1).attr('style', 'background-color: '+colors[1]+';').end().eq(2).attr('style', 'background-color: '+colors[2]+';').end().eq(3).attr('style', 'background-color: '+colors[3]+';');
			gemGalleryItem.find('.js-projects-gallery__title').children('span').text(gemDatabase[i]['label']).attr('id', 'project-label-'+gemDatabase[i]['id']);
			gemGalleryItem.find('.js-ds-trigger-menu-popup').attr('data-menu', 'js-menu-popup--prj-'+gemDatabase[i]['id']);
			var menuPopup = gemGalleryItem.find('.js-menu-popup');
			menuPopup.attr('class', 'menu-popup js-menu-popup js-menu-popup--prj-'+gemDatabase[i]['id']);
			menuPopup.find('.js-prj-action').attr('data-project', gemDatabase[i]['id']);
			menuPopup.find('.js-delete-project').attr('data-label', gemDatabase[i]['label']);

			content = content + gemGalleryItem[0].outerHTML;
		}
		$(content).appendTo(gemGallery);
		//add new triggers
		if(firstId) {
			var newItems = gemGallery.find('li.js-prj-wrapper[data-id='+firstId+']').prev().nextAll();
			initPrjNewEvents(newItems);
		}
	}

	function initPrjNewEvents(items) {
		for(var i =0; i < items.length; i++) {
			initMenuActionArray(items.eq(i)[0].getElementsByClassName('js-ds-trigger-menu-popup'));//tooltip
			// select project 
			var select = items.eq(i)[0].getElementsByClassName('js-select-project');
			initPrjSelection(select);
			// duplicate
			window.initDuplicateProject(items.eq(i)[0].getElementsByClassName('js-duplicate-project')[0]);
			// delete
			window.initDeleteProject(items.eq(i)[0].getElementsByClassName('js-delete-project')[0]);
			// rename
			new EditProject(items.eq(i)[0].getElementsByClassName('js-project-modify')[0]);
			// export
			window.initExportProject(items.eq(i)[0].getElementsByClassName('js-export-project')[0]);
		}
	};	

	function initPrjSelection(select) {
		for( var i = 0; i < select.length; i++) {
			(function(i){window.initSelectProject(select[i]);})(i);
		}
	};

	function updateNavigation(navigation, pagination, maxPagination) {
		(pagination < maxPagination - 1) ? navigation.removeClass('btn-load-more--is-hidden') : navigation.addClass('btn-load-more--is-hidden');
	}

	function updateProjectsNavigation(navigation, result, count) {
		(result.length > count) ? navigation.removeClass('btn-load-more--is-hidden') : navigation.addClass('btn-load-more--is-hidden');
	}

	function findGetParameter(parameterName) {
	    var result = null,
	        tmp = [];
	    var items = location.search.substr(1).split("&");
	    for (var index = 0; index < items.length; index++) {
	        tmp = items[index].split("=");
	        if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);
	    }
	    return result;
	}

	function updateBrowserHistory(page, search, saved) {
		var actualPage = location.pathname+'?page='+page+'&show=all';
		if(search) {
			actualPage = actualPage+'&s='+search;
		}
		if(saved) {
			actualPage = actualPage+'&saved=true';
		}
		window.history.replaceState({path: actualPage},'',actualPage);
	}

	function getPrjArrayOfColors(colorsStrg) {
		var colors = [];
		if(colorsStrg && colorsStrg != '' ) {
			arrayColors = JSON.parse(colorsStrg);
			colors = [convertToHsl(arrayColors['primary'][0][2]), convertToHsl(arrayColors['contrastColors'][0][2]), convertToHsl(arrayColors['contrastColors'][0][4]), convertToHsl(arrayColors['accent'][0][2]), convertToHsl(arrayColors['contrastColors'][0][0])];
		} else {
			colors = ['hsl(220, 90%, 56%)', 'hsl(240, 1%, 83%)', 'hsl(240, 8%, 12%)', 'hsl(349, 75%, 51%)', 'hsl(0, 0%, 100%)'];
		}
		return colors;
	};

	function convertToHsl(color) {
		color1 = color[0];
		color2 = Math.round(color[1]*100);
		color3 = Math.round(color[2]*100);
		return 'hsl('+color1+', '+color2+'%, '+color3+'%)';
	}

	function loadComponentsSVGImages(content) {
		$(content).find('.js-preview-image').each(function(){
			var $self = $(this);
	
			$.get($self.attr('data-src'), function(data) {
				$self.append($(data).find('svg'));
			}, 'xml');
		});
	}

	/* -------------------------------- 

	 components gallery - actions menu 

	--------------------------------- */
	var componentsGallery = $('.js-ds-comp-gallery');
	if( componentsGallery.length > 0) {
		componentsGallery.on('click', '.js-ds-comp-actions', function(event){
			toggleMenuPopup(event, false);
		});

		// close menu popup when clicking outside it or pressing esc key
		menuPopupEvents();

		componentsGallery.on('focus', '.js-preview-image', function(event){
			componentAddFocus(event);
		});

		componentsGallery.on('focus', '.js-preview-title', function(event){
			componentAddFocus(event);
		});

		componentsGallery.on('focusout', '.js-preview-image', function(event){
			componentRemoveFocus(event);
		});

		componentsGallery.on('focusout', '.js-preview-title', function(event){
			componentRemoveFocus(event);
		});

		function componentAddFocus(event) {
			$(event.currentTarget).parents('.js-ds-comp-preview').addClass('ds-comp-preview--is-focused');
		};

		function componentRemoveFocus(event) {
			if($(document.activeElement).parents('.js-ds-comp-preview').is($(event.currentTarget).parents('.js-ds-comp-preview'))) return;
			$(event.currentTarget).parents('.js-ds-comp-preview').removeClass('ds-comp-preview--is-focused');
		};
	}

	function initMenuActionArray(array) {
		if( array.length > 0) {
			for( var i = 0; i < array.length; i++) {
				(function(i){initMenuActions(array[i]);})(i);
			}
		}
	}

	function initMenuActions(menuTrigger) {
		var menu = document.getElementsByClassName(menuTrigger.getAttribute('data-menu'));
		var menuT = (menu.length > 0) ? menu[0] : false;
		menuTrigger.addEventListener('click', function(event){
			toggleMenuPopup(event, menuT);
		});

		menuPopupEvents();
	};

	var galleryMenuActions = document.getElementsByClassName('js-ds-trigger-menu-popup');
	initMenuActionArray(galleryMenuActions);

	function toggleMenuPopup(event, menu) {
		event.preventDefault();
		var menuPopup;
		if(menu) {
			menuPopup = $(menu);
		} else {
			menuPopup = $(event.currentTarget).parent().siblings('.js-menu-popup');
		}
		if( menuPopup.hasClass('menu-popup--is-visible') ) {
			menuPopup.removeClass('menu-popup--is-visible');
		} else {
			$('.js-menu-popup.menu-popup--is-visible').removeClass('menu-popup--is-visible');
			menuPopup.addClass('menu-popup--is-visible');
		}
	};

	function menuPopupEvents() {
		$(document).on('click', function(event){
			if($(event.target).parents('.js-menu-popup').addBack('.js-menu-popup').length == 0 && $(event.target).parents('.js-ds-btn-menu-actions').addBack('.js-ds-btn-menu-actions').length == 0) {
				$('.js-menu-popup.menu-popup--is-visible').removeClass('menu-popup--is-visible');
			}
		});

		$(window).on('keyup', function(event){
			if( event.keyCode && event.keyCode == 27 || event.key && event.key == 'Escape' ) {
				$('.js-menu-popup.menu-popup--is-visible').removeClass('menu-popup--is-visible');
			}
		});
	};

	/* ---------------------------------------------- 

	 	if the page contains code to be highlighted, 
	 	initialize the plugin

	----------------------------------------------- */
	var codeContainer = $('.js-highlight');
	if( codeContainer.length > 0 ) {
		var code = $('.js-hljs');
		hljs.configure({tabReplace: '  '});
		code.each(function(index){
			$(this).parent('pre').removeAttr('class');
			hljs.highlightBlock($(this).get(0));
		});
	}

	/* -------------------------------- 

	 	globals - gallery search 

	--------------------------------- */
	var globalsGallery = $('.js-globals__list');
	if( globalsGallery.length > 0 ) {
		var search = (globalsGallery.attr('data-search')) ? globalsGallery.attr('data-search').toLowerCase() : '';
		var items = globalsGallery.children('li'),
			searchResultsNone = $('.js-search-results-none');
		if( search ) {
			updateGlobalsGallery(items, search, searchResultsNone);
		}

		globalsGallery.removeClass('ds-globals__list--is-hidden');
	}

	function updateGlobalsGallery(items, search, searchResultsNone) {
		var tot = 0;
		for(var i = 0; i < items.length; i++) {
			var title = items.eq(i).find('.js-ds-global-item__title').text().toLowerCase();
			if(!searchIsFound(title, search)) {
				items.eq(i).addClass('ds-global-item--is-hidden');
			} else {
				items.eq(i).removeClass('ds-global-item--is-hidden');
				tot = tot + 1;
			}
		}
		
		(tot == 0)
			? searchResultsNone.removeClass('search-results-none--is-hidden')
			: searchResultsNone.addClass('search-results-none--is-hidden');
	}

	/* -------------------------------- 

	 	ajax search suggestions

	--------------------------------- */
	var modalSearch = $('.js-modal--ds-search'),
		searchDb = [],
		searchDbTypes = [],
		hintList, hintListWrapper, gallerySearch, loaderSearch;
	if( modalSearch.length > 0 ) {
		var searchTimeout;
		hintList = $('.js-ds-search__list');
		hintListWrapper = hintList.parents('.js-ds-search');
		gallerySearch = modalSearch.find('.js-ds-search__input');
		loaderSearch = modalSearch.find('.js-ds-search__loader');
		
		// open modal when using the shortcut
		window.addEventListener('keydown', function(event){
			if( event.keyCode && event.keyCode == 69 || event.key && event.key.toLowerCase() == 'e' ) {
				if(event.ctrlKey || event.metaKey) modalSearch.trigger('openModal');
			}
		});

		modalSearch.on('modalIsClose', function(event){
			gallerySearch.val('');
			resetSearchList();
		});
		
		gallerySearch.on('keyup search focus', function(e) {
			clearTimeout(searchTimeout);
			//show suggestion list
			searchTimeout = setTimeout(function(){
				if(e.target.value != '') loaderSearch.removeClass('ds-search__loader--is-hidden');
				updateSearchSuggestions(e.target.value)
			}, 100);
		});

		gallerySearch.on('keydown', function(e) {
			if(e.key.toLowerCase() == 'arrowdown') {
				//move focus to first element in dropdown when clicking on the down arrow key
				e.preventDefault();
				var firstResult = hintList.children('li').eq(0).children('a').eq(0);
				if( firstResult.length > 0 ) firstResult.attr('tabindex','-1').focus();
			}
		});

		gallerySearch.on('focusout', function(event) {
			//when focusing out of the search, close suggestion list -- unless you are not on in
			if(hintListWrapper.is(':hover') || $(event.relatedTarget).parents(hintListWrapper).length > 0 ) return;
			resetSearchList();
		});

		hintList.on('keydown', function(e) {
			//navigate through the suggestion list using the arrow keys
			var key = e.key.toLowerCase();
			if(key == 'arrowdown' || key == 'arrowup') {
				e.preventDefault();
				var listItem = hintList.find('a:focus').parent('li');

				if(key == 'arrowdown') {
					var nextList = (listItem.next().length > 0) ? listItem.next() : hintList.children('li').eq(0);
				} else {
					var nextList = (listItem.prev().length > 0) ? listItem.prev() : hintList.children('li').last();
				}
				nextList.children('a').attr('tabindex','-1').focus();
			}
		});

		hintList.on('focusout', function(e) {
			//if you leave the suggestion list, hide the list (unless you are not focusing back on the search input)
			if($(e.relatedTarget).is(gallerySearch) || $(event.relatedTarget).parents(hintListWrapper).length > 0) return;
			resetSearchList();
		});
	}

	function updateSearchSuggestions(value) {
		if(!value) {
			resetSearchList();
			return;
		}
		if( searchDb.length == 0 ) {
			getDbAll(function(){
				filtergetDbAll(value);
			});
		} else {
			filtergetDbAll(value);
		}
	}

	function resetSearchList() {
		hintListWrapper.removeClass('is-hidden');
		hintList.children().remove();
		loaderSearch.addClass('ds-search__loader--is-hidden');
	}

	function getDbAll(callback) {
		if( $('.js-ds-comp-gallery').length > 0 || $('.js-ds-component-main-content').length > 0 ) {
			searchDbTypes = ['components', 'documentations', 'globals', 'pages', 'subcategories', 'categories'];
		} else if( $('.js-ds-globals').length >  0) {
			searchDbTypes = ['globals', 'documentations', 'components', 'pages', 'subcategories', 'categories'];
		} else {
			searchDbTypes = ['documentations', 'components', 'globals', 'pages', 'subcategories', 'categories'];
		}

		getDbSingle(searchDbTypes[0], function(data){
			searchDb[0] = data;
			getDbSingle(searchDbTypes[1], function(data){
				searchDb[1] = data;
				getDbSingle(searchDbTypes[2], function(data){
					searchDb[2] = data;
					searchDb[3] = [{title: "Components", url: "components", tags: "components"}, {title: "Globals", url: "globals", tags: "globals"}, {title: "Export", url: "export", tags: "export"}, {title: "Documentation", url: "get-started", tags: "documentation, docs"}];
					getDbSingle(searchDbTypes[4], function(data){
						searchDb[4] = data;
						getDbSingle(searchDbTypes[5], function(data){
							searchDb[5] = data;
							// to the categories -> add 'Saved'
							searchDb[5].push({title: 'Saved', url:  'fav'});
							callback();
						});
					});
				});
			});
		});
	}

	function getDbSingle(type, callback) {
		var randomVer = (COMPNUM) ? COMPNUM : parseInt(Math.random() *10 + 1);
		$.ajax({
      type       : "GET",
      dataType   : "json",
      url        : 'json/'+type+'/database-'+type+'.json?ver='+randomVer,
      success    : function(data){
      	callback(data);
      },
      error     : function(jqXHR, textStatus, errorThrown) {
        callback([]);
      }
		});
	}

	function filtergetDbAll(value) {
		var newDb = [],
			// dbLength = 4;
			dbLength = 6;
		for(var i = 0; i < dbLength; i++) {
			var additionalTags = getAdditionalSearchTags(searchDbTypes[i]);
			newDb[i] = filterResults(searchDb[i], value, additionalTags);
		}
		//check if there are available results
		(newDb[0].length + newDb[1].length + newDb[2].length + newDb[3].length + newDb[4].length + newDb[5].length> 0 )
			? hintListWrapper.removeClass('is-hidden')
			: hintListWrapper.addClass('is-hidden');

		//populate ul
		list = '';
		for(var i = 0; i < dbLength; i++) {
			list = list + populateResultList(newDb[i], searchDbTypes[i]);
		}
		hintList.html(list);
		loaderSearch.addClass('ds-search__loader--is-hidden');
	} 

	function getAdditionalSearchTags(type) {
		if(type == 'documentations') return 'docs documentations';
		if(type == 'components') return 'components';
		if(type == 'globals') return 'globals';
		if(type == 'pages') return 'page';
		if(type == 'categories' || type == 'subcategories') return 'category';
	}

	function populateResultList(db, type) {
		var list = '',
			// label = (type == 'documentations') ? 'documentation' : type,
			label = type.substring(0, type.length - 1),
			urlBase = '',
			classBase = '',
			categoryList = [];
		switch (type) {
			case 'documentations':
				urlBase = 'ds/docs/';
				classBase = 'ds-search__item--docs';
				break;
			case 'globals':
				urlBase = 'ds/globals/';
				classBase = 'ds-search__item--global';
				break;
			case 'pages':
				urlBase = 'ds/';
				classBase = 'ds-search__item--page';
				break;
			case 'subcategories':
				urlBase = 'ds/components/';
				classBase = 'ds-search__item--category';
				label = 'category';
				break;
			case 'categories':
				urlBase = 'ds/components/';
				classBase = 'ds-search__item--category';
				label = 'category';
				break;
			default:
				urlBase = 'ds/components/app/';
				classBase = 'ds-search__item--component';
		}
		for( var i = 0; i < db.length; i++) {
			var url = db[i]['url'],
				title = db[i]['title'];
			if(type == 'subcategories') {
				var categoryLabel = getSubCat(db[i]);
				url = db[i]['category']+'/'+url;
				title = categoryLabel+' > '+title;
				categoryList.push(db[i]['category']);
			}
			list = list + '<li class="'+classBase+'"><a href="'+urlBase + url+'"><span class="ds-search__title">'+ title+'</span><span class="ds-search__label">'+label+'</span></a></li>';
		}
		return list;
	};

	function getSubCat(subcategory) {
		var category = [];
		for(var i = 0; i < searchDb[5].length; i++) {
			if(searchDb[5][i]['url'] == subcategory['category']) {
				category = searchDb[5][i]['title'];
				break;
			}
		}
		return category;
	};

	/* -------------------------------- 

	 	newsletter form  

	--------------------------------- */
	var newsletter = $('.js-newsletter');
	if( newsletter.length > 0 ) {
		var newsletterForm = newsletter.find('.js-newsletter-form'),
			submitting = false,
			responseMessage = newsletter.find('.js-response-message'),
			newsletterEmail = newsletter.find('.js-email'), 
			newsletterBtn = newsletter.find('.js-btn');
    newsletterForm.on('submit', function(event){
			event.preventDefault();
			if( submitting ) {
				return false;
			}
			submitting = true;
			responseMessage.addClass('newsletter__response--is-hidden').removeClass('newsletter__response--text-red newsletter__response--text-green');
			newsletterBtn.removeClass('btn--state-c').addClass('btn--state-b');
			$.ajax({
				url      : 'post/subscribeNewsletter',
				data     : newsletterForm.serialize(),
				type     : 'POST',
				dataType: 'json',
				cache   : 'false',
			}).done(function(data){
				var response = JSON.parse(data.response);
				//show message
				if( response.status && response.status.toLowerCase() == 'pending') {
					responseMessage.addClass('newsletter__response--text-green').text('🙌 Awesome! We just sent you a link by email to confirm your subscription');
					newsletterBtn.addClass('btn--state-c').removeClass('newsletter__btn--email-is-valid');
				} else if( response.error && response.error.code.toLowerCase() == "member_exists_with_email_address") {
					responseMessage.addClass('newsletter__response--text-green').text('Your email address is already subscribed 👍');
				} else {
					responseMessage.addClass('newsletter__response--text-red').text('🤔 Sorry, there was an error. Please try again.')
				}
				responseMessage.removeClass('newsletter__response--is-hidden');
			}).fail(function(data){
				responseMessage.addClass('newsletter__response--text-red').text('🤔 Sorry, there was an error. Please try again.')
				responseMessage.removeClass('newsletter__response--is-hidden');
			}).always(function(data){
				submitting = false;
				newsletterBtn.removeClass('btn--state-b');
			});
			return false;
		});

		newsletterEmail.on('input', function(event){
			var insertedEmail = newsletterEmail.val(),
				atPosition = insertedEmail.indexOf("@");
		    	dotPosition = insertedEmail.lastIndexOf(".");
			(atPosition< 1 || dotPosition<atPosition+2 ) ? newsletterBtn.removeClass('newsletter__btn--email-is-valid') : newsletterBtn.addClass('newsletter__btn--email-is-valid');
			newsletterBtn.removeClass('btn--state-c')
		});
	}

	/* -------------------------------- 

	 	mobile navigation

	--------------------------------- */
	//main nav
	var mobileNav = $('.js-main-nav');
	if( mobileNav.length > 0 ) {
		var nav = mobileNav.find('.js-nav'),
			navTrigger = mobileNav.find('.js-trigger'),
			mainHeader = $('.js-main-header'); 

		navTrigger.on('click', function(event){
			event.preventDefault();
			nav.toggleClass('is-visible');
			mainHeader.toggleClass('main-header--nav-visible');
		});
	}

	//design system section -> mobile subnavigation
	var dsSubNav = $('.js-ds-sub-nav');
	if( dsSubNav.length > 0 ) {
		var dsSubNavTrigger = $('.js-ds-sub-nav__btn');
		dsSubNavTrigger.on('click', function(event){
			event.preventDefault();
			dsSubNav.addClass('ds-sub-nav__list--is-visible');
		});

		dsSubNav.on('click', '.js-ds-sub-nav__close', function(event){
			event.preventDefault();
			dsSubNav.removeClass('ds-sub-nav__list--is-visible');
		});
	}
	
	/* -------------------------------- 

	 	app header menu

	--------------------------------- */
	var appHeaderMenu = $('.js-app-header-menu');
	if(appHeaderMenu.length > 0) {
		//app pages -> top left menu
		var appMenuTrigger = $('.js-app-header-menu-toggle');
		appMenuTrigger.on('click', function(event){
			event.preventDefault();
			appHeaderMenu.toggleClass('menu-popup--is-visible');
			appHeaderMenu.hasClass('menu-popup--is-visible') ? appMenuTrigger.attr('aria-expanded', 'true') : appMenuTrigger.attr('aria-expanded', 'false');
		});

		appMenuTrigger.on('close-app-menu-popup', function(){
			closeAppMenuTrigger();
		});

		$(window).on('click', function(event){
			if( !$(event.target).is(appMenuTrigger) && $(event.target).parents('.js-app-header-menu-toggle').length == 0 && !$(event.target).is(appHeaderMenu) && $(event.target).parents('.js-app-header-menu').length == 0 ) {
				closeAppMenuTrigger();
			}
		});

		//toggle sidebar visibility
		var sidebarToggle = $('.js-sidebar-desk-trigger');
		if( sidebarToggle.length > 0) {
			var sidebars = $('.js-app-sidebar--toggle'),
				appCanvas = $('.js-app-canvas');
			
			sidebarToggle.on('click', function(event){
				event.preventDefault();
				sidebarToggle.toggleClass('menu-popup__item--state-b');
				sidebars.toggleClass('app-sidebar--is-hidden');
				appCanvas.toggleClass('app-canvas--sidebar');
			});
		}

		function closeAppMenuTrigger() {
			if(!appHeaderMenu.hasClass('menu-popup--is-visible')) return;
			appHeaderMenu.removeClass('menu-popup--is-visible');
			appMenuTrigger.attr('aria-expanded', 'false');
		};
	}

	//toggle dark mode
	var darkModeToggle = $('.js-app-dark-mode');
	if( darkModeToggle.length > 0) {
		//check if app mode has been set
		if(localStorage.getItem('cd-app-mode') != null) {
			setAppMode(localStorage.getItem('cd-app-mode'));
		}
		
		darkModeToggle.on('click', function(event){
			event.preventDefault();
			var mode = darkModeToggle.hasClass('btn--state-b') ? 'default' : 'dark';
			setAppMode(mode, true)
		});

		function setAppMode(mode, bool) {
			if(mode != 'dark' && mode != 'default') mode = 'default';
			darkModeToggle.toggleClass('btn--state-b', (mode=='dark'));
			$('body').attr('data-theme', mode);
			if(bool) localStorage.setItem('cd-app-mode', mode);
			cdSetCookie('cd-app-mode', mode);
		};
	}
	/* -------------------------------- 

	 	back to top

	--------------------------------- */
	var backTop = $('.js-back-to-top'),
		scrolling = false,
		offset = 600;
	if( backTop ) {
		//update back to top visibility on scrolling
		window.addEventListener("scroll", function(event) {
			if( !scrolling ) {
				scrolling = true;
				(!window.requestAnimationFrame) ? setTimeout(checkBackToTop, 250) : window.requestAnimationFrame(checkBackToTop);
			}
		});
		//smooth scroll to top
		backTop.on('click', function(event) {
			event.preventDefault();
			$('body,html').animate({'scrollTop': 0}, 300);
		});
	}

	function checkBackToTop() {
		( window.scrollY > offset ) ? backTop.addClass('back-to-top--is-visible') : backTop.removeClass('back-to-top--is-visible');
		scrolling = false;
	}

	/* -------------------------------- 

	 trigger animation on hover

	--------------------------------- */
	var animateHover = $('.js-animate-hover');
	if( animateHover.length > 0 ) {
		animateHover.each(function(){
			$(this).on('mouseenter', function(){
				var self = this;
				$(self).addClass('hover');
				setTimeout(function(){
					$(self).removeClass('hover');
				}, Number($(self).attr('data-duration')));
			});
		});
	}

	/**********************
		cookies banner
	***********************/
	var policyBanner = $('.js-privacy-policy-alert');
	if( policyBanner.length > 0 && ROUTE.indexOf('ds_components_app_') < 0 && ROUTE.indexOf('ds_globals_') < 0) {
		if(localStorage.getItem('cd-cookies-alert') == null ) {
			policyBanner.addClass('notification--is-visible');
			localStorage.setItem('cd-cookies-alert', 'seen');
		}
	}

	/**********************
		max login number notice
	***********************/
	var maxLoginBanner = $('.js-max-login-notice');
	if( maxLoginBanner.length > 0 ) {
		deleteCookie('SHOW_MAX_NOTICE');
	}

	/**********************
		globals/components banner
	***********************/
	var appMoreInfoBanner = $('.js-app-more-info');
	if( appMoreInfoBanner.length > 0 ) {
		var type = appMoreInfoBanner.attr('data-info');
		if(localStorage.getItem(type) == null ) {
			appMoreInfoBanner.addClass('app-info-banner--is-visible');
			appMoreInfoBanner.on('click', '.js-app-info-banner__close', function(event){
				event.preventDefault();
				appMoreInfoBanner.removeClass('app-info-banner--is-visible');
				localStorage.setItem(type, 'seen');
			});
		}
	}

	/* -------------------------------- 

	 	smooth scroll

	--------------------------------- */
	var internalAnchors = $('.js-smooth-scroll');
	if( internalAnchors.length > 0 ) {
		internalAnchors.on('click', function(event){
			event.preventDefault();
			var id = $(this).attr('href');

			$('body,html').animate({
				scrollTop: $(id).offset().top ,
			 	}, 300, function(){  
			 		window.location.hash = id; 
			 	}
			);
		});
	}

	/**********************
		account dropdown
	***********************/
	var accountMenu = $('.js-main-nav__account');
	if( accountMenu.length > 0 ) {
		var accountDropDown = $('.js-main-nav__menu');
		accountMenu.on('click', function(event) {
			event.preventDefault();
			accountDropDown.toggleClass('main-nav__menu--is-visible');
		});
	};

	/**********************
		notifications
	***********************/
	var notifications = $('.js-notification');
	if( notifications.length > 0 ) {
		notifications.on('click', '.js-notification__close', function(event){
			event.preventDefault();
			$(event.delegateTarget).removeClass('notification--is-visible');
		});
	};

	function deleteCookie(name) {
    document.cookie = name + "=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/";
	 };

	/**********************
		tutorial page - download link
	***********************/
	var downloadRedirectLink = document.getElementsByClassName('js-redirect-link');
	if(downloadRedirectLink.length > 0) {
		downloadRedirectLink[0].addEventListener('click', function(event){
			event.preventDefault();
			localStorage.setItem('download-tutorial', downloadRedirectLink[0].getAttribute('data-tutorial'));
			window.location.href = downloadRedirectLink[0].getAttribute('href');
		});
	}

	/**********************
		redirect page - download tutorial demo folder
	***********************/
	var directLink = document.getElementsByClassName('js-direct-link');
	if(directLink.length > 0 ) {
		var tutorial = localStorage.getItem('download-tutorial');
		if(tutorial != null) {
			var link = directLink[0].getElementsByTagName('a')[0],
				href = link.getAttribute('href').replace('{tutorial}', tutorial);
			link.setAttribute('href', href);
			link.click();
		} else {
			Util.addClass(directLink[0], 'is-hidden');
		}
	}

	/*************************************
		tutorial - bodymovin animation
	**************************************/
	var tutorialMediaWrapper = document.getElementsByClassName('js-tutorial-media');
	if(tutorialMediaWrapper.length > 0 ) {
		window.requestAnimationFrame(triggerLottieAnim.bind(tutorialMediaWrapper[0]));

		function triggerLottieAnim() {
			var self = this;
			
			var previewAnimation = lottie.loadAnimation({
				container: this,
				renderer: 'svg',
				loop: false,
				autoplay: false,
				path: 'assets/bodymovin/tutorials/data-'+this.getAttribute('data-bodymovin')+'.json'
			});

			var intObservSupported = ('IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'intersectionRatio' in window.IntersectionObserverEntry.prototype);

			if(!intObservSupported) return;

			var observer = new IntersectionObserver(previewAnimationObserve.bind(self, previewAnimation), {threshold: [0, 0.8, 1]});
    	observer.observe(self);
		}

		function previewAnimationObserve(animObj, entries, observer) {
			if(entries[0].intersectionRatio > 0.7) animObj.play();
		};
	}

	/**********************
		experiments - download link
	***********************/
	var downloadExperiment = document.getElementsByClassName('js-download-experiment');
	if(downloadExperiment.length > 0) {
		downloadExperiment[0].addEventListener('click', function(event){
			event.preventDefault();
			localStorage.setItem('download-experiment', downloadExperiment[0].getAttribute('data-experiment'));
			window.location.href = downloadExperiment[0].getAttribute('href');
		});
	}

	/**********************
		redirect page - download experiment demo folder
	***********************/
	var experimentLink = document.getElementsByClassName('js-direct-exp-link');
	if(experimentLink.length > 0 ) {
		var experiment = localStorage.getItem('download-experiment');
		if(experiment != null) {
			var link = experimentLink[0].getElementsByTagName('a')[0],
				href = link.getAttribute('href').replace('{experiment}', experiment);
			link.setAttribute('href', href);
			link.click();
		} else {
			Util.addClass(experimentLink[0], 'is-hidden');
		}
	}
});
/**********************
	Modal component
***********************/
(function() {
	this.Modal = function(element) {
		this.element = element;
		this.modalType = this.element.getAttribute('data-modal-trigger');
		this.triggers = document.querySelectorAll('[data-modal="'+this.modalType+'"]');
		this.firstFocusable = null;
		this.lastFocusable = null;
		this.selectedTrigger = null;
		this.showClass = "modal--is-visible";
		this.modalCodeWrapper = null;
		this.modalCodeCopy = null;
		this.modalCodeContent = null;
		this.modalCodeSwitcher = null;
		this.defaultCodeFormat = null;
		this.initModal();
	};

	Modal.prototype.initModal = function() {
		var self = this;
		//open modal when clicking on trigger buttons
		if ( this.triggers ) {
			for(var i = 0; i < this.triggers.length; i++) {
				this.triggers[i].addEventListener('click', function(event) {
					event.preventDefault();
					self.openModal(event.target);
				});
			}
		}

		$(this.element).on('openModal', function( event, trigger ){
			self.openModal(trigger);
		});

		$(this.element).on('closeModal', function( event ){
			self.closeModal();
		});

		if( $(this.element).hasClass('js-modal-code')) {
			this.modalCodeWrapper = this.element.getElementsByClassName('js-modal__code')[0];
			this.modalCodeCopy = this.element.getElementsByClassName('js-modal__copy')[0];
			this.modalCodeSwitcher = this.element.getElementsByClassName('js-modal__view-switch')[0];
			this.defaultCodeFormat = this.getDefaultFormat();
		}

		if( $(this.element).hasClass('js-modal-code') || $(this.element).attr('data-modal-trigger') == 'modalProRequired') {
			//update triggers
			$(this.element).on('addTriggers', function(event, triggersList){
				var triggerName = '';
				if($(self.element).attr('data-modal-trigger') == 'modal-code') triggerName = 'js-view-code';
				else if($(self.element).attr('data-modal-trigger') == 'modalProRequired') triggerName = 'js-pro-code';
				for(var i = 0; i < triggersList.length; i++) {
					var newTrigger = triggersList.eq(i).get(0).getElementsByClassName(triggerName);
					if(newTrigger.length > 0 ) {
						newTrigger[0].addEventListener('click', function(event) {
							event.preventDefault();
							self.selectedTrigger = event.target;
							self.showModal();
							self.initModalEvents();
						});
					}
				}
			});
		}
	};

	Modal.prototype.getDefaultFormat = function() {
		var type =  $(this.modalCodeSwitcher).find('button').eq(0).attr('data-type');
		return (type == 'css') ? 'scss' : type;
	};

	Modal.prototype.openModal = function(trigger) {
		this.selectedTrigger = trigger;
		this.showModal();
		this.initModalEvents();
	};

	Modal.prototype.showModal = function() {
		$(this.element).addClass(this.showClass);
		this.getFocusableElements();
		this.firstFocusable.focus();
		if(this.modalCodeWrapper) {
			this.resetCodeSwitcher();
			$(this.element).addClass('modal--code-is-loading');
			this.modalCodeContent = $(this.selectedTrigger).parents('.js-code-action-wrapper').eq(0);
			$(this.element).attr('data-component', this.modalCodeContent.attr('data-demo'));
		}
		this.emitModalEvents('modalIsOpen');
	};

	Modal.prototype.closeModal = function() {
		$(this.element).removeClass(this.showClass);
		this.firstFocusable = null;
		this.lastFocusable = null;
		if(this.selectedTrigger) this.selectedTrigger.focus();
		if( this.modalCodeWrapper ) {
			this.resetCodeSwitcher();
			this.modalCodeContent = null;
		}
		this.emitModalEvents('modalIsClose');
		
		//remove listeners
		this.cancelModalEvents();
	};

	Modal.prototype.resetCodeSwitcher = function() {
		$(this.modalCodeSwitcher).find('.is-selected').removeClass('is-selected');
		$(this.modalCodeSwitcher).find('button').eq(0).addClass('is-selected');
		// var classCodeDefault = (this.defaultCodeFormat == 'scss') ? 'css' : this.defaultCodeFormat;
		var classCodeDefault = this.defaultCodeFormat;
		$(this.modalCodeWrapper).text('').removeClass('scss css javascript html').addClass(classCodeDefault);
		$(this.modalCodeCopy).removeClass('btn--state-b').attr('data-copy', this.defaultCodeFormat).find('.js-modal__copy-text').text('Copy '+this.defaultCodeFormat.toUpperCase());
	};

	Modal.prototype.initModalEvents = function() {
		var self = this;
		//add event listeners
		this.element.addEventListener('keydown', this);
		this.element.addEventListener('click', this);
		//if this is a modal-code -> need to show proper content
		$(this.element).on('showCode', function(){
			//remove loading class
			$(self.element).removeClass('modal--code-is-loading');
			//highlite the code as well
			hljs.highlightBlock($(self.modalCodeWrapper).text(self.modalCodeContent.attr('data-'+self.defaultCodeFormat)).get(0));
			//reset buttons in header -> in components gallery btns may vary according to the component
			self.resetListSwitcher();
		});
		//if this is modal-code for globals -> update content
		$(this.element).on('showGlobalCode', function(event, code){
			//remove loading class
			$(self.element).removeClass('modal--code-is-loading');
			//highlite the code as well
			hljs.highlightBlock($(self.modalCodeWrapper).text(code).get(0));
			//reset buttons in header -> in components gallery btns may vary according to the component
			self.resetListSwitcher();
		});
		//listen to the click on the modal switcher
		$(this.modalCodeSwitcher).on('click', 'button', function(event){
			//highlite the code as well
			self.showNewCode($(event.currentTarget));
		});
	};

	Modal.prototype.resetListSwitcher = function() {
		($(this.modalCodeContent).attr('data-js') && $(this.modalCodeContent).attr('data-js') !== '' && $(this.modalCodeContent).attr('data-js') != 'false')
			? $(this.modalCodeSwitcher).find('[data-type="js"]').removeClass('is-hidden')
			: $(this.modalCodeSwitcher).find('[data-type="js"]').addClass('is-hidden');
	};

	Modal.prototype.cancelModalEvents = function() {
		//remove event listeners
		this.element.removeEventListener('keydown', this);
		this.element.removeEventListener('click', this);
		$(this.element).off('showCode');
		$(this.element).off('showGlobalCode');
		$(this.modalCodeSwitcher).off('click');
	};

	Modal.prototype.handleEvent = function (event) {
		switch(event.type) {
			case 'click': {
				this.initClick(event);
			}
			case 'keydown': {
				this.initKeyDown(event);
			}
		}
	};

	Modal.prototype.initKeyDown = function(event) {
		if( event.keyCode && event.keyCode == 27 || event.key && event.key == 'Escape' ) {
			//close modal window on esc
			this.closeModal();
		} else if( event.keyCode && event.keyCode == 9 || event.key && event.key == 'Tab' ) {
			//trap focus inside modal
			this.trapFocus(event);
		}
		
	};

	Modal.prototype.initClick = function(event) {
		//close modal when clicking on close button or modal bg layer 
		if( !event.target.closest('.js-modal__close') && !$(event.target).hasClass('js-modal')) return;
		event.preventDefault();
		this.closeModal();
	};

	Modal.prototype.trapFocus = function(event) {
		if( this.firstFocusable == document.activeElement && event.shiftKey) {
			//on Shift+Tab -> focus last focusable element when focus moves out of modal
			event.preventDefault();
			this.lastFocusable.focus();
		}
		if( this.lastFocusable == document.activeElement && !event.shiftKey) {
			//on Tab -> focus first focusable element when focus moves out of modal
			event.preventDefault();
			this.firstFocusable.focus();
		}
	}

	Modal.prototype.getFocusableElements = function() {
		//get all focusable elements inside the modal
		var allFocusable = this.element.querySelectorAll('[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex="-1"]), [contenteditable], audio[controls], video[controls], summary');
		this.getFirstVisible(allFocusable);
		this.getLastVisible(allFocusable);
	};

	Modal.prototype.getFirstVisible = function(elements) {
		//get first visible focusable element inside the modal
		for(var i = 0; i < elements.length; i++) {
			if( elements[i].offsetWidth || elements[i].offsetHeight || elements[i].getClientRects().length ) {
				this.firstFocusable = elements[i];
				return true;
			}
		}
	};

	Modal.prototype.getLastVisible = function(elements) {
		//get last visible focusable element inside the modal
		for(var i = elements.length - 1; i >= 0; i--) {
			if( elements[i].offsetWidth || elements[i].offsetHeight || elements[i].getClientRects().length ) {
				this.lastFocusable = elements[i];
				return true;
			}
		}
	};

	Modal.prototype.showNewCode = function(target) {
		if(target.hasClass('is-selected')) return;
		var targetType = target.data('type'),
			className = '',
			label = '',
			code = '';
		switch (targetType) {
			case 'js':
				code = this.modalCodeContent.attr('data-js');
				className = 'javascript';
				label = 'Copy JS';
				break;
			case 'css':
				code = this.modalCodeContent.attr('data-scss');
				// className = 'css';
				className = 'scss';
				label = 'Copy SCSS';
				break;
			default:
				code = this.modalCodeContent.attr('data-html');
				className = 'html';
				label = 'Copy HTML';
		}
		//update shown code
		hljs.highlightBlock($(this.modalCodeWrapper).removeClass('html scss css javascript xml').addClass(className).text(code).get(0));
		//update the selected button
		target.addClass('is-selected').siblings('button').removeClass('is-selected');
		//update the copy button text
		$(this.modalCodeCopy).removeClass('btn--state-b').attr('data-copy', targetType).find('.js-modal__copy-text').text(label);
	};

	Modal.prototype.emitModalEvents = function(eventName) {
		var event = new CustomEvent(eventName, {detail: this.selectedTrigger});
		this.element.dispatchEvent(event);
	};

	//initialize the Modal objects
	var modals = document.getElementsByClassName('js-modal');
	if( modals.length > 0 ) {
		hljs.configure({tabReplace: '  '});
		for( var i = 0; i < modals.length; i++) {
			(function(i){new Modal(modals[i]);})(i);
		}
	}
}());

/**********************
	Modal Video component
***********************/
(function() {
	var ModalVideo = function(element) {
		this.element = element;
		this.modalContent = this.element.getElementsByClassName('js-modal-video__content')[0];
		this.media = this.element.getElementsByClassName('js-modal-video__media')[0];
		this.contentIsIframe = this.media.tagName.toLowerCase() == 'iframe';
		this.modalIsOpen = false;
		this.initModalVideo();
	};

	ModalVideo.prototype.initModalVideo = function() {
		var self = this;
		// reveal modal content when iframe is ready
		this.addLoadListener();
		// listen for the modal element to be open -> set new iframe src attribute
		this.element.addEventListener('modalIsOpen', function(event){
			self.modalIsOpen = true;
			self.media.setAttribute('src', event.detail.closest('[aria-controls]').getAttribute('data-url'));
		});
		// listen for the modal element to be close -> reset iframe and hide modal content
		this.element.addEventListener('modalIsClose', function(event){
			self.modalIsOpen = false;
			Util.removeClass(self.element, 'modal-video--loaded');
			self.media.setAttribute('src', '');
		});
	};

	ModalVideo.prototype.addLoadListener = function() {
		var self = this;
		if(this.contentIsIframe) {
			this.media.onload = function () {
				self.revealContent();
			};
		} else {
			this.media.addEventListener('loadedmetadata', function(){
				self.revealContent();
			});
		}
		
	};

	ModalVideo.prototype.revealContent = function() {
		if( !this.modalIsOpen ) return;
		Util.addClass(this.element, 'modal-video--loaded');
		this.contentIsIframe ? this.media.contentWindow.focus() : this.media.focus();
	};

	//initialize the ModalVideo objects
	var modalVideos = document.getElementsByClassName('js-modal-video');
	if( modalVideos.length > 0 ) {
		for( var i = 0; i < modalVideos.length; i++) {
			(function(i){new ModalVideo(modalVideos[i]);})(i);
		}
	}
}());

/**********************
	Password Visibility component
***********************/
(function() {
	this.Password = function(element) {
		this.element = element;
		this.password = this.element.getElementsByClassName('js-password__input')[0];
		this.visibilityBtn = this.element.getElementsByClassName('js-password__btn')[0];
		this.visibilityClass = 'password--text-is-visible';
		this.initPassword();
	};

	Password.prototype.initPassword = function() {
		var self = this;
		//listen to the click on the password btn
		this.visibilityBtn.addEventListener('click', function(event) {
			//if password is in focus -> do nothing if user presses Enter
			if(document.activeElement === self.password) return;
			event.preventDefault();
			self.togglePasswordVisibility();
		});
	};

	Password.prototype.togglePasswordVisibility = function() {
		var makeVisible = !Util.hasClass(this.element, this.visibilityClass);
		//change element class
		Util.toggleClass(this.element, this.visibilityClass, makeVisible);
		//change input type
		(makeVisible) ? this.password.setAttribute('type', 'text') : this.password.setAttribute('type', 'password');
	};
	
	//initialize the Password objects
	var passwords = document.getElementsByClassName('js-password');
	if( passwords.length > 0 ) {
		for( var i = 0; i < passwords.length; i++) {
			(function(i){new Password(passwords[i]);})(i);
		}
	};
}());

/**********************
	Flash Messages
***********************/
(function() {
	this.FlashMessage = function(element) {
		this.element = element;
		this.showClass = "flash-message--is-visible";
		this.messageDuration = parseInt(this.element.getAttribute('data-duration')) || 3000;
		this.triggers = document.querySelectorAll('[data-message="'+this.element.getAttribute('data-message-trigger')+'"]');
		this.temeoutId = null;
		this.isVisible = false;
		this.initFlashMessage();
	};

	FlashMessage.prototype.initFlashMessage = function() {
		var self = this;
		//open modal when clicking on trigger buttons
		if ( self.triggers ) {
			for(var i = 0; i < self.triggers.length; i++) {
				self.triggers[i].addEventListener('click', function(event) {
					event.preventDefault();
					self.showFlashMessage();
				});
			}
		}

		$(this.element).on('showFlashMessage', function(){
			self.showFlashMessage();
		});
	};

	FlashMessage.prototype.showFlashMessage = function() {
		var self = this;
		Util.addClass(self.element, self.showClass);
		self.isVisible = true;
		//hide other flash messages
		self.hideOtherFlashMessages();
		if( self.messageDuration > 0 ) {
			//hide the message after an interveal (this.messageDuration)
			self.temeoutId = setTimeout(function(){
				self.hideFlashMessage();
			}, self.messageDuration);
		}
	};

	FlashMessage.prototype.hideFlashMessage = function() {
		Util.removeClass(this.element, this.showClass);
		this.isVisible = false;
		//reset timeout
		clearTimeout(this.temeoutId);
		this.temeoutId = null;
	};

	FlashMessage.prototype.hideOtherFlashMessages = function() {
		var event = new CustomEvent('flashMessageShown', { detail: this.element });
		window.dispatchEvent(event);
	};

	FlashMessage.prototype.checkFlashMessage = function(message) {
		if( !this.isVisible ) return; 
		if( this.element == message) return;
		this.hideFlashMessage();
	};

	//initialize the FlashMessage objects
	var flashMessages = document.getElementsByClassName('js-flash-message');
	if( flashMessages.length > 0 ) {
		var flashMessagesArray = [];
		for( var i = 0; i < flashMessages.length; i++) {
			(function(i){flashMessagesArray.push(new FlashMessage(flashMessages[i]));})(i);
		}

		//listen for a flash message to be shown -> close the others
		window.addEventListener('flashMessageShown', function(event){
			flashMessagesArray.forEach(function(element){
				element.checkFlashMessage(event.detail);
			});
		});
	}
}());

/**********************
	Quote
***********************/

(function() {
	var quoteForm = document.getElementsByClassName('js-quote__form');
	if(quoteForm.length > 0) {
		var step1 = document.getElementsByClassName('js-quote--one')[0],
			step2 = document.getElementsByClassName('js-quote--two')[0];

		// form values
		var totVal = document.getElementsByClassName('js-quote__total')[0],
			tot = document.getElementById('quoteUsersNumber'),
			billingInfo = document.getElementById('quoteBillingInfo');

		// quote fiels
		var billingField = document.getElementsByClassName('js-quote__billing-info')[0],
			totField = document.getElementsByClassName('js-quote__tot')[0],
			planField = document.getElementsByClassName('js-quote__plan')[0]; 

		var backLinks = step2.getElementsByClassName('js-quote__back-link')[0];

		function toggleQuote(bool) {
			Util.toggleClass(step1, 'is-hidden', bool);
			Util.toggleClass(step2, 'is-hidden', !bool);
		};

		function updateQuote() {
			billingField.textContent = billingInfo.value;
			var seats = getQuoteSeats();
			var plan = (seats > 1) ? 'Team ('+seats+' Users)' : 'Pro';
			planField.textContent = plan;
			totField.textContent = getTeamPrice(tot.value);
		};

		function getQuoteSeats() {
			if(isNaN(parseInt(tot.value))) return 1;
			return parseInt(tot.value);
		};

		quoteForm[0].addEventListener('submit', function(event){
			event.preventDefault();
			updateQuote();
			toggleQuote(true);
		});

		backLinks.addEventListener('click', function(event){
			event.preventDefault();
			toggleQuote(false);
		});

		tot.addEventListener('input', function(event){
			totVal.textContent = getTeamPrice(tot.value);
		});

		tot.addEventListener('change', function(event){
			totVal.textContent = getTeamPrice(tot.value);
		});
	}
}());

/**********************
	Tooltip
***********************/
// File#: _1_tooltip
(function() {
	var Tooltip = function(element) {
		this.element = element;
		this.tooltip = false;
		this.tooltipIntervalId = false;
		this.tooltipContent = this.element.getAttribute('title');
		this.tooltipPosition = (this.element.getAttribute('data-tooltip-position')) ? this.element.getAttribute('data-tooltip-position') : 'top';
		this.tooltipClasses = (this.element.getAttribute('data-tooltip-class')) ? this.element.getAttribute('data-tooltip-class') : false;
		this.tooltipId = 'js-tooltip-element'; // id of the tooltip element -> trigger will have the same aria-describedby attr
		// there are cases where you only need the aria-label -> SR do not need to read the tooltip content (e.g., footnotes)
		this.tooltipDescription = (this.element.getAttribute('data-tooltip-describedby') && this.element.getAttribute('data-tooltip-describedby') == 'false') ? false : true; 

		this.tooltipDelay = 150; // show tooltip after a delay (in ms)
		this.tooltipDelta = 10; // distance beetwen tooltip and trigger element (in px)
		this.tooltipTriggerHover = false;
		// tooltp sticky option
		this.tooltipSticky = (this.tooltipClasses && this.tooltipClasses.indexOf('tooltip--sticky') > -1);
		this.tooltipHover = false;
		if(this.tooltipSticky) {
			this.tooltipHoverInterval = false;
		}
		initTooltip(this);
	};

	function initTooltip(tooltipObj) {
		// reset trigger element
		tooltipObj.element.removeAttribute('title');
		tooltipObj.element.setAttribute('tabindex', '0');
		// add event listeners
		tooltipObj.element.addEventListener('mouseenter', handleEvent.bind(tooltipObj));
		tooltipObj.element.addEventListener('focus', handleEvent.bind(tooltipObj));
	};

	function removeTooltipEvents(tooltipObj) {
		// remove event listeners
		tooltipObj.element.removeEventListener('mouseleave',  handleEvent.bind(tooltipObj));
		tooltipObj.element.removeEventListener('blur',  handleEvent.bind(tooltipObj));
	};

	function handleEvent(event) {
		// handle events
		switch(event.type) {
			case 'mouseenter':
			case 'focus':
				showTooltip(this, event);
				break;
			case 'mouseleave':
			case 'blur':
				checkTooltip(this);
				break;
		}
	};

	function showTooltip(tooltipObj, event) {
		// tooltip has already been triggered
		if(tooltipObj.tooltipIntervalId) return;
		tooltipObj.tooltipTriggerHover = true;
		// listen to close events
		tooltipObj.element.addEventListener('mouseleave', handleEvent.bind(tooltipObj));
		tooltipObj.element.addEventListener('blur', handleEvent.bind(tooltipObj));
		// show tooltip with a delay
		tooltipObj.tooltipIntervalId = setTimeout(function(){
			createTooltip(tooltipObj);
		}, tooltipObj.tooltipDelay);
	};

	function createTooltip(tooltipObj) {
		tooltipObj.tooltip = document.getElementById(tooltipObj.tooltipId);
		
		if( !tooltipObj.tooltip ) { // tooltip element does not yet exist
			tooltipObj.tooltip = document.createElement('div');
			document.body.appendChild(tooltipObj.tooltip);
		} 
		
		// reset tooltip content/position
		Util.setAttributes(tooltipObj.tooltip, {'id': tooltipObj.tooltipId, 'class': 'tooltip tooltip--is-hidden js-tooltip', 'role': 'tooltip'});
		tooltipObj.tooltip.innerHTML = tooltipObj.tooltipContent;
		if(tooltipObj.tooltipDescription) tooltipObj.element.setAttribute('aria-describedby', tooltipObj.tooltipId);
		if(tooltipObj.tooltipClasses) Util.addClass(tooltipObj.tooltip, tooltipObj.tooltipClasses);
		if(tooltipObj.tooltipSticky) Util.addClass(tooltipObj.tooltip, 'tooltip--sticky');
		placeTooltip(tooltipObj);
		Util.removeClass(tooltipObj.tooltip, 'tooltip--is-hidden');

		// if tooltip is sticky, listen to mouse events
		if(!tooltipObj.tooltipSticky) return;
		tooltipObj.tooltip.addEventListener('mouseenter', function cb(){
			tooltipObj.tooltipHover = true;
			if(tooltipObj.tooltipHoverInterval) {
				clearInterval(tooltipObj.tooltipHoverInterval);
				tooltipObj.tooltipHoverInterval = false;
			}
			tooltipObj.tooltip.removeEventListener('mouseenter', cb);
			tooltipLeaveEvent(tooltipObj);
		});
	};

	function tooltipLeaveEvent(tooltipObj) {
		tooltipObj.tooltip.addEventListener('mouseleave', function cb(){
			tooltipObj.tooltipHover = false;
			tooltipObj.tooltip.removeEventListener('mouseleave', cb);
			hideTooltip(tooltipObj);
		});
	};

	function placeTooltip(tooltipObj) {
		// set top and left position of the tooltip according to the data-tooltip-position attr of the trigger
		var dimention = [tooltipObj.tooltip.offsetHeight, tooltipObj.tooltip.offsetWidth],
			positionTrigger = tooltipObj.element.getBoundingClientRect(),
			position = [],
			scrollY = window.scrollY || window.pageYOffset;
		
		position['top'] = [ (positionTrigger.top - dimention[0] - tooltipObj.tooltipDelta + scrollY), (positionTrigger.right/2 + positionTrigger.left/2 - dimention[1]/2)];
		position['bottom'] = [ (positionTrigger.bottom + tooltipObj.tooltipDelta + scrollY), (positionTrigger.right/2 + positionTrigger.left/2 - dimention[1]/2)];
		position['left'] = [(positionTrigger.top/2 + positionTrigger.bottom/2 - dimention[0]/2 + scrollY), positionTrigger.left - dimention[1] - tooltipObj.tooltipDelta];
		position['right'] = [(positionTrigger.top/2 + positionTrigger.bottom/2 - dimention[0]/2 + scrollY), positionTrigger.right + tooltipObj.tooltipDelta];
		
		var direction = tooltipObj.tooltipPosition;
		if( direction == 'top' && position['top'][0] < scrollY) direction = 'bottom';
		else if( direction == 'bottom' && position['bottom'][0] + tooltipObj.tooltipDelta + dimention[0] > scrollY + window.innerHeight) direction = 'top';
		else if( direction == 'left' && position['left'][1] < 0 )  direction = 'right';
		else if( direction == 'right' && position['right'][1] + dimention[1] > window.innerWidth ) direction = 'left';
		
		if(direction == 'top' || direction == 'bottom') {
			if(position[direction][1] < 0 ) position[direction][1] = 0;
			if(position[direction][1] + dimention[1] > window.innerWidth ) position[direction][1] = window.innerWidth - dimention[1];
		}
		tooltipObj.tooltip.style.top = position[direction][0]+'px';
		tooltipObj.tooltip.style.left = position[direction][1]+'px';
		Util.addClass(tooltipObj.tooltip, 'tooltip--'+direction);
	};

	function checkTooltip(tooltipObj) {
		tooltipObj.tooltipTriggerHover = false;
		if(!tooltipObj.tooltipSticky) hideTooltip(tooltipObj);
		else {
			if(tooltipObj.tooltipHover) return;
			if(tooltipObj.tooltipHoverInterval) return;
			tooltipObj.tooltipHoverInterval = setTimeout(function(){
				hideTooltip(tooltipObj); 
				tooltipObj.tooltipHoverInterval = false;
			}, 300);
		}
	};

	function hideTooltip(tooltipObj) {
		if(tooltipObj.tooltipHover || tooltipObj.tooltipTriggerHover) return;
		clearInterval(tooltipObj.tooltipIntervalId);
		if(tooltipObj.tooltipHoverInterval) {
			clearInterval(tooltipObj.tooltipHoverInterval);
			tooltipObj.tooltipHoverInterval = false;
		}
		tooltipObj.tooltipIntervalId = false;
		if(!tooltipObj.tooltip) return;
		// hide tooltip
		removeTooltip(tooltipObj);
		// remove events
		removeTooltipEvents(tooltipObj);
	};

	function removeTooltip(tooltipObj) {
		Util.addClass(tooltipObj.tooltip, 'tooltip--is-hidden');
		if(tooltipObj.tooltipDescription) tooltipObj.element.removeAttribute('aria-describedby');
	};

	window.Tooltip = Tooltip;

	//initialize the Tooltip objects
	var tooltips = document.getElementsByClassName('js-tooltip-trigger');
	if( tooltips.length > 0 ) {
		for( var i = 0; i < tooltips.length; i++) {
			(function(i){new Tooltip(tooltips[i]);})(i);
		}
	}
}());

/**********************
	Progress Bar
***********************/
// File#: _1_progress-bar
(function() {	
  var ProgressBar = function(element) {
    this.element = element;
    this.fill = this.element.getElementsByClassName('progress-bar__fill')[0];
    this.label = this.element.getElementsByClassName('progress-bar__value');
    this.value = getProgressBarValue(this);
    // before checking if data-animation is set -> check for reduced motion
    updatedProgressBarForReducedMotion(this);
    this.animate = this.element.hasAttribute('data-animation') && this.element.getAttribute('data-animation') == 'on';
    this.animationDuration = this.element.hasAttribute('data-duration') ? this.element.getAttribute('data-duration') : 1000;
    // animation will run only on browsers supporting IntersectionObserver
    this.canAnimate = ('IntersectionObserver' in window && 'IntersectionObserverEntry' in window && 'intersectionRatio' in window.IntersectionObserverEntry.prototype);
    // this element is used to announce the percentage value to SR
    this.ariaLabel = this.element.getElementsByClassName('js-progress-bar__aria-value');
    // check if we need to update the bar color
    this.changeColor =  Util.hasClass(this.element, 'progress-bar--color-update') && Util.cssSupports('color', 'var(--color-value)');
    if(this.changeColor) {
      this.colorThresholds = getProgressBarColorThresholds(this);
    }
    initProgressBar(this);
    // store id to reset animation
    this.animationId = false;
  }; 

  function getProgressBarValue(progressBar) { // get progress value
    // return (fill width/total width) * 100
    return parseInt(progressBar.fill.offsetWidth*100/progressBar.element.getElementsByClassName('progress-bar__bg')[0].offsetWidth);
  };

  function getProgressBarColorThresholds(progressBar) {
    var thresholds = [];
    var i = 1;
    while (!isNaN(parseInt(getComputedStyle(progressBar.element).getPropertyValue('--progress-bar-color-'+i)))) {
      thresholds.push(parseInt(getComputedStyle(progressBar.element).getPropertyValue('--progress-bar-color-'+i)));
      i = i + 1;
    }
    return thresholds;
  };

  function updatedProgressBarForReducedMotion(progressBar) {
    // if reduced motion is supported and set to reduced -> remove animations
    if(osHasReducedMotion) progressBar.element.removeAttribute('data-animation');
  };

  function initProgressBar(progressBar) {
    // set initial bar color
    if(progressBar.changeColor) updateProgressBarColor(progressBar, progressBar.value);
    // if data-animation is on -> reset the progress bar and animate when entering the viewport
    if(progressBar.animate && progressBar.canAnimate) animateProgressBar(progressBar);
    // reveal fill and label -> --animate and --color-update variations only
    setTimeout(function(){Util.addClass(progressBar.element, 'progress-bar--init');}, 30);

    // dynamically update value of progress bar
    progressBar.element.addEventListener('updateProgress', function(event){
      // cancel request animation frame if it was animating
      if(progressBar.animationId) window.cancelAnimationFrame(progressBar.animationId);
      
      var final = event.detail.value,
        duration = (event.detail.duration) ? event.detail.duration : progressBar.animationDuration;
      var start = getProgressBarValue(progressBar);
      // trigger update animation
      updateProgressBar(progressBar, start, final, duration, function(){
        emitProgressBarEvents(progressBar, 'progressCompleted', progressBar.value+'%');
        // update value of label for SR
        if(progressBar.ariaLabel.length > 0) progressBar.ariaLabel[0].textContent = final+'%';
      });
    });
  };

  function animateProgressBar(progressBar) {
    // reset inital values
    setProgressBarValue(progressBar, 0);
    
    // listen for the element to enter the viewport -> start animation
    var observer = new IntersectionObserver(progressBarObserve.bind(progressBar), { threshold: [0, 0.1] });
    observer.observe(progressBar.element);
  };

  function progressBarObserve(entries, observer) { // observe progressBar position -> start animation when inside viewport
    var self = this;
    if(entries[0].intersectionRatio.toFixed(1) > 0 && !this.animationTriggered) {
      updateProgressBar(this, 0, this.value, this.animationDuration, function(){
        emitProgressBarEvents(self, 'progressCompleted', self.value+'%');
      });
    }
  };

  function updateProgressBar(progressBar, start, to, duration, cb) {
    var change = to - start,
      currentTime = null;

    var animateFill = function(timestamp){  
      if (!currentTime) currentTime = timestamp;         
      var progress = timestamp - currentTime;
			var val = Math.easeInOutQuad(progress, start, to-start, duration);
      // make sure value is in correct range
      if(change > 0 && val > to) val = to;
      if(change < 0 && val < to) val = to;

      setProgressBarValue(progressBar, val);
      if(progress < duration) {
        progressBar.animationId = window.requestAnimationFrame(animateFill);
      } else {
        progressBar.animationId = false;
        cb();
      }
    };
    if ( window.requestAnimationFrame && !osHasReducedMotion ) {
      progressBar.animationId = window.requestAnimationFrame(animateFill);
    } else {
      setProgressBarValue(progressBar, to);
      cb();
    }
  };

  function setProgressBarValue(progressBar, value) {
    progressBar.fill.style.width = value+'%';
    if(progressBar.label.length > 0 ) progressBar.label[0].textContent = value+'%';
    if(progressBar.changeColor) updateProgressBarColor(progressBar, value);
  };

  function updateProgressBarColor(progressBar, value) {
    var className = 'progress-bar--fill-color-'+ progressBar.colorThresholds.length;
    for(var i = progressBar.colorThresholds.length; i > 0; i--) {
      if( !isNaN(progressBar.colorThresholds[i - 1]) && value <= progressBar.colorThresholds[i - 1]) {
        className = 'progress-bar--fill-color-' + i;
      } 
    }
    
    removeProgressBarColorClasses(progressBar);
    Util.addClass(progressBar.element, className);
  };

  function removeProgressBarColorClasses(progressBar) {
    var classes = progressBar.element.className.split(" ").filter(function(c) {
      return c.lastIndexOf('progress-bar--fill-color-', 0) !== 0;
    });
    progressBar.element.className = classes.join(" ").trim();
  };

  function emitProgressBarEvents(progressBar, eventName, detail) {
    progressBar.element.dispatchEvent(new CustomEvent(eventName, {detail: detail}));
  };

  window.ProgressBar = ProgressBar;

  //initialize the ProgressBar objects
  var progressBars = document.getElementsByClassName('js-progress-bar');
  var osHasReducedMotion = Util.osHasReducedMotion();
  if( progressBars.length > 0 ) {
		for( var i = 0; i < progressBars.length; i++) {
			(function(i){new ProgressBar(progressBars[i]);})(i);
    }
	}
}());

/**********************
	Checkbox List - All
***********************/
(function() {	
	var CheckBoxList = function(element) {
		this.element = element;
		this.all = this.element.getElementsByClassName('js-checkbox-list__all')[0];
		this.inputs = this.element.getElementsByClassName('js-checkbox-list__input');
		initCheckBoxList(this);
	};

	function initCheckBoxList(list) {
		list.element.addEventListener('change', function(event){
			if(Util.is(event.target, list.all)) toggleCheckBoxList(list); // select/deselect all
			if(!event.target.checked) list.all.checked = false;
		});
	};

	function toggleCheckBoxList(list) {
		var status = list.all.checked;
		for(var i = 0; i < list.inputs.length; i++) {
			list.inputs[i].checked = status;
		}
	};

	var checkBoxList = document.getElementsByClassName('js-checkbox-list');
	if( checkBoxList.length > 0 ) {
		for( var i = 0; i < checkBoxList.length; i++) {
			(function(i){new CheckBoxList(checkBoxList[i]);})(i);
    }
	}
}());

/**********************
	Templates events
***********************/
(function() {	
	var downloadLinks = document.getElementsByClassName('js-download-template');
	if(downloadLinks.length > 0) {
		for(var i = 0; i < downloadLinks.length; i++) {
			(function(i){downloadTemplateClick(downloadLinks[i]);})(i);
		}
	}

	function downloadTemplateClick(link) {
		link.addEventListener('click', function(){
			ga('send', 'event', 'Template', 'download', link.getAttribute('data-template-name'));
		});
	};
}());

/**********************
	Side Navigation
***********************/
// File#: _1_side-navigation
// Usage: codyhouse.co/license
(function() {
  function initSideNav(nav) {
    nav.addEventListener('click', function(event){
      var btn = event.target.closest('.js-sidenav__sublist-control');
      if(!btn) return;
      var listItem = btn.parentElement,
        bool = Util.hasClass(listItem, 'sidenav__item--expanded');
      btn.setAttribute('aria-expanded', !bool);
      Util.toggleClass(listItem, 'sidenav__item--expanded', !bool);
    });
  };

	var sideNavs = document.getElementsByClassName('js-sidenav');
	if( sideNavs.length > 0 ) {
		for( var i = 0; i < sideNavs.length; i++) {
      (function(i){initSideNav(sideNavs[i]);})(i);
		}
	}
}());

/**********************
	CodeFund ads
***********************/
(function(){
	var loadScript = document.getElementsByClassName('js-codefund-adv');
	if(loadScript.length > 0) {
		var script = document.createElement("script");
		script.type = "text/javascript";
		script.async = "async";
    script.src = "https://codefund.io/properties/237/funder.js?template=default&theme=unstyled";
    loadScript[0].appendChild(script);
	}
}());

// File#: _1_looping_tabs
// Usage: codyhouse.co/license
(function() { 
  var LoopTab = function(opts) {
    this.options = Util.extend(LoopTab.defaults , opts);
		this.element = this.options.element;
		this.tabList = this.element.getElementsByClassName('js-loop-tabs__controls')[0];
		this.listItems = this.tabList.getElementsByTagName('li');
		this.triggers = this.tabList.getElementsByTagName('a');
		this.panelsList = this.element.getElementsByClassName('js-loop-tabs__panels')[0];
    this.panels = Util.getChildrenByClassName(this.panelsList, 'js-loop-tabs__panel');
    this.assetsList = this.element.getElementsByClassName('js-loop-tabs__assets')[0];
		this.assets = this.assetsList.getElementsByTagName('li');
		this.videos = getVideoElements(this);
    this.panelShowClass = 'loop-tabs__panel--selected';
		this.assetShowClass = 'loop-tabs__asset--selected';
		this.assetExitClass = 'loop-tabs__asset--exit';
    this.controlActiveClass = 'loop-tabs__control--selected';
    // autoplay
    this.autoplayPaused = false;
		this.loopTabAutoId = false;
		this.loopFillAutoId = false;
		this.loopFill = 0;
		initLoopTab(this);
	};
	
	function getVideoElements(tab) {
		var videos = [];
		for(var i = 0; i < tab.assets.length; i++) {
			var video = tab.assets[i].getElementsByTagName('video');
			videos[i] = video.length > 0 ? video[0] : false;
		}
		return videos;
	};
  
  function initLoopTab(tab) {
    //set initial aria attributes
		tab.tabList.setAttribute('role', 'tablist');
		for( var i = 0; i < tab.triggers.length; i++) {
			var bool = Util.hasClass(tab.triggers[i], tab.controlActiveClass),
        panelId = tab.panels[i].getAttribute('id');
			tab.listItems[i].setAttribute('role', 'presentation');
			Util.setAttributes(tab.triggers[i], {'role': 'tab', 'aria-selected': bool, 'aria-controls': panelId, 'id': 'tab-'+panelId});
			Util.addClass(tab.triggers[i], 'js-loop-tabs__trigger'); 
      Util.setAttributes(tab.panels[i], {'role': 'tabpanel', 'aria-labelledby': 'tab-'+panelId});
      Util.toggleClass(tab.panels[i], tab.panelShowClass, bool);
			Util.toggleClass(tab.assets[i], tab.assetShowClass, bool);
			
			resetVideo(tab, i, bool); // play/pause video if available

			if(!bool) tab.triggers[i].setAttribute('tabindex', '-1'); 
		}
		// add autoplay-off class if needed
		!tab.options.autoplay && Util.addClass(tab.element, 'loop-tabs--autoplay-off');
		//listen for Tab events
		initLoopTabEvents(tab);
  };

  function initLoopTabEvents(tab) {
		if(tab.options.autoplay) { 
			initLoopTabAutoplay(tab); // init autoplay
			// pause autoplay if user is interacting with the tabs
			tab.element.addEventListener('focusin', function(event){
				pauseLoopTabAutoplay(tab);
				tab.autoplayPaused = true;
			});
			tab.element.addEventListener('focusout', function(event){
				tab.autoplayPaused = false;
				initLoopTabAutoplay(tab);
			});
		}

    //click on a new tab -> select content
		tab.tabList.addEventListener('click', function(event) {
			if( event.target.closest('.js-loop-tabs__trigger') ) triggerLoopTab(tab, event.target.closest('.js-loop-tabs__trigger'), event);
		});
		
    //arrow keys to navigate through tabs 
		tab.tabList.addEventListener('keydown', function(event) {
			if( !event.target.closest('.js-loop-tabs__trigger') ) return;
			if( event.keyCode && event.keyCode == 39 || event.key && event.key.toLowerCase() == 'arrowright' ) {
				pauseLoopTabAutoplay(tab);
				selectNewLoopTab(tab, 'next', true);
			} else if( event.keyCode && event.keyCode == 37 || event.key && event.key.toLowerCase() == 'arrowleft' ) {
				pauseLoopTabAutoplay(tab);
				selectNewLoopTab(tab, 'prev', true);
			}
		});
  };

  function initLoopTabAutoplay(tab) {
		if(!tab.options.autoplay || tab.autoplayPaused) return;
		tab.loopFill = 0;
		var selectedTab = tab.tabList.getElementsByClassName(tab.controlActiveClass)[0];
		// reset css variables
		for(var i = 0; i < tab.triggers.length; i++) {
			if(cssVariableSupport) tab.triggers[i].style.setProperty('--loop-tabs-filling', 0);
		}
		
		tab.loopTabAutoId = setTimeout(function(){
      selectNewLoopTab(tab, 'next', false);
		}, tab.options.autoplayInterval);
		
		if(cssVariableSupport) { // tab fill effect
			tab.loopFillAutoId = setInterval(function(){
				tab.loopFill = tab.loopFill + 0.005;
				selectedTab.style.setProperty('--loop-tabs-filling', tab.loopFill);
			}, tab.options.autoplayInterval/200);
		}
  };

  function pauseLoopTabAutoplay(tab) { // pause autoplay
    if(tab.loopTabAutoId) {
			clearTimeout(tab.loopTabAutoId);
			tab.loopTabAutoId = false;
			clearInterval(tab.loopFillAutoId);
			tab.loopFillAutoId = false;
			// make sure the filling line is scaled up
			var selectedTab = tab.tabList.getElementsByClassName(tab.controlActiveClass);
			if(selectedTab.length > 0) selectedTab[0].style.setProperty('--loop-tabs-filling', 1);
		}
  };

  function selectNewLoopTab(tab, direction, bool) {
    var selectedTab = tab.tabList.getElementsByClassName(tab.controlActiveClass)[0],
			index = Util.getIndexInArray(tab.triggers, selectedTab);
		index = (direction == 'next') ? index + 1 : index - 1;
		//make sure index is in the correct interval 
		//-> from last element go to first using the right arrow, from first element go to last using the left arrow
		if(index < 0) index = tab.listItems.length - 1;
		if(index >= tab.listItems.length) index = 0;	
		triggerLoopTab(tab, tab.triggers[index]);
		bool && tab.triggers[index].focus();
  };

  function triggerLoopTab(tab, tabTrigger, event) {
		pauseLoopTabAutoplay(tab);
		event && event.preventDefault();	
		var index = Util.getIndexInArray(tab.triggers, tabTrigger);
		//no need to do anything if tab was already selected
		if(Util.hasClass(tab.triggers[index], tab.controlActiveClass)) return;
		
		for( var i = 0; i < tab.triggers.length; i++) {
			var bool = (i == index),
				exit = Util.hasClass(tab.triggers[i], tab.controlActiveClass);
			Util.toggleClass(tab.triggers[i], tab.controlActiveClass, bool);
      Util.toggleClass(tab.panels[i], tab.panelShowClass, bool);
			Util.toggleClass(tab.assets[i], tab.assetShowClass, bool);
			Util.toggleClass(tab.assets[i], tab.assetExitClass, exit);
			tab.triggers[i].setAttribute('aria-selected', bool);
			bool ? tab.triggers[i].setAttribute('tabindex', '0') : tab.triggers[i].setAttribute('tabindex', '-1');

			resetVideo(tab, i, bool); // play/pause video if available

			// listen for the end of animation on asset element and remove exit class
			if(exit) {(function(i){
				tab.assets[i].addEventListener('transitionend', function cb(event){
					tab.assets[i].removeEventListener('transitionend', cb);
					Util.removeClass(tab.assets[i], tab.assetExitClass);
				});
			})(i);}
		}
    
    // restart tab autoplay
    initLoopTabAutoplay(tab);
	};

	function resetVideo(tab, i, bool) {
		if(tab.videos[i]) {
			if(bool) {
				tab.videos[i].play();
			} else {
				tab.videos[i].pause();
				tab.videos[i].currentTime = 0;
			} 
		}
	};

  LoopTab.defaults = {
    element : '',
    autoplay : true,
    autoplayInterval: 5000
  };

  //initialize the Tab objects
	var loopTabs = document.getElementsByClassName('js-loop-tabs');
	if( loopTabs.length > 0 ) {
		var reducedMotion = Util.osHasReducedMotion(),
			cssVariableSupport = ('CSS' in window) && Util.cssSupports('color', 'var(--var)');
		for( var i = 0; i < loopTabs.length; i++) {
			(function(i){
        var autoplay = (loopTabs[i].getAttribute('data-autoplay') && loopTabs[i].getAttribute('data-autoplay') == 'off' || reducedMotion) ? false : true,
        autoplayInterval = (loopTabs[i].getAttribute('data-autoplay-interval')) ? loopTabs[i].getAttribute('data-autoplay-interval') : 5000;
        new LoopTab({element: loopTabs[i], autoplay : autoplay, autoplayInterval : autoplayInterval});
      })(i);
		}
	}
}());

// File#: _1_sticky-banner
// Usage: codyhouse.co/license
(function() {
  var StickyBanner = function(element) {
    this.element = element;
    this.offsetIn = 0;
    this.offsetOut = 0;
    this.targetIn = this.element.getAttribute('data-target-in') ? document.querySelector(this.element.getAttribute('data-target-in')) : false;
    this.targetOut = this.element.getAttribute('data-target-out') ? document.querySelector(this.element.getAttribute('data-target-out')) : false;
    this.reset = 0;
    getBannerOffsets(this);
    initBanner(this);
  };

  function getBannerOffsets(element) { // get offset in and offset out values
    // update offsetIn
    element.offsetIn = 0;
    if(element.targetIn) {
      var boundingClientRect = element.targetIn.getBoundingClientRect();
      element.offsetIn = boundingClientRect.top + document.documentElement.scrollTop + boundingClientRect.height;
    }
    var dataOffsetIn = element.element.getAttribute('data-offset-in');
    if(dataOffsetIn) {
      element.offsetIn = element.offsetIn + parseInt(dataOffsetIn);
    }
    // update offsetOut
    element.offsetOut = 0;
    if(element.targetOut) {
      var boundingClientRect = element.targetOut.getBoundingClientRect();
      element.offsetOut = boundingClientRect.top + document.documentElement.scrollTop - window.innerHeight;
    }
    var dataOffsetOut = element.element.getAttribute('data-offset-out');
    if(dataOffsetOut) {
      element.offsetOut = element.offsetOut + parseInt(dataOffsetOut);
    }
  };

  function initBanner(element) {
    resetBannerVisibility(element);

    element.element.addEventListener('resize-banner', function(){
      getBannerOffsets(element);
      resetBannerVisibility(element);
    });

    element.element.addEventListener('scroll-banner', function(){
      if(element.reset < 10) {
        getBannerOffsets(element);
        element.reset = element.reset + 1;
      }
      resetBannerVisibility(element);
    });
  };

  function resetBannerVisibility(element) {
    var scrollTop = document.documentElement.scrollTop,
      topTarget = false,
      bottomTarget = false;
    if(element.offsetIn < scrollTop) {
      topTarget = true;
    }
    if(element.offsetOut == 0 || scrollTop < element.offsetOut) {
      bottomTarget = true;
    }
    Util.toggleClass(element.element, 'sticky-banner--visible', bottomTarget && topTarget);
  };

  //initialize the Sticky Banner objects
	var stckyBanner = document.getElementsByClassName('js-sticky-banner');
	if( stckyBanner.length > 0 ) {
		for( var i = 0; i < stckyBanner.length; i++) {
			(function(i){new StickyBanner(stckyBanner[i]);})(i);
    }
    
    // init scroll/resize
    var resizingId = false,
      scrollingId = false,
      resizeEvent = new CustomEvent('resize-banner'),
      scrollEvent = new CustomEvent('scroll-banner');
    
    window.addEventListener('resize', function(event){
      clearTimeout(resizingId);
      resizingId = setTimeout(function(){
        doneResizing(resizeEvent);
      }, 300);
    });

    window.addEventListener('scroll', function(event){
      if(scrollingId) return;
      scrollingId = true;
      window.requestAnimationFrame 
        ? window.requestAnimationFrame(function(){
          doneResizing(scrollEvent);
          scrollingId = false;
        })
        : setTimeout(function(){
          doneResizing(scrollEvent);
          scrollingId = false;
        }, 200);

      resizingId = setTimeout(function(){
        doneResizing(resizeEvent);
      }, 300);
    });

    function doneResizing(event) {
      for( var i = 0; i < stckyBanner.length; i++) {
        (function(i){stckyBanner[i].dispatchEvent(event)})(i);
      };
    };
	}
}());

(function() {
	var componentsBanner = document.getElementsByClassName('js-components-banner-adv');
	function setComponentsNumber(banner) {
		if(!COMP_NUM) return;
		var text = banner.innerHTML;
		text = text.replace('COMP_NUM', COMP_NUM);
		banner.innerHTML = text;
	};
	if(componentsBanner.length > 0) {
		setComponentsNumber(componentsBanner[0]);
	}
}());
(function() {
  /* Signup form */
  this.SignUp = function(element) {
    this.element = element;
    this.form = this.element.find('.js-signup-form'); 
    this.submitBtn = this.element.find('.js-signup-form__submit');
    this.submitBtnFree = this.element.find('.js-signup-form__submit--free');
    this.submitBtnPro = this.element.find('.js-signup-form__submit--pro');
    this.planSelection = this.element.find('.js-signup-form__plan-selection');
    this.planSelected = this.planSelection.find('.js-account-select__item[aria-checked="true"]').attr('data-plan'); // selected button plan
    this.proSections = this.element.find('.js-signup-form__pro-details');
    this.freeSections = this.element.find('.js-signup-form_newsletter');
    this.teamSeats = this.planSelection.find('.js-signup-form__team-seats');
    this.teamPrice = this.element.find('.js-signup-form__account-price');
    this.teamPriceDiscounted = this.element.find('.js-signup-form__account-price-discounted');
    this.priceDetails = [this.element.find('.js-signup-form__price--basic'), this.element.find('.js-signup-form__price--vat'), this.element.find('.js-signup-form__price--total')];

    this.labelSeats = this.element.find('.js-signup-form__label-seats'); // add s if multiple seats is selected
    
    this.requiredFields = this.element.find('.js-signup-form__required');

    // vat section
    this.vatSections = this.element.find('.js-signup-form__vat-details');
    this.vat = 0;
    this.vatId = '';
    this.addVat = false;
    this.vatPercField = this.element.find('.js-signup-form__vat-precentage');
    this.vatValidationButton = this.element.find('.js-signup-form__vat-validate');
    this.vatValidationSuccess = false;

    // italy only section
    this.italySection = this.element.find('.js-it-fields');

    //store for error handling
    this.userEmail = this.element.find('#accountEmail');
    this.userPassword = this.element.find('#inputPassword');
    this.userCountry = this.element.find('#accountCountry');
    this.userBilling = this.element.find('#accountBillingInfo');
    this.userVat = this.element.find('#vatNumber');
    this.stripeToken = this.element.find('#stripeToken');
    this.stripeCountry = this.element.find('#stripeCountry');
    // this.userCardNumber = this.element.find('#cardNumber');
    // this.userYearExp = this.element.find('#selectYear');
    // this.userMonthExp = this.element.find('#selectMonth');
    // this.userCCV = this.element.find('#securityCode');
    this.userNewsletter = this.element.find('#newsletterCheck');
    this.frontToken = this.element.find('#frontToken'); 

    // italy fields
    this.codiceFiscale = this.element.find('#codiceFiscale'); 
    this.codiceDestinatario = this.element.find('#codiceDestinatario'); 
    this.fullName = this.element.find('#fullName');
    this.companyName = this.element.find('#companyName');
    this.address = this.element.find('#address');
    this.zipCode = this.element.find('#zipCode');

    // error messages for payment issue or account issue
    this.paymentErrorMessage = this.element.find('.js-alert--payment-error');
    this.accountErrorMessage = this.element.find('.js-alert--account-error');
    this.cardErrorMessage = this.element.find('.js-alert--card-error');

    // stripe card element
    this.stripeElement = this.element.find('.js-stripe-element');

    this.alertMessage = this.element.find('.js-form-alert');

    this.initSignUp();
    this.initSignEvents();
    if(this.form.hasClass('js-signup-form--become-pro')) {
      // user is already logged in - become Pro
      this.planSelection.find('.js-account-select__item[data-plan="pro"]').trigger('click');
    }
  };

  SignUp.prototype.initSignUp = function() {
    //show form if plan is already selected
    this.resetFormFields();
    this.resetPrice();
    this.resetTeamPrice(false);
  };

  SignUp.prototype.initSignEvents = function() {
    var self = this;

    // plan selection
    this.planSelection.on('click', function(event){
      event.preventDefault();
      var plan = $(event.target).closest('.js-account-select__item');
      if(plan.length == 0) return;
      self.planSelected = plan.attr('data-plan');
      self.resetUi(plan);
      self.resetPrice();
      self.resetFormFields();
    });

    // change team seats
    this.teamSeats.on('change', function(event){
      // check the value is correct
      var value = self.teamSeats.val();
      if(isNaN(value) || value < 1) self.teamSeats.val(1);
      self.resetPrice();
      self.labelSeats.toggleClass('is-hidden', value < 2);
    });

    // check email
    this.userEmail.on('change', function(event){
      var email = self.userEmail.val();
      //check proper email format
      if(!checkEmailFormat(email)){
        inputError(self.userEmail, 3, true);
        return false;
      };
      //check email is not in use
      checkEmailAvailability(email, function(result){
        inputError(self.userEmail, 1, !result);
      });
    });

    // check password
    this.userPassword.on('change', function(event){
      inputError(self.userPassword, 1, !checkPasswordFormat(self.userPassword.val()));
    });

    //check discount field
    

    //remove error class when focusing input
    this.requiredFields.on('focus', function(event){
      inputResetError($(this));
    });

    this.form.on('submit', function(event){
      event.preventDefault();
      self.submitForm();
    });

    // stripe has created a card
    this.form.on('submitForm', function(event){
      self.paymentProcess('complete');
    });

    // card additional verifications were succesfull
    this.form.on('actionRequiredSuccess', function(event){
      self.paymentProcess('completed');
    });

    this.form.on('showCardError', function(event){
      toggleAlert(self.paymentErrorMessage, true); 
      self.submitBtn.removeClass('btn--state-b');
      // need to show message that card has issues
      toggleAlert(self.cardErrorMessage, true);
    });

    // country selection -> update vat
    this.userCountry.on('change', function(event){
      self.resetVat();
      self.resetCountryField();
    });

    // validate Vat Number
    this.vatValidationButton.on('click', function(event){
      if(self.vatValidationSuccess) return;
      self.validateVatNumber()
    });

    // vat number updated -> add vat if it was removed
    this.userVat.on('input', function(event){
      if(self.vatValidationSuccess) {
        self.resetVat();
      }
    });
  };

  SignUp.prototype.resetUi = function(plan) {
    // plan.attr({'aria-checked': 'true', 'tabindex': '0', 'data-theme': 'dark'});
    // plan.siblings().attr({'aria-checked': 'false', 'tabindex': '-1', 'data-theme': 'default'});
    plan.attr({'aria-checked': 'true', 'tabindex': '0'});
    plan.siblings().attr({'aria-checked': 'false', 'tabindex': '-1'});
  };

  SignUp.prototype.resetFormFields = function() {
    var free = (this.planSelected == 'free');
    this.proSections.toggleClass('signup-form__item--is-hidden', free);
    this.submitBtnPro.toggleClass('is-hidden', free);
    this.freeSections.toggleClass('signup-form__item--is-hidden', !free);
    this.submitBtnFree.toggleClass('is-hidden', !free);
  };

  SignUp.prototype.resetPrice = function() {
    var plan = this.planSelected,
      basicPrice = 0;
    if( plan == 'free' ) {
      basicPrice = 0;
    } else if( plan == 'pro' )  {
      basicPrice = getTeamPrice(this.teamSeats.val());
      this.resetTeamPrice(basicPrice);
    }
    var vat = this.getVat(),
      vatPrice = parseFloat((Math.round(basicPrice*vat)/100).toFixed(2));
    // var discountPercentage = 0.75;
    var discountPercentage = 1;
    this.priceDetails[0].text((basicPrice*discountPercentage).toFixed(2));
    this.priceDetails[1].text((vatPrice*discountPercentage).toFixed(2));
    this.priceDetails[2].text(((basicPrice + vatPrice)*discountPercentage).toFixed(2));
  };

  SignUp.prototype.resetTeamPrice = function(tot) {
    var price = tot ? tot : getTeamPrice(this.teamSeats.val());
    this.teamPrice.text(price);
    // var discountPercentage = 0.75;
    var discountPercentage = 1;
    if(this.teamPriceDiscounted.length > 0) this.teamPriceDiscounted.text((price*discountPercentage).toFixed(2));
  };

  SignUp.prototype.checkVatCountry = function() {
    if(VAT_RATES[this.userCountry.val()]) {
      this.setVat();
      this.toggleValidateBtn();
    } else {
      this.removeVat();
    }
  };

  SignUp.prototype.setVat = function() {
    this.vat = parseInt(VAT_RATES[this.userCountry.val()]['percentage']);
    this.vatId = VAT_RATES[this.userCountry.val()]['id'];
    this.addVat = true;
    this.resetVatAppearance();
  };

  SignUp.prototype.removeVat = function() {
    this.vat = 0;
    this.vatId = '';
    this.addVat = false;
    this.resetVatAppearance();
  };

  SignUp.prototype.validateVatNumber = function() {
    var self = this;
    this.resetValidateVatBtn(false);
    this.vatValidationButton.addClass('btn--state-b');
    inputError(this.userVat, 1, false);
    ajax('validateVat', 'vat='+self.userVat.val(), function(data){
      // verify if valid
      if(data.response) {
        self.vatValidationButton.removeClass('btn--state-b');
        self.resetValidateVatBtn(true);
        // deduce vat
        self.deduceVat();
        self.vatValidationSuccess = true;
      } else {
        self.vatValidationButton.removeClass('btn--state-b');
        inputError(self.userVat, 1, true);
      }
    }, function(data){
      self.vatValidationButton.removeClass('btn--state-b');
      inputError(self.userVat, 1, true);
    });
  };

  SignUp.prototype.deduceVat = function() {
    this.vat = 0;
    this.vatId = '';
    this.addVat = true;
    this.resetVatAppearance();
  };

  SignUp.prototype.resetVat = function() {
    this.vatValidationSuccess = false;
    this.resetValidateVatBtn(false);
    this.checkVatCountry();
  };

  SignUp.prototype.resetValidateVatBtn = function(bool) {
    this.vatValidationButton.toggleClass('btn--state-c color-white bg-success', bool);
  };

  SignUp.prototype.resetVatAppearance = function() {
    this.vatSections.toggleClass('is-hidden', !this.addVat);
    this.vatPercField.text(this.vat);
    this.resetPrice();
  };

  SignUp.prototype.toggleValidateBtn = function() {
    this.vatValidationButton.toggleClass('is-hidden', COMPANY_CN == this.userCountry.val());
  };

  SignUp.prototype.getVat = function() {
    //return proper VAT percentage -> number [0, 100]
    return this.vat;
  };

  SignUp.prototype.resetCountryField = function() {
    this.italySection.toggleClass('is-hidden', this.userCountry.val().toLowerCase() != 'it');
  };

  SignUp.prototype.submitForm = function() {
    var self = this;
    toggleAlert(this.paymentErrorMessage, false);
    toggleAlert(this.accountErrorMessage, false);
    toggleAlert(this.cardErrorMessage, false);
    this.submitBtn.addClass('btn--state-b');
    this.alertMessage.removeClass('alert--is-visible');
    var plan = (self.planSelected) ? self.planSelected : 'free';
    if(plan == 'free') {
      self.paymentProcess(false);
    } else {
      self.stripeElement.trigger('createCardToken');
    }
  };

  SignUp.prototype.paymentProcess = function(bool) {
    var self = this;
    var plan = (self.planSelected) ? self.planSelected : 'free';

    // var discountCode = 'black-friday-19';
    var discountCode = false;

    ajax('signup', {
      user_email        : self.userEmail.val(),
      user_password     : self.userPassword.val(),
      user_country      : self.userCountry.val(),
      user_billing      : self.userBilling.val(),
      user_vat          : self.userVat.val(),
      stripe_token      : self.stripeToken.val(),
      stripe_country    : self.stripeCountry.val(),
      team_seats        : self.teamSeats.val(),
      plan              : plan,
      discount          : discountCode,
      frontToken        : self.frontToken.val(),
      vat_id            : self.vatId,
      codice_fiscale    : self.codiceFiscale.val(),
      codice_destinatario    : self.codiceDestinatario.val(),
      full_name         : self.fullName.val(),
      company_name      : self.companyName.val(),
      address           : self.address.val(),
      zip_code          : self.zipCode.val(),
      // account_type      : self.planSelected,
      // team_id           : $team_id.val(),
      // signup_type       : $signup_type.val(),
      // token             : $signup_token.val(),
      // user_fullname_invitation : $user_full_name_invitation.val(),
      // product_name      : $product_name.val(),
      // product_url       : $product_url.val(),
      status_process     : bool,
      newsletter         : self.userNewsletter.is(":checked")

    }, function(data){
      location.href = data.response;
    }, function(data){
      if(data.status == 1){ //issue with one of the fields
        var errors = data.response;
        //email
        var email1 = errors.indexOf('user_email_1') != -1,
          email2 = errors.indexOf('user_email_2') != -1,
          email3 = errors.indexOf('user_email_3') != -1;
        if(email1 || email2 || email3) {
          var index;
          if(email1) index = 1;
          else if(email2) index = 2;
          else if(email3) index = 3;

          inputError(self.userEmail, index, true);
        } else {
          inputError(self.userEmail, 1, false);
        }
        
        var pass1 = errors.indexOf('user_password_1') != -1,
          pass2 = errors.indexOf('user_password_2') != -1;
        if(pass1 || pass2) {
          if(pass1) index = 1;
          else if(pass2) index = 2;
          inputError(self.userPassword, index, true);
        } else {
          inputError(self.userPassword, 1, false);
        }
      
        inputError(self.userCountry, 1, errors.indexOf('user_country') != -1);
        inputError(self.codiceFiscale, 1, errors.indexOf('codice_fiscale') != -1);
        inputError(self.fullName, 1, errors.indexOf('full_name') != -1);
        inputError(self.zipCode, 1, errors.indexOf('zip_code') != -1);
        inputError(self.address, 1, errors.indexOf('address') != -1);
        self.alertMessage.addClass('alert--is-visible');
        scrollUp();
        self.submitBtn.removeClass('btn--state-b');
      } else if(data.status == 3) { // require additional steps to verify the card
        self.stripeElement.trigger('requireAction', [data.response]);
      } else {
        if(self.planSelected == 'free') toggleAlert(self.accountErrorMessage, true);
        else toggleAlert(self.paymentErrorMessage, true); 
        self.submitBtn.removeClass('btn--state-b');
      }
    });
  };

  var signUpForm = $('.js-signup-form-wrapper');
  if(signUpForm.length > 0) {
    new SignUp(signUpForm.eq(0));
  };

  /* Change card */

  /* autodetect user country */
  var countrySelection = $('.js-signup-form__country');
  if(countrySelection.length > 0) {
    var interacted = false;
    countrySelection.on('change', function(event){
      interacted = true;
    });

    // detect location and select country (if user didn't already change it)
    browserLocation(function(country){
      if(!interacted && countrySelection.find('option[value="'+country+'"]')) {
        countrySelection.val(country);
        countrySelection.trigger('change');
      }
    });

    function browserLocation(cb) {
      ajax('detectLocation', '', 
      function(data){
        if(data.response) {
          cb(data.response.toUpperCase());
        }
      }, function(data){});
    }
  }

  /* Stripe Element */
  var stripeForm = document.getElementsByClassName('js-stripe-element');
  if(stripeForm.length > 0) {
    var style = {
      base: {
        color: '#1c1c21',
        fontSize: '20px',
        fontWeight: '400',
        fontFamily: '-apple-system, BlinkMacSystemFont, Roboto, sans-serif',
        '::placeholder': {
          color: '#98989a',
        },
      },
      invalid: {
        color: '#fc454b',
      },
    };
    var stripe = Stripe(STRIPE_PB);
    var cardWrapper = document.getElementById('card-element');
    if(cardWrapper) {
      var elements = stripe.elements();
      var card = elements.create('card', {hidePostalCode: true, style: style});
      card.mount('#card-element');
    }
    
    $(stripeForm[0]).on('createCardToken', function(event){
      stripe.createToken(card).then(function(result) {
        if (result.error) {
          // trigger form error
          $(stripeForm[0].closest('form')).trigger('showCardError');
        } else {
          // Send the token to your server.
          stripeTokenHandler(result.token);
        }
      });
    });

    $(stripeForm[0]).on('requireAction', function(event, pi){
      stripe.handleCardPayment(pi).then(function(result) {
        if (result.error) {
          $(stripeForm[0].closest('form')).trigger('showCardError');
        } else {
          $(document.getElementById('stripeToken').closest('form')).trigger('actionRequiredSuccess');
        }
      });
    });

    $(stripeForm[0]).on('updateCard', function(event, secrete){ // update card function
      stripe.handleCardSetup(secrete, card).then(function(result) {
        if (result.error) {
          $(stripeForm[0].closest('.js-update-card-form')).trigger('showError');
        } else {
          $(stripeForm[0].closest('.js-update-card-form')).trigger('showSuccess', [result.setupIntent.payment_method]);
        }
      });
    });

    function stripeTokenHandler(token) {
      var tokenEl = document.getElementById('stripeToken');
      tokenEl.value = token.id;
      document.getElementById('stripeCountry').value = token.card.country;
      $(tokenEl.closest('form')).trigger('submitForm');
    };
  }

  /* Account - update details */
  this.AccountUpdate = function(element) {
    this.element = element;
    this.alerts = this.element.siblings('.js-account-form-alert');
    this.alertSuccess = this.alerts.find('.js-alert--success');
    this.alertError = this.alerts.find('.js-alert--error');

    this.userName = this.element.find('#accountName');
    this.userEmail = this.element.find('#accountEmail');
    this.userOldPassword = this.element.find('#oldPassword');
    this.userNewPassword = this.element.find('#newPassword');

    this.submitButton = this.element.find('.js-account-form__submit');

    this.accountForm = this.userName.length > 0;
    this.initEvents();
  };

  AccountUpdate.prototype.initEvents = function() {
    var self = this;
    this.element.on('submit', function(event){
      event.preventDefault();
      //toggle alerts + show loader
      toggleAlert(self.alertSuccess, false);
      toggleAlert(self.alertError, false);
      self.submitButton.addClass('btn--state-b');
      
      if(self.accountForm) {
        self.updateDetails();
      } else {
        self.updatePassword();
      }
    });
    
    //remove error meessage on focus
    this.element.on('focus', 'input', function(event){
      inputResetError($(event.target));
    });
    
    //show alert if user tries to leave the page without saving
    this.element.on('change', 'input', function(event){
      SaveAlert.yes();
    });
  };

  AccountUpdate.prototype.updateDetails = function() {
    var self = this;

    ajax('saveAccount', self.element.serialize(), function(data){
      formShowSuccess(self);
    }, function(data){
      var email1 = data.response.indexOf('email_1') != -1,
        email2 = data.response.indexOf('email_2') != -1,
        email3 = data.response.indexOf('email_3') != -1;
      if(email1 || email2 || email3) {
        var index;
        if(email1) index = 1;
        else if(email2) index = 2;
        else if(email3) index = 3;
        inputError(self.userEmail, index, true);
      } else {
        inputError(self.userEmail, 1, false);
      }

      inputError(self.userName, 1, data.response.indexOf('name_1') != -1);
      formShowError(self);
    });
  };

  AccountUpdate.prototype.updatePassword = function() {
    var self = this;

    ajax('savePassword', self.element.serialize(), function(data){
      formShowSuccess(self);
      
    }, function(data){
      var oldPass1 = data.response.indexOf('old_pass_1') != -1,
        oldPass2 = data.response.indexOf('old_pass_2') != -1;
      if(oldPass1 || oldPass2) {
        var index;
        if(oldPass1) index = 1;
        else if(oldPass2) index = 2;
        inputError(self.userOldPassword, index, true);
      } else {
        inputError(self.userOldPassword, 1, false);
      }

      var pass1 = data.response.indexOf('new_pass_1') != -1,
        pass2 = data.response.indexOf('new_pass_2') != -1;
      if(pass1 || pass2) {
        var index;
        if(pass1) index = 1;
        else if(pass2) index = 2;
        inputError(self.userNewPassword, index, true);
      } else {
        inputError(self.userNewPassword, 1, false);
      }
      formShowError(self);
    });
  };

  var accountUpdateForm = $('.js-account-form');
  if(accountUpdateForm.length > 0) {
    new AccountUpdate(accountUpdateForm.eq(0));
  };

  /* Billing - update billing email */
  var BillingEmailForm = function(element) {
    this.element = element;
    this.alerts = $('.js-account-form-alert');
    this.alertSuccess = this.alerts.find('.js-alert--success');
    this.alertError = this.alerts.find('.js-alert--error');
    this.submitButton = this.element.find('.js-billing-form__submit');
    this.userEmail = this.element.find('#billingEmail');
    this.billingInfo = this.element.find('#billingInfo');
    this.fullName = this.element.find('#accountFullName');
    this.companyName = this.element.find('#accountCompanyName');
    this.zipCode = this.element.find('#accountZip');
    this.address = this.element.find('#accountAddress');
    initBillingEmailForm(this);
  };

  function initBillingEmailForm(form) {
    form.element.on('submit', function(){
      event.preventDefault();
      //toggle alerts + show loader
      toggleAlert(form.alertSuccess, false);
      toggleAlert(form.alertError, false);
      form.submitButton.addClass('btn--state-b');
      (form.userEmail.length > 0) ? submitBillingEmail(form) : submitBillinfInfo(form);
    });
    //show alert if user tries to leave the page without saving
    if(form.userEmail.length > 0) {
      form.userEmail.on('change', function(event){
        SaveAlert.yes();
      });
    }
    if(form.billingInfo.length > 0) {
      form.billingInfo.on('change', function(event){
        SaveAlert.yes();
      });
    }
  };

  function submitBillingEmail(form) {
    // reset inputError
    inputError(form.userEmail, 1, false);
      
    ajax('saveBillingEmail', form.element.serialize(), function(data){
      formShowSuccess(form);
    }, function(data){
      var email1 = data.response.indexOf('email_1') != -1,
        email2 = data.response.indexOf('email_2') != -1;
      if(email1 || email2 ) {
        var index;
        if(email1) index = 1;
        else if(email2) index = 2;
        inputError(form.userEmail, index, true);
      } else {
        inputError(form.userEmail, 1, false);
      }
      formShowError(form);
    });
  };

  function submitBillinfInfo(form) {
    ajax('saveBillingInfo', form.element.serialize(), function(data){
      formShowSuccess(form);
    }, function(data){
      inputError(form.fullName, 1, errors.indexOf('full_name') != -1);
      inputError(form.zipCode, 1, errors.indexOf('zipCode') != -1);
      inputError(form.address, 1, errors.indexOf('address') != -1);
      formShowError(form);
    });
  };

  var billingEmailForm = $('.js-billing-email-form');
  if(billingEmailForm.length > 0) {
    new BillingEmailForm(billingEmailForm.eq(0));
  };

  function formShowSuccess(form) {
    scrollUp();
    toggleAlert(form.alertSuccess, true);
    SaveAlert.no();
    form.submitButton.removeClass('btn--state-b');
  };

  function formShowError(form) {
    scrollUp();
    toggleAlert(form.alertError, true);
    form.submitButton.removeClass('btn--state-b');
  };

  /* Login */
  this.Login = function(element) {
    this.element = element;
    this.errorMessage = this.element.siblings('.js-alert--error');
    this.userEmail = this.element.find('#loginEmail');
    this.userPassword = this.element.find('#loginPassword');
    this.submitButton = this.element.find('.js-login-form__submit');
    this.isModal = this.element.parents('.js-modal').length > 0;
    this.redirectInput = this.element.find('.js-login-redirect');
    this.callbackType = false;
    this.loginInit();
  };

  Login.prototype.loginInit = function() {
    var self = this;
    this.element.on('submit', function(event){
      event.preventDefault();
      //toggle alerts + show loader
      toggleAlert(self.errorMessage, false);
      self.submitButton.addClass('btn--state-b');
      
      self.login();
    });

    //remove error meessage on focus
    this.element.on('focus', 'input', function(event){
      inputResetError($(event.target));
    });

    //login modal is open
    this.element.on('loginModal', function(event, target){
      self.callbackType = target;
    });
  };

  Login.prototype.login = function() {
    var self = this;
    ajax('login', self.element.serialize(), function(data){
      if(!self.callbackType) {
        if(self.redirectInput && self.redirectInput.val() != '') {
          location.href = self.redirectInput.val();
        } else {
          location.href = 'ds/components';
        }
      } else if( $(self.callbackType).is('.js-bookmark__btn') ) {
        location.reload();
      } else if( $(self.callbackType).is('.js-globals-save-code') ) {
        //globals - not reloading page
        // IS_LOGGED = '1';
        // IS_FREE = data.response.free ? '1' : '0';
        // // need to load project first
        // loadProjectAfterLogin(data.response.id, function(){
        //   self.submitButton.removeClass('btn--state-b');
        //   $(self.callbackType).trigger('logInSuccess');
        //   self.callbackType = false;
        // });
        //for now - reload even if global
        location.reload();
      }
    }, function(data){
      if(data.status == 1) {//empty fields
        if(data.response.indexOf('email') != -1) inputError(self.userEmail, 1, true);
        if(data.response.indexOf('password') != -1) inputError(self.userPassword, 1, true);
      }

      if(data.status == 2 || data.status == 3) {//wrong format
        scrollUp();
        toggleAlert(self.errorMessage, true);
      }

      if(data.status == 4) {//need to wait to log in
        location.href = 'log-in?logged-out=true';
      }
      self.submitButton.removeClass('btn--state-b');
    });
    return false;
  };

  var loginForm = $('.js-login-form');
  if(loginForm.length > 0) {
    new Login(loginForm.eq(0));
  };

  /* Reset Password */
  this.ResetPassword = function(element) {
    this.element = element;
    this.alerts = this.element.siblings('.js-reset-password-form-alert');
    this.successMessage = this.alerts.find('.js-alert--success');
    this.errorMessage = this.alerts.find('.js-alert--error');
    this.userEmail = this.element.find('#loginEmail');
    this.submitButton = this.element.find('.js-reset-password-form__submit');
    this.resetInit();
  };

  ResetPassword.prototype.resetInit = function() {
    var self = this;
    this.element.on('submit', function(event){
      event.preventDefault();
      //toggle alerts + show loader
      toggleAlert(self.errorMessage, false);
      toggleAlert(self.successMessage, false);
      inputError(self.userEmail, 1, false);
      self.submitButton.addClass('btn--state-b');
      
      self.reset();
    });
  };

  ResetPassword.prototype.reset = function() {
    var self = this;
    ajax('resetPassword', self.element.serialize(), function(data){
      scrollUp();
      toggleAlert(self.successMessage, true);
      self.submitButton.removeClass('btn--state-b');
    }, function(data){
      if(data.status == 1) {//empty field
        inputError(self.userEmail, 1, true);
      }

      if(data.status == 2 ) {//wrong format
        inputError(self.userEmail, 2, true);
      }

      if(data.status == 3 ) {//wrong format
        scrollUp();
        toggleAlert(self.errorMessage, true);
      }
      self.submitButton.removeClass('btn--state-b');
    });
    return false;
  };

  var resetForm = $('.js-reset-password-form');
  if(resetForm.length > 0) {
    new ResetPassword(resetForm.eq(0));
  };

  /* Reset Password Confirmation */
  this.ResetPasswordConfirm = function(element) {
    this.element = element;
    this.errorMessage = this.element.siblings('.js-alert--error');
    this.newPassword = this.element.find('#newPassword');
    this.submitButton = this.element.find('.js-reset-pass-confirm-form__submit');
    this.resetConfirmInit();
  };

  ResetPasswordConfirm.prototype.resetConfirmInit = function() {
    var self = this;
    this.element.on('submit', function(event){
      event.preventDefault();
      //toggle alerts + show loader
      toggleAlert(self.errorMessage, false);
      inputError(self.newPassword, 1, false);
      self.submitButton.addClass('btn--state-b');
      
      self.savePassword();
    });
  };

  ResetPasswordConfirm.prototype.savePassword = function() {
    var self = this;
    ajax('resetPasswordConfirm', self.element.serialize(), function(data){
      location.href = 'account/account-settings?reset_password_success';
    }, function(data){
      if(data.status == 1) {//empty field
        inputError(self.newPassword, 1, true);
      }

      if(data.status == 2 ) {//wrong format
        inputError(self.newPassword, 2, true);
      }

      if(data.status == 3 ) {//wrong format
        scrollUp();
        toggleAlert(self.errorMessage, true);
      }
      self.submitButton.removeClass('btn--state-b');
    });
    return false;
  };

  var resetConfirmForm = $('.js-reset-pass-confirm-form');
  if(resetConfirmForm.length > 0) {
    new ResetPasswordConfirm(resetConfirmForm.eq(0));
  };

  /* Edit Team */
  var TeamUpdate = function(element) {
    this.element = element;
    this.alerts = this.element.siblings('.js-account-form-alert');
    this.alertSuccess = this.alerts.find('.js-alert--success');
    this.alertError = this.alerts.find('.js-alert--error');

    this.teamName = this.element.find('#teamName');
    this.submitButton = this.element.find('.js-team-form__submit');
    initTeamUpdateEvents(this);
  };

  function initTeamUpdateEvents(form) {
    // update team info
    form.element.on('submit', function(event){
      event.preventDefault();
      //toggle alerts + show loader
      toggleAlert(form.alertSuccess, false);
      toggleAlert(form.alertError, false);
      form.submitButton.addClass('btn--state-b');
      updateTeamSubmit(form);
    });
    //show alert if user tries to leave the page without saving
    form.teamName.on('change', function(event){
      SaveAlert.yes();
    });
  };

  function updateTeamSubmit(form) {
    ajax('saveTeamInfo', form.element.serialize(), function(data){
      formShowSuccess(form);
    }, function(data){
      inputError(form.teamName, 1, data.response.indexOf('name_1') != -1);
      formShowError(form);
    });
  };

  var editTeamForm = document.getElementsByClassName('js-account-teams-form');
  if( editTeamForm.length > 0 ) {
    new TeamUpdate($(editTeamForm[0]));
    var searchMembers = document.getElementById('searchUser'),
      membersList = $(editTeamForm[0]).find('.js-team-members__member');
    
    // search members
    searchMembers.addEventListener('keyup', function(event){
      updateMembersSearch();
    });

    searchMembers.addEventListener('search', function(event){
      updateMembersSearch();
    });

    function updateMembersSearch() {
      var query = searchMembers.value.toLowerCase();
      if(query != ''){
        membersList.addClass('is-hidden');
        membersList.filter(function() {
          return $(this).attr('data-name').toLowerCase().indexOf(query) != -1 || $(this).attr('data-email').toLowerCase().indexOf(query) != -1
        }).removeClass('is-hidden');
      } else {
        membersList.removeClass('is-hidden');
      }
    };

    // delete members from list
    $(editTeamForm).on('click', '.js-delete-user', function(event){
      event.preventDefault();
      event.currentTarget.closest('.js-team-members__member').remove();
      SaveAlert.yes();
    });
  }
  
  /* Downgrade Team */
  var DowngradeTeamForm = function(element) {
    this.element = element;
    this.alerts = this.element.siblings('.js-downgrade-form-alert');
    this.alertSuccess = this.alerts.find('.js-alert--success');
    this.alertError = this.alerts.find('.js-alert--error');

    this.alertNeedUpgrade = this.element.find('.js-alert--upgrade-error');
    this.alertNeedRemove = this.element.find('.js-alert--account-error');

    this.teamSeats = this.element.find('#teamSeats');

    this.teamMinSeats = parseInt(this.teamSeats.attr('min'));
    this.teamMaxSeats = parseInt(this.teamSeats.attr('max'));

    this.recapPlan = this.element.find('.js-recap__seats');
    this.recapPrice = this.element.find('.js-recap__price');

    this.submitButton = this.element.find('.js-downgrade-form__submit');
    initDowngradeTeamEvents(this);
  };

  function initDowngradeTeamEvents(form) {
    form.teamSeats.on('input', function(event){ // new seat number selected
      var seats = form.teamSeats.val();
      if(seats == ''  || isNaN(seats)) {
        seats = form.teamMaxSeats;
        form.teamSeats.val(seats);
      }
      seats = parseInt(seats);
      var needRemove = seats < form.teamMinSeats;
      var needUpgrade = seats > form.teamMaxSeats;
      form.alertNeedUpgrade.toggleClass('alert--is-visible', needUpgrade);
      form.alertNeedRemove.toggleClass('alert--is-visible', needRemove);
      form.alertNeedRemove.find('.js-remove-members').text(form.teamMinSeats - seats).end().find('.js-final-members').text(seats);
      if(!needRemove && !needUpgrade) previewDowgradeCost(form);
      SaveAlert.yes();
    });

    form.element.on('submit', function(event) {
      event.preventDefault();
      toggleAlert(form.alertSuccess, false);
      toggleAlert(form.alertError, false);
      form.submitButton.addClass('btn--state-b');
      var seats = form.teamSeats.val();
      if(seats <= form.teamMaxSeats && seats >= form.teamMinSeats) {
        submitDowngradeForm(form);
      } else {
        form.submitButton.removeClass('btn--state-b');
        scrollUp(form.teamSeats.offset().top);
        SaveAlert.no();
      }
    });
  };

  function previewDowgradeCost(form) {
    var seats = form.teamSeats.val();
    form.recapPlan.text(seats);
    form.recapPrice.text(getTeamPrice(seats));
  };

  function submitDowngradeForm(form) {
    ajax('downgradeTeam', form.element.serialize(), function(data){
      formShowSuccess(form);
      SaveAlert.no();
    }, function(data){
      scrollUp();
      formShowError(form);
      SaveAlert.no();
    });
  };

  var downgradeTeamForm = document.getElementsByClassName('js-downgrade-form');
  if( downgradeTeamForm.length > 0 ) {
    new DowngradeTeamForm($(downgradeTeamForm[0]));
  }

  /* Cancel Downgrade Team */
  var removeDowngrade = $('.js-remove-team-downgrade');
  if(removeDowngrade.length > 0) {
    var wrapper = removeDowngrade.parents('.js-dynamic-content');
    removeDowngrade.on('click', function(event){
      event.preventDefault();
      wrapper.addClass('dynamic-content--is-loading');
      ajax('cancelDowngradeTeam', '', function(data){
        location.reload();
      }, function(data){
        scrollUp();
        wrapper.removeClass('dynamic-content--is-loading');
        toggleAlert($('.js-alert--error'), true);
      });
    });
  }

  /* Upgrade Team */
  var UpgradeTeamForm = function(element) {
    this.element = element;
    this.alerts = this.element.siblings('.js-upgrade-form-alert');
    this.alertSuccess = this.alerts.find('.js-alert--success');
    this.alertError = this.alerts.find('.js-alert--error');

    this.alertNeedDowngrade = this.element.find('.js-alert--downgrade-error');

    this.teamSeats = this.element.find('#teamSeats');

    this.teamMinSeats = parseInt(this.teamSeats.attr('min'));

    this.dynamicContent = this.element.find('.js-dynamic-content');

    this.recapSubtot = this.element.find('.js-recap__subtot');
    this.recapCredit = this.element.find('.js-recap__credit');
    this.recapTot = this.element.find('.js-recap__tot');
    this.recapTotDiscounted = this.element.find('.js-recap__tot-discounted');

    this.submitButton = this.element.find('.js-upgrade-form__submit');
    initUpgradeTeamEvents(this);
  };

  function initUpgradeTeamEvents(form) {
    getUpgradeCost(form);

    form.teamSeats.on('input', function(event){ // new seat number selected
      var seats = form.teamSeats.val();
      if(seats == ''  || isNaN(seats)) {
        seats = form.teamMinSeats;
        form.teamSeats.val(seats);
      }
      seats = parseInt(seats);
      var needDowngrade = seats < form.teamMinSeats - 1;
      form.alertNeedDowngrade.toggleClass('alert--is-visible', needDowngrade);
      if(!needDowngrade) getUpgradeCost(form);
      SaveAlert.yes();
    });

    form.element.on('submit', function(event) {
      event.preventDefault();
      toggleAlert(form.alertSuccess, false);
      toggleAlert(form.alertError, false);
      form.submitButton.addClass('btn--state-b');
      var seats = form.teamSeats.val();
      if(seats >= form.teamMinSeats ) {
        submitUpgradeForm(form, false);
      } else {
        form.submitButton.removeClass('btn--state-b');
        scrollUp(form.teamSeats.offset().top);
        SaveAlert.no();
      }
    });

    form.element.on('showCardError', function(event) {
      scrollUp();
      formShowError(form);
    });

    form.element.on('actionRequiredSuccess', function(event) {
      submitUpgradeForm(form, true);
    });
  };

  function getUpgradeCost(form) {
    form.dynamicContent.addClass('dynamic-content--is-loading').removeClass('dynamic-content--has-error');
    var seats = form.teamSeats.val();
    var credit = 0;
    ajax('previewProration', form.element.serialize(), function(data){
      credit = (parseInt(data['response']['reply'])/100).toFixed(2);
      previewUpgradeCost(form, seats, credit);
      form.dynamicContent.removeClass('dynamic-content--is-loading');
    }, function(data){
      form.dynamicContent.removeClass('dynamic-content--is-loading').addClass('dynamic-content--has-error');
    });
  };

  function previewUpgradeCost(form, seats, credit) {
    var subTot = getTeamPrice(seats),
      tot = (subTot - credit).toFixed(2);
    // var discountPercentage = 0.75;
    var discountPercentage = 1;
    form.recapSubtot.text(subTot.toFixed(2));
    form.recapCredit.text(tot);
    form.recapTot.text(credit);
    if(form.recapTotDiscounted.length > 0) form.recapTotDiscounted.text((credit*discountPercentage).toFixed(2));
  };

  function submitUpgradeForm(form, bool) {
    var string = bool ? '&3dver=verified': '';
    ajax('upgradeTeam', form.element.serialize()+string, function(data){
      formShowSuccess(form);
      SaveAlert.no();
    }, function(data){
      if(data.status == 2) {
        $('.js-stripe-element').trigger('requireAction', [data.response]);
      } else {
        scrollUp();
        formShowError(form);
      }
      SaveAlert.no();
    });
  };

  var upgradeTeamForm = document.getElementsByClassName('js-upgrade-form');
  if( upgradeTeamForm.length > 0 ) {
    new UpgradeTeamForm($(upgradeTeamForm[0]));
  }

  /* Invite Team Members */
  var InviteTeamMembers = function(element) {
    this.element = element;
    this.alerts = this.element.siblings('.js-account-form-alert');
    this.alertSuccess = this.alerts.find('.js-alert--success');
    this.alertError = this.alerts.find('.js-alert--error');

    this.members = this.element.find('#teamEmails');
    this.submitButton = this.element.find('.js-invite-members__submit');
    initInviteTeamMembers(this);
  };

  function initInviteTeamMembers(form) {
    // invite new members
    form.element.on('submit', function(event){
      event.preventDefault();
      //toggle alerts + show loader
      toggleAlert(form.alertSuccess, false);
      toggleAlert(form.alertError, false);
      form.submitButton.addClass('btn--state-b');
      updateTeamMembers(form);
    });
    //show alert if user tries to leave the page without saving
    form.members.on('change', function(event){
      SaveAlert.yes();
    });
  };

  function updateTeamMembers(form) {
    ajax('inviteTeamMembers', form.element.serialize(), function(data){
      formShowSuccess(form);
    }, function(data){
      inputError(form.teamName, 1, data.response.indexOf('name_1') != -1);
      formShowError(form);
    });
  };

  var inviteTeamMembers = document.getElementsByClassName('js-invite-members');
  if(inviteTeamMembers.length > 0) {
    new InviteTeamMembers($(inviteTeamMembers[0]));
  }

  /* Join Team */
  var JoinTeam = function(element) {
    this.element = element;
    this.alertError = $('.js-join-team-alert');
    
    this.password = this.element.find('#inputPassword');
    this.submitButton = this.element.find('.js-join-team__submit');
    initJoinTeam(this);
  };

  function initJoinTeam(form) {
    // check password
    form.password.on('change', function(event){
      inputError(form.password, 1, !checkPasswordFormat(form.password.val()));
    });

    form.element.on('submit', function(event){
      event.preventDefault();
      //toggle alerts + show loader
      toggleAlert(form.alertError, false);
      form.submitButton.addClass('btn--state-b');
      ajax('joinTeam', form.element.serialize(), function(data){
        location.href = data.response;
      }, function(data){
        if(data.response.indexOf('user_password_1') != -1) {
          inputError(form.password, 1, true);
        } else if(data.response.indexOf('user_password_2') != -1) {
          inputError(form.password, 2, true);
        }
        formShowError(form);
      });
    });
  };

  var joinTeam = document.getElementsByClassName('js-join-team');
  if(joinTeam.length > 0) {
    new JoinTeam($(joinTeam[0]));
  }

  /* Leave Team */
  var leaveTeam = document.getElementsByClassName('js-leave-team');
  
  function initLeaveTeam(link) {
    link.addEventListener('click', function(event){
      event.preventDefault();
      if (window.confirm("Are you sure you want to leave "+link.getAttribute('data-label')+"?")) {
				ajax('leaveTeam', 'teamID='+link.getAttribute('data-team'), function(data){
          location.href = 'account/account-settings';
        }, function(data){
          scrollUp();
          toggleAlert($('.js-alert--error'), true);
        });
      }
    });
  };

  if(leaveTeam.length > 0) {
    for(var i=0; i < leaveTeam.length; i++) {(function(i){
      initLeaveTeam(leaveTeam[i]);
    })(i);}
  }

  /* Show Card Info */
  var showCreditCard = document.getElementsByClassName('js-show-card-info'); 
  if(showCreditCard.length > 0) {
    Util.addClass(showCreditCard[0], 'btn--state-b');
    var cardWrapper = document.getElementsByClassName('js-card-info-wrapper')[0];
    ajax('showCreditCard', '', function(data){
      Util.removeClass(cardWrapper, 'is-hidden');
      Util.addClass(showCreditCard[0], 'is-hidden');
      cardWrapper.innerHTML = '**** **** **** '+data.response['last4']+' <br>Expires '+data.response['exp_month']+'/'+data.response['exp_year']+' <br>';
    }, function(data){
      Util.removeClass(cardWrapper, 'is-hidden');
      Util.removeClass(showCreditCard[0], 'btn--state-b');
      Util.addClass(showCreditCard[0], 'is-hidden');
      cardWrapper.innerHTML = '<p class="text-sm">⚠️ We were not able to retrieve your card info. Please contact us at help@codyhouse.co if the problem persists.</p>';
    });
  }

  /* Cancel Account */
  var CancelAccount = function(element) {
    this.element = element;
    this.alerts = $('.js-cancel-form-alert');
    this.alertSuccess = this.alerts.find('.js-alert--success');
    this.alertError = this.alerts.find('.js-alert--error');

    this.submitButton = this.element.find('.js-cancel-form__submit');
    initCancelAccount(this);
  };

  function initCancelAccount(form) {
    form.element.on('submit', function(event){
      event.preventDefault();
      //toggle alerts + show loader
      toggleAlert(form.alertSuccess, false);
      toggleAlert(form.alertError, false);
      form.submitButton.addClass('btn--state-b');
      ajax('cancelAccount', '', function(data){
        formShowSuccess(form);
      }, function(data){
        formShowError(form);
      });
    });
  };

  var cancelAccount = document.getElementsByClassName('js-cancel-form');
  if(cancelAccount.length > 0) {
    new CancelAccount($(cancelAccount[0]));
  }

  /* Reactivate Account */
  var ReactivateAccount = function(element) {
    this.element = element;
    this.alerts = $('.js-reactivate-form-alert');
    this.alertSuccess = this.alerts.find('.js-alert--success');
    this.alertError = this.alerts.find('.js-alert--error');

    this.submitButton = this.element.find('.js-reactivate-form__submit');
    initReactivateAccount(this);
  };

  function initReactivateAccount(form) {
    form.element.on('submit', function(event){
      event.preventDefault();
      //toggle alerts + show loader
      toggleAlert(form.alertSuccess, false);
      toggleAlert(form.alertError, false);
      form.submitButton.addClass('btn--state-b');
      ajax('reactivateAccount', '', function(data){
        formShowSuccess(form);
      }, function(data){
        formShowError(form);
      });
    });
  };

  var reactivateAccount = document.getElementsByClassName('js-reactivate-form');
  if(reactivateAccount.length > 0) {
    new ReactivateAccount($(reactivateAccount[0]));
  }

  /* Change credit card */
  var UpdateCard = function(element) {
    this.element = element;
    this.alerts = $('.js-update-card-form-alert');
    this.alertSuccess = this.alerts.find('.js-alert--success');
    this.alertError = this.alerts.find('.js-alert--error');
    this.alertCardError = this.element.find('.js-alert--card-error');
    this.stripeElement = this.element.find('.js-stripe-element');
    this.stripeIntent = this.element.find('#intent'); 

    this.submitButton = this.element.find('.js-update-card-form__submit');
    initUpdateCard(this);
  };

  function initUpdateCard(form) {
    form.element.on('submit', function(event){
      event.preventDefault();
      //toggle alerts + show loader
      toggleAlert(form.alertSuccess, false);
      toggleAlert(form.alertError, false);
      toggleAlert(form.alertCardError, false);
      form.submitButton.addClass('btn--state-b');
      form.stripeElement.trigger('updateCard', [form.stripeIntent.attr('data-secret')]);
    });

    form.element.on('showError', function(event){
      formShowError(form);
      // show card error message
      toggleAlert(form.alertCardError, true);
    });

    form.element.on('showSuccess', function(event, intent){
      processUpdateCard(form, intent);
    });
  };

  function processUpdateCard(form, intent) {
    ajax('updateCard', 'intent='+intent, function(data){
      formShowSuccess(form);
    }, function(data){
      formShowError(form);
    });
  };

  var updateCard = document.getElementsByClassName('js-update-card-form');
  if(updateCard.length > 0) {
    new UpdateCard($(updateCard[0]));
  }

  /* Edit Project */
  var EditProject = function(element) {
    this.element = element;
    this.id = this.element.getAttribute('data-project');
    this.label = document.getElementById('project-label-'+this.id);
    this.link = this.label.closest('.js-projects-gallery__title');
    initEditProject(this);
  };

  function initEditProject(editProject) {
    editProject.element.addEventListener('click', function(event){
      event.preventDefault();
      editProject.label.setAttribute('contenteditable', 'true');
      Util.addClass(editProject.label, 'js-editing');
      if(editProject.link) Util.addClass(editProject.link, 'projects-gallery__title--editing js-is-editing');
      selectEditableText(editProject.label);
      // close tooltip
      var menuTooltip = editProject.element.closest('.js-menu-popup');
      if(menuTooltip) Util.removeClass(menuTooltip, 'menu-popup--is-visible');
    });

    editProject.label.addEventListener('focusout', function(event){
			renameProject(event, editProject);
		});
		editProject.label.addEventListener('keypress', function(event){
			if ( (event.key && event.key.toLowerCase() === "enter") || (event.keyCode && event.keyCode === "13")) {
				event.preventDefault();
				renameProject(event, editProject);
			}
    });
    
    function renameProject(event, editProject) {
      if(!Util.hasClass(editProject.label, 'js-editing')) return;
      var label = event.currentTarget.textContent.trim() == '' ? 'Untitled' : event.currentTarget.textContent.trim();
      ajax('editProject', 'projectName='+label+'&project_id='+editProject.id, function(data){
        // first reset cursor to first character
        moveCursorToStartEditableText(editProject.label);
        if(editProject.link) Util.removeClass(editProject.link, 'projects-gallery__title--editing js-is-editing');
        Util.removeClass(editProject.label, 'js-editing');
        editProject.label.removeAttribute('contenteditable');
        // reset 
        // editProject.label.offsetWidth;
        updateLabelProjectUi(editProject, label);
      }, function(data){}); 
    };

    function updateLabelProjectUi(editProject, label) {
      if(editProject.link) editProject.link.setAttribute('data-label', 'Explore '+label);
      if(editProject.label.textContent != label) editProject.label.textContent = label;
      editProject.label.closest('.js-prj-wrapper').getElementsByClassName('js-menu-popup')[0].getElementsByClassName('js-delete-project')[0].setAttribute('data-label', label);
    };
  }

  function selectEditableText(element) {
    var doc = document;
    if (doc.body.createTextRange) {
      var range = document.body.createTextRange();
      range.moveToElementText(element);
      range.select();
    } else if (window.getSelection) {
      var selection = window.getSelection();        
      var range = document.createRange();
      range.selectNodeContents(element);
      selection.removeAllRanges();
      selection.addRange(range);
    }
  };

  function moveCursorToStartEditableText(element) {
    var range = document.createRange();
    var sel = window.getSelection();
    // range.setStart(element.childNodes[2], 1);
    range.setStart(element.childNodes[0], 2);
    range.collapse(true);
    sel.removeAllRanges();
    sel.addRange(range);
  };

  var editProject = document.getElementsByClassName('js-project-modify');
  if( editProject.length > 0 ) {
		for( var i = 0; i < editProject.length; i++) {
			(function(i){new EditProject(editProject[i]);})(i);
		}
  }

  window.EditProject = EditProject;

  /* Create Projects */
  var CreateProject = function(element) {
    this.element = element;
    this.alerts = this.element.siblings('.js-account-form-alert');
    this.alertSuccess = this.alerts.find('.js-alert--success');
    this.alertError = this.alerts.find('.js-alert--error');

    this.label = this.element.find('#projectName');

    this.submitButton = this.element.find('.js-create-prj-form__submit');
    initCreateProject(this);
  }

  function initCreateProject(createProject) {
    createProject.element.on('submit', function(event){
      event.preventDefault();  
      var label = createProject.label.val();
      if(label == '') label = 'Untitled'; 
      toggleAlert(createProject.alertError, false);
      createProject.submitButton.addClass('btn--state-b');
      ajax('createProject', 'new-label='+label, function(data){
        cdSetCookie('projectCreated', 'created');
        location.href = 'ds/components';
      }, function(data){
        formShowError(createProject);
      });
    });
  };

  var createProjects = document.getElementsByClassName('js-create-project');
  if( createProjects.length > 0 ) {
		for( var i = 0; i < createProjects.length; i++) {
			(function(i){new CreateProject($(createProjects[i]));})(i);
		}
  }

  // take care of showing flex message banner if project was created in the prev session
  if(cdGetCookie('projectCreated')) {
    $('.js-flash-message--create-prj').trigger('showFlashMessage');
    cdDeleteCookie('projectCreated');
  }

  /* Delete a Project */
  function initDeleteProject(btn) {
    btn.addEventListener('click', function(event){
      event.preventDefault();
      if(IS_FREE == 1) {
        // trigger proRequired modal
        proRequiredModalStart(event.currentTarget);
      } else {  
        if (window.confirm("Are you sure you want to delete the project "+btn.getAttribute('data-label')+"?")) { 
          deleteProject(btn);
        }
      }
    });
  };

  function deleteProject(btn) {
    ajax('deleteProject', 'project_id='+btn.getAttribute('data-project'), function(data){
      location.href = 'ds/all-projects';
    }, function(data){
      location.href = 'ds/all-projects';
    });
  };

  var deleteProjects = document.getElementsByClassName('js-delete-project');
  if( deleteProjects.length > 0 ) {
		for( var i = 0; i < deleteProjects.length; i++) {
			(function(i){initDeleteProject(deleteProjects[i]);})(i);
		}
  }

  window.initDeleteProject = initDeleteProject;

  function initSelectProject(selectProject) {
    selectProject.addEventListener('click', function(event){
      event.preventDefault();
      if(Util.hasClass(selectProject, 'js-is-editing') || selectProject.closest('li[data-modal="modalProRequired"]')) return;
      var link = event.currentTarget.getAttribute('href');
      selectProjectFn(selectProject.getAttribute('data-project-id'), link);
    });
  };

  function selectProjectFn(id, link) {
    ajax('selectProject', 'project_id='+id, function(data){
      location.href = link;
    }, function(data){
      location.href = link;
    });
  }

  var selectProject = document.getElementsByClassName('js-select-project');
  if( selectProject.length > 0 ) {
    for( var i = 0; i < selectProject.length; i++) {
			(function(i){initSelectProject(selectProject[i]);})(i);
		}
  }

  window.initSelectProject = initSelectProject;

  /* Duplicate Projects */
  function initDuplicateProject(duplicateProject) {
    var link = duplicateProject.getAttribute('data-url');
    duplicateProject.addEventListener('click', function(event){
      event.preventDefault();
      if(IS_FREE == 1) {
        // trigger proRequired modal
        proRequiredModalStart(event.currentTarget);
      } else {  
        ajax('duplicateProject', 'project_id='+duplicateProject.getAttribute('data-project'), function(data){
          cdSetCookie('projectDuplicated', 'duplicated');
          // check if we need to select the project as well
          if(duplicateProject.closest('.js-menu-popup--single-page')) {
            selectProjectFn(data.response, 'ds/components');
          } else {
            location.href = link;
          }
        }, function(data){
          location.href = link;
        });
      }
    });

    // take care of showing flex message banner if project was duplicated in the prev session
    if(cdGetCookie('projectDuplicated')) {
      $('.js-flash-message--duplicate-prj').trigger('showFlashMessage');
      $('.js-item-gallery--prj').find('.js-prj-wrapper').eq(0).addClass('project-gallery__item--focus');
      cdDeleteCookie('projectDuplicated');
    }
  };

  var duplicateProjects = document.getElementsByClassName('js-duplicate-project');
  if( duplicateProjects.length > 0 ) {
    for( var i = 0; i < duplicateProjects.length; i++) {
			(function(i){initDuplicateProject(duplicateProjects[i]);})(i);
		}
  }

  window.initDuplicateProject = initDuplicateProject;

  /* Export Projects */
  function initExportProject(exportProject) {
    exportProject.addEventListener('click', function(event){
      event.preventDefault();
      Util.removeClass(exportProject.closest('.js-menu-popup'), 'menu-popup--is-visible');
      if(IS_FREE == 1) {
        // trigger proRequired modal
        proRequiredModalStart(event.currentTarget);
      } else {  
        sumbitExportProject(exportProject, false, ['colors', 'buttons', 'forms', 'spacing', 'typography', 'shared_styles'], false, function() {
          $('.js-flash-message--project-export').trigger('showFlashMessage');
        }, function(){});
      }
    });
  };

  function sumbitExportProject(exportProject, favsList, globalsList, configList, cb, cbSuccess) {
    // show progress bar and trigger filling effect
    var progressBar = document.getElementsByClassName('js-progress-bar--export')[0];
    Util.removeClass(progressBar, 'progress-bar--is-hidden');
    var progressId = initExportProgressBar(progressBar);
    // get globals
    var prj_id = exportProject.getAttribute('data-project');
    var dataString = 'project_id='+prj_id;
    if(favsList) dataString = dataString+ '&favs='+JSON.stringify(favsList);
    if(configList) dataString = dataString+ '&config='+JSON.stringify(configList);
    getGlobalsCode(prj_id, globalsList, configList, function(globalsString){
      if(globalsString ===  false) {
        $('.js-flash-message--project-export').trigger('showFlashMessage');
        return;
      }
      ajax('exportProject', dataString+globalsString, function(data){
        // complete loading function and download
        completeExportProgressBar(progressBar, progressId, data.response, cbSuccess);
      }, function(data){
        cb(); // callback for error
        clearInterval(progressId);
        Util.addClass(progressBar, 'progress-bar--is-hidden');
      });
    });
  };

  function initExportProgressBar(progressBar) {
    var start = 90;
    var event = new CustomEvent('updateProgress', {detail: {value: start, duration: 2000}});
    progressBar.dispatchEvent(event);
    var id = setInterval(function(){
      start = start + 2;
      if(start < 99) {
        var event = new CustomEvent('updateProgress', {detail: {value: start, duration: 2000}});
        progressBar.dispatchEvent(event);
      } else {
        clearInterval(id);
      }
    }, 2000);
    return id;
  };

  function completeExportProgressBar(progressBar, progressId, url, cbSuccess) {
    clearInterval(progressId);
    var event = new CustomEvent('updateProgress', {detail: {value: 100, duration: 500}});
    var timeoutId = false;
    progressBar.dispatchEvent(event);
    // progress bar complete - trigger download
    var handle = function(){
      progressBar.getElementsByClassName('progress-bar__fill')[0].style.width = '0%';
      Util.addClass(progressBar, 'progress-bar--is-hidden');
      location.href = url; 
      cbSuccess();
      if(timeoutId) {
        clearInterval(timeoutId);
        timeoutId = false;
      }
    };
    progressBar.addEventListener('progressCompleted', handle, {'once': true});
    // fallback if progressCompleted event is not emitted
    timeoutId = setTimeout(function(){
      progressBar.getElementsByClassName('progress-bar__fill')[0].style.width = '0%';
      Util.addClass(progressBar, 'progress-bar--is-hidden');
      location.href = url; 
      cbSuccess();
      progressBar.removeEventListener('progressCompleted', handle);
    }, 3000); 
  };

  function getGlobalsCode(id, globalsList, configList, cb) {
    // if the project is the selected one -> use the PROJECT variable, otherwise get project info
    // get typography default content first
    ajax('getGlobalCode', 'component=typography', function(data){
      var typographyFile = data.response;
      if(PROJECT && PROJECT.id == id) {cb(getGlobalsForExporting(PROJECT, typographyFile, globalsList, configList));}
      else {
        ajax('getProjectByID', 'project_id='+id, function(data){
          cb(getGlobalsForExporting(JSON.parse(data.response), typographyFile, globalsList, configList));
        }, function(data){
          $('.js-flash-message--project-export').trigger('showFlashMessage');
        });
      }
    }, function(data){
      cb(false);
    });
  };

  function getGlobalsForExporting(project, typographyBasicCode, globalsList, configList) {
    var code = '';
    var customColors = '';
    var mainCustomColors = '';
    var feedbackCustomColors = '';
    var styleGuide = configList && configList.includes('style-guide');
    var styleGuideCode = '';
    // check if globals have been saved and get new code 
    if(project.colors && project.colors != '' && globalsList.indexOf('colors') > -1) {
      var colors = new window.Colors($('.js-colors'), true);
      colors.initColorsFromProject(JSON.parse(project.colors));
      colors.setBtnColorCustomNiceLabels();
      var colorsGlobal = colors.updateCopyCode();
      code = code+'&colors='+encodeURIComponent(colorsGlobal);
      mainCustomColors = colors.getCustomColorClasses(false);
      feedbackCustomColors = colors.getCustomColorClasses(true);
      customColors = mainCustomColors + feedbackCustomColors;
      if(customColors != '')  customColors = '\n\n//colors\n'+customColors;
      if(styleGuide) {
        code = code+'&mainCustomColors='+encodeURIComponent(mainCustomColors)+'&feedbackCustomColors='+encodeURIComponent(feedbackCustomColors);
        if(colors.themes.length > 1) {
          code = code+'&colorThemes='+JSON.stringify(colors.themes);
        }
        // get colors code
        styleGuideCode = styleGuideCode + encodeURIComponent(getColorsStyleGuide(colorsGlobal));
      }
    } else if(styleGuide) {
      var colors = new window.Colors($('.js-colors'), true);
      colors.themes = ['Default'];
      colors.initColors(0);
      var colorsGlobal = colors.updateCopyCode();
      // get colors code
      styleGuideCode = styleGuideCode + encodeURIComponent(getColorsStyleGuide(colorsGlobal));
    }

    // if(project.typography && project.typography != '' && globalsList.indexOf('typography') > -1) {
    if(globalsList.indexOf('typography') > -1) {
      var typography = new window.Typography($('.js-typography'), true);
      if(project.typography && project.typography != '') {
        typography.initTypographyFromProject(JSON.parse(decodeSafeURIComponent(project.typography)));
      } else {
        typography.initTypography();
      }
      // code = code+'&typography='+encodeURIComponent(typography.updateCopyCode(typographyBasicCode)+customColors);
      var typographyCode = typography.updateCopyCode(typographyBasicCode);
      code = code+'&typography='+encodeURIComponent(typographyCode);
      if(styleGuide) {
        // font link
        code = code+'&fontCode='+encodeURIComponent(typography.fontCode);
        if(typography.fontFamilies.length > 0) {
          code = code+'&fontFamilies='+encodeURIComponent(JSON.stringify(typography.fontFamilies))+'&fontFamilyLabels='+encodeURIComponent(JSON.stringify(typography.fontFamilyLabels));
        }
        // get css code for style guide
        styleGuideCode = styleGuideCode + encodeURIComponent(getTypoStyleGuide(typography));
      }
    }

    if(globalsList.indexOf('buttons') > -1) {
      var buttons = new window.Buttons($('.js-button'), true);
      if(project.buttons && project.buttons != '') {
        buttons.initButtonsFromProject(JSON.parse(decodeSafeURIComponent(project.buttons)));
      } else {
        buttons.initBtnStyleArray();
        buttons.initDefaultButtons();
      }
      code = code+'&buttons='+encodeURIComponent(buttons.updateButtonsCopyCode(''));
      if(buttons.customBtns && buttons.customBtns.length > 0 && styleGuide) {
        code = code+'&customButtons='+JSON.stringify(buttons.customBtns);
      }
      if(styleGuide) {
        styleGuideCode = styleGuideCode + encodeURIComponent(getButtonsStyleGuide(buttons));
      }
    }

    // if(project.form && project.form != '' && globalsList.indexOf('forms') > -1) {
    if(globalsList.indexOf('forms') > -1) {
      var forms = new window.Buttons($('.js-forms'), true);
      if(project.form && project.form != '') {
        forms.initFormsFromProject(JSON.parse(decodeSafeURIComponent(project.form)));
      } else {
        forms.initFormsStyleArray();
        forms.initDefaultForms();
      }
      code = code+'&forms='+encodeURIComponent(forms.updateFormsCopyCode(''));
      if(styleGuide) {
        styleGuideCode = styleGuideCode + encodeURIComponent(getFormsStyleGuide(forms));
      }
    }

    if(project.spacing && project.spacing != '' && globalsList.indexOf('spacing') > -1) {
      var spacing = new window.Spacing($('.js-spacing'), true);
      spacing.initSpacingFromProject(JSON.parse(decodeSafeURIComponent(project.spacing)));
      var spacingCode = spacing.updateCopyCode();
      code = code+'&spacing='+encodeURIComponent(spacingCode);
      if(styleGuide) {
        styleGuideCode = styleGuideCode + encodeURIComponent(getSpaceStyleGuide(spacingCode));
      }
    } else if(styleGuide) {
      var spacing = new window.Spacing($('.js-spacing'), true);
      spacing.initSpacing();
      var spacingCode = spacing.updateCopyCode();
      styleGuideCode = styleGuideCode + encodeURIComponent(getSpaceStyleGuide(spacingCode));
    }

    if(globalsList.indexOf('shared_styles') > -1) {
      console.log('includign shared styles');
      var sharedStyles = new window.SharedStyle($('.js-shared-styles'), true);
      if(project.shared_styles && project.shared_styles != '') {
        sharedStyles.initStyleFromProject(JSON.parse(decodeSafeURIComponent(project.shared_styles)));
      } else {
        // sharedStyles.initBtnStyleArray();
        sharedStyles.initDefaultStyle();
      }
      code = code+'&shared_styles='+encodeURIComponent(sharedStyles.updateStyleCopyCode(''));
      // if(sharedStyles.customBtns && sharedStyles.customBtns.length > 0 && styleGuide) {
      //   code = code+'&customButtons='+JSON.stringify(sharedStyles.customBtns);
      // }
      // add shared styles to the style guide
      // if(styleGuide) {
      //   styleGuideCode = styleGuideCode + encodeURIComponent(getButtonsStyleGuide(buttons));
      // }
    }

    if(styleGuide) {
      code = code+'&styleGuideCss='+styleGuideCode;
    }
    return code;
  }

  function getColorsStyleGuide(code) {
    var array = code.split('@include defineColorHSL(');
    code = array[0];
    for(var i = 1; i < array.length; i++) {
      if(array[i].indexOf('--color') > -1) {
        var colorDef = array[i].split(');', 1);
        var colorHslDef = getColorCSSStleGuide(colorDef[0]);
        code = code +array[i].replace(colorDef[0], colorHslDef);
      } else {
        code = code +array[i];
      }
    }
    // remove SCSS comments
    code = removeScssComments(code);
    code = code.replace(/alpha\(/g, '');
    code = code.replace(/, var\(--bg-o, 1\)\)/g, '');
    return code;
  };

  function getColorCSSStleGuide(string) {
    var code = string.replace(',', ': hsl(');
    var hsl = string.split(',');
    if(hsl.length == 4) {
      code = hsl[0]+'-h: '+hsl[1]+'; '+ hsl[0]+ '-s: '+hsl[2]+'; '+hsl[0] +'-l: '+hsl[3]+'; ' + code;
    }
    return code;
  };

  function getTypoStyleGuide(typography) {
    return typography.iframe.loadTypographyCssVarStyleGuide(typography) + typography.iframe.loadTypographyStyleStyleGuide(typography);
  };

  function getButtonsStyleGuide(buttons) {
    return buttons.iframe.loadButtonsStyleStyleGuide(buttons);
  };

  function getFormsStyleGuide(forms) {
    return forms.iframe.loadFormsStyleStyleGuide(forms);
  };

  function getSpaceStyleGuide(spacing) {
    if(spacing.indexOf('@supports(--css: variables)') < 0) return;
    var spacingArr = spacing.split('@supports(--css: variables)');
    var spacingRes = replaceSpacingMq(spacingArr[1]);
    return spacingArr[0] + spacingRes;
  };

  function replaceSpacingMq(string) {
    var mq = ['xs', 'sm', 'md', 'lg', 'xl'],
      mqValues = ['32', '48', '64', '80', '90'],
      code = '';
    for(var i = 0; i < mq.length; i++) {
      code = code + getMqSpacingCode(string, mq[i], mqValues[i]);
    }
    return code;
  };

  function getMqSpacingCode(string, mq, mqVal) {
    if(string.indexOf('@include breakpoint('+mq+')') < 0) return '';
    var array = string.split('@include breakpoint('+mq+')')[1].split('}')[0];
    return '@media (min-width:'+mqVal+'rem) {:root '+array+'}}'; 
  };

  function removeScssComments(code) {
    var comments = code.split('//');
    for(var i = 0; i < comments.length; i++) {
      if(i == 0) code = comments[0];
      else {
        var comment = comments[i].split(/\r?\n/, 1);
        code = code + comments[i].replace(comment, '');
      }
    }
    return code;
  };

  function decodeSafeURIComponent(string) {
		return  decodeURIComponent(string.replace(/%"/g, '%25"'));
	};

  var exportProjects = document.getElementsByClassName('js-export-project');
  if( exportProjects.length > 0 ) {
    for( var i = 0; i < exportProjects.length; i++) {
			(function(i){initExportProject(exportProjects[i]);})(i);
		}
  }

  window.initExportProject = initExportProject;

  /* Export Page */
  var ExportProjectForm = function(element) {
    this.element = element;
    this.alerts = this.element.siblings('.js-form-alert');
    this.alertSuccess = this.alerts.find('.js-alert--success');
    this.alertError = this.alerts.find('.js-alert--error');

    this.submitButton = this.element.find('.js-export-form__submit');
    initExportProjectForm(this);
  };

  function initExportProjectForm(form) {
    form.element.on('submit', function(event){
      event.preventDefault();
      if(IS_FREE == 1) {
        // trigger proRequired modal
        proRequiredModalStart(event.currentTarget);
      } else {  
        submitExportProjectForm(form);
      }
    });
  }

  function submitExportProjectForm(form) {
    event.preventDefault();
    //toggle alerts + show loader
    toggleAlert(form.alertSuccess, false);
    toggleAlert(form.alertError, false);
    form.submitButton.addClass('btn--state-b');
    var data = form.element.serializeArray();
    var globalsList = [];
    var favsList = [];
    var configList = [];
    for(var i = 0; i < data.length; i++) {
      if(data[i]['name'] == 'globals[]') globalsList.push(data[i]['value']);
      if(data[i]['name'] == 'favs[]') favsList.push(data[i]['value']);
      if(data[i]['name'] == 'config[]') configList.push(data[i]['value']);
    }

    sumbitExportProject(form.element[0], favsList, globalsList, configList, function(){
      formShowError(form); // this is in case or errors
    }, function(){
      form.submitButton.removeClass('btn--state-b');
    });

    
  };

  var exportForms = document.getElementsByClassName('js-export-form');
  if( exportForms.length > 0 ) {
    new ExportProjectForm($(exportForms[0]));
  } 

  /* misc functions */

  function inputError(element, error, show){
    show ? element.attr('aria-invalid', 'true') : element.removeAttr('aria-invalid');
    var errorMessages = element.parents('.js-signup-form__input-wrapper').eq(0).find('.form-label__error');
    errorMessages.removeClass('form-label__error--is-visible');
    errorMessages.eq(error-1).toggleClass('form-label__error--is-visible', show);
  };

  function checkEmailFormat(email){
    var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(email);
  };

  function checkPasswordFormat(password){
    return password.length >= PASSWORD_MIN_LENGTH;
  };

  function checkEmailAvailability(email, callback){
    ajax('checkEmailAvailability', { email: email }, function(){ callback(true); }, function(){ callback(false); });
  };

  function toggleAlert(alert, bool){ 
    //false -> hide, true -> show
    alert.toggleClass('alert--is-visible', bool);
  };

  function ajax(ajax, options, callback, fallback){

    if(options == undefined)  options  = null;
    if(callback == undefined) callback = function(){};
    if(fallback == undefined) fallback = function(){};

    $.ajax({
      url      : AJAX_URL+ajax,
      data     : options,
      type     : 'POST',
      dataType : 'json',
      cache    : 'false',
      success: function(data){
        data.status == 0 ?
        callback(data) :
        fallback(data);
      }
    });
  };

  function scrollUp(top){
    var offset = 0;
    if(top) offset = top;
    $('html, body').animate({scrollTop:offset},300);
  };

  function inputResetError(element) {
    element.removeAttr('aria-invalid');
    element.parents('.js-signup-form__input-wrapper').find('.form-label__error--is-visible').removeClass('form-label__error--is-visible');
  };

  // Save Alert
  var SaveAlert = {
    yes: function(){ window.onbeforeunload = function() { return true; }; },
    no : function(){ window.onbeforeunload = null; }
  };

  /**********************
    add component to favs
  ***********************/
  var bookmarkComps = $('.js-bookmark'),
  //make sure user waits for the bookmark to be saved before doing another action
    savingBookmark = false;
  if(bookmarkComps.length > 0) {
    var selectedComp;
    bookmarkComps.on('click', '.js-bookmark__btn', function(event) {
      var target = $(event.currentTarget);
      selectedComp = target.attr('data-comp');
      if(IS_LOGGED == 0) {
        // trigger logIn modal
        logInModalStart(event.currentTarget);
      } else if( selectedComp && !isNaN(selectedComp) ) {
        if(savingBookmark) return;
        savingBookmark = true;
        var listItem = target.parents('.js-ds-comp-preview');
        updateBookmarkUi(target, listItem);
        toggleBookmark(selectedComp, function(bool, count){
          if(listItem.length > 0 ) {
            $('.js-ds-sub-nav__fav-list-counter').trigger('updateCount', [count]);
          }
        });
      }
    });
  }

  function updateBookmarkUi(target, listItem) {
    var listItem = target.parents('.js-ds-comp-preview');
    (listItem.length > 0) 
      ? listItem.eq(0).toggleClass('ds-comp-preview--marked')
      : target.toggleClass('selected');
  };

  
  function toggleBookmark(comId, callback) {
    $.ajax({
      url      : 'post/toggleBookmark',
      data     : 'compId='+comId+'&projectId='+parseInt(PROJECT.id),
      type     : 'POST',
      dataType: 'json',
      cache   : 'false',
    }).done(function(data){
      if(data.status == 1) {
        $('.js-flash-message--project-update').trigger('showFlashMessage');
      } else {
        callback(data.response[0], data.response[1].length);
      }
    }).fail(function(data){
      $('.js-flash-message--project-update').trigger('showFlashMessage');
    }).always(function(data){
      savingBookmark = false;
    });
  };

  //login modal
  var loginModal = $('.js-modal[data-modal-trigger="modalRegistrationRequired"]');
  if( loginModal.length > 0) {
    var sections = loginModal.find('.js-modal-content');
    loginModal.on('click', '.js-login-trigger', function(event){
      event.preventDefault();
      sections.eq(0).addClass('modal__content--is-hidden');
      sections.eq(1).removeClass('modal__content--is-hidden');
    });
  }

  //load project after login (for global pages only)
  function loadProjectAfterLogin(user_id, callback) {
    ajax('getProjectAfterLogin', 'userId='+user_id, function(data){
      PROJECT = JSON.parse(data.response);
      callback();
    });
  };
}());

function logInModalStart(target) {
  $('[data-modal-trigger="modalRegistrationRequired"]').trigger('openModal', [target]);
  $('.js-login-form').trigger('loginModal', [target]);
};

function logInModalClose(target) {
  $('[data-modal-trigger="modalRegistrationRequired"]').trigger('closeModal', [target]);
};

function resetLoggedInAppearance() {
  //need this for globals page only ->
  // update ui as user now is logged in
  $('body').removeClass('user--not-logged-in');
  //set free class
  if(IS_FREE == '1') {
    $('body').addClass('user--free');
  } else {
    $('body').removeClass('user--free');
    $('.js-project-breadcrumb').text(PROJECT.label).attr('href', 'account/edit-project/'+PROJECT.id);
  }
};
//google autocomplete -> we won't need this anymore
(function() {
  this.AddressAutoComplete = function(element) {
    this.element = element;
    this.address = this.element.find('.js-autocomplete__address');
    this.componentForm = {
      street_number: 'short_name',
      route: 'long_name',
      locality: 'long_name',
      postal_town: 'long_name', //patch an error with city name not being returned
      administrative_area_level_1: 'short_name',
      country: 'long_name',
      postal_code: 'short_name'
    };

    this.city = this.element.find('#accountCity');
    this.state = this.element.find('#accountState');
    this.zip = this.element.find('#accountZip');
    this.country = this.element.find('#accountCountry');
    this.autocomplete;

    this.initAutocomplete();
  };

  AddressAutoComplete.prototype.initAutocomplete = function() {
    var self = this;
    this.autocomplete = new google.maps.places.Autocomplete(
      (self.address[0]),
      { types: ['geocode'] });

    google.maps.event.addListener(self.autocomplete, 'place_changed', function() {
      self.fillInAddress();
    });

    this.address.on('focus', function(event){
      self.geolocate();
    });
  };

  AddressAutoComplete.prototype.fillInAddress = function() {
    var place = this.autocomplete.getPlace();
    var form = this.city.add(this.state).add(this.zip).add(this.address);
    form.val('');

    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      switch (addressType) {
        case 'street_number':
          this.address.val(place.address_components[i]['short_name']);
          break;
        case 'locality':
          this.city.val(place.address_components[i]['long_name']);
          break;
        case 'postal_town':
          this.city.val(place.address_components[i]['long_name']);
          break;
        case 'administrative_area_level_1':
          this.state.val(place.address_components[i]['short_name']);
          break;
        case 'postal_code':
          this.zip.val(place.address_components[i]['short_name']);
          break;
        case 'country':
          this.updateCountry(place.address_components[i]['long_name']);
          break;
        case 'route':
          this.address.val(this.address.val() + ' ' + place.address_components[i]['long_name']);
          break;
      }
    }
  };

  AddressAutoComplete.prototype.geolocate = function() {
    var self = this;
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var geolocation = new google.maps.LatLng(
          position.coords.latitude, position.coords.longitude);
        var circle = new google.maps.Circle({
          center: geolocation,
          radius: position.coords.accuracy
        });
        self.autocomplete.setBounds(circle.getBounds());
      });
    }
  };

  AddressAutoComplete.prototype.updateCountry = function(country) {
    var options = this.country.find('option');
    options.each(function(){
      ( country == $(this).text() ) ? $(this).prop('selected', 'true') : $(this).removeAttr('selected');
    });
  }
  
  var addressAutocomplete = $('.js-autocomplete');
  if(addressAutocomplete.length > 0) {
    new AddressAutoComplete(addressAutocomplete.eq(0));
  }
}());